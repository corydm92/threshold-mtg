{"version":3,"sources":["js/component-library/mui/components/Container.jsx","js/component-library/mui/components/AppBar.jsx","js/component-library/mui/components/Typography.jsx","js/component-library/mui/components/IconButton.jsx","js/routes/RouteMapper.js","js/components/MobileMenu.jsx","js/component-library/mui/components/Tabs.jsx","js/component-library/mui/components/Tab.jsx","utils/index.js","js/components/HeaderTabLinks.jsx","js/components/HeaderNavigation.jsx","js/component-library/mui/components/ToolbarMixin.jsx","js/components/HomePage.jsx","js/containers/HomePageContainer.jsx","js/component-library/mui/components/Table/EnhancedTableContainer.jsx","js/component-library/mui/components/Table/EnhancedTable.jsx","js/component-library/mui/components/Table/EnhancedTableHead.jsx","js/component-library/mui/components/Table/EnhancedTableBody.jsx","js/component-library/mui/components/Table/EnhancedTableRow.jsx","js/component-library/mui/components/Table/EnhancedTableCell.jsx","js/component-library/mui/components/Table/EnhancedTablePagination.jsx","js/component-library/mui/components/Spinner.jsx","js/component-library/mui/components/Table/EnhancedTableSortLabel.jsx","js/components/CardDetails.jsx","js/components/CardImage.jsx","js/component-library/mui/components/Tooltip.jsx","js/constants/countryCodes.js","js/components/IconHolder.jsx","js/components/CardsTable.jsx","js/components/CardsTableMobile.jsx","js/component-library/mui/components/Form/Button.jsx","js/component-library/mui/components/Form/Checkbox.jsx","js/component-library/mui/components/Form/TextField.jsx","js/component-library/mui/components/Form/Autocomplete.jsx","js/component-library/mui/components/Form/DatePicker.jsx","js/component-library/mui/components/Form/InputAdornment.jsx","js/constants/operands.js","js/components/SideBarFilterForm.jsx","js/constants/tcgPriceCategories.js","js/components/SideBarPriceRadios.jsx","js/components/SideBarQuickCalculation.jsx","js/components/SideBar.jsx","js/component-library/mui/components/Toolbar.jsx","js/components/CardsTableToolbar.jsx","js/components/TableDisplayIcons.jsx","js/constants/tableDisplayIcons.js","js/components/CardsTableToolbarMobile.jsx","js/components/CardsView.jsx","axios/index.js","normalizr/cardsNormalizr.js","normalizr/cardNormalizr.js","redux/actions.js","redux/actionTypes.js","selectors/cardsSelector.js","js/containers/CardsViewContainer.jsx","js/components/SingleCardView.jsx","selectors/cardSelector.js","js/containers/SingleCardViewContainer.jsx","js/routes/InventoryRoutes.jsx","js/containers/InventoryContainer.jsx","js/routes/Routes.jsx","js/components/MainView.jsx","js/containers/MainViewContainer.jsx","js/component-library/mui/mui-theme.js","js/App.js","redux/reducers/cardsReducer.js","redux/reducers/cardReducer.js","redux/reducers/isLoadingReducer.js","redux/reducers/specPricesReducer.js","redux/reducers/tcgPricesReducer.js","redux/reducers/tcgPriceCategory.js","redux/reducers/filterReducer.js","redux/reducers/priceCalcReducer.js","redux/reducers/collectionPriceReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["EnhancedContainer","props","className","classes","disableGutters","dataTest","style","Container","data-test","children","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","primary","main","padding","MuiAppBar","AppBar","position","Toolbar","typography","lineHeight","fontSize","largeText","htmlFontSize","fontWeight","bold","fontWeightBold","fontWeightRegular","display","alignItems","EnhancedTypography","Typography","matches","EnhancedIconButton","React","forwardRef","ref","useMediaQuery","edge","color","ariaLabel","onClick","ariaExpanded","IconButton","aria-label","aria-expanded","path","label","cards","card","breakpoints","down","up","links","MuiMenuIcon","useState","anchorEl","setAnchorEl","handleClose","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","component","Link","to","RouteMapper","indicator","text","secondary","EnhancedTabs","initialValue","value","setValue","Tabs","onChange","newValue","EnhancedTab","Tab","getCardQuantity","specPrices","totalQuantity","quantity","roundTwoDecimals","num","parseFloat","toFixed","addZeroes","dec","toString","split","len","length","Number","getPriceCategory","category","low_price","mid_price","high_price","market_price","isPositive","getPriceSpread","currentPrice","purchasePrice","replaceInCardName","cardName","target","replace","formatCardKingdomBuylistLink","replacedCardname","encodeURIComponent","formatEdhrecLink","join","getTabLinksPath","location","pathMap","pathname","startsWith","formatDateString","date","splitArray","year","month","day","tabs","HeaderTabLinks","useLocation","appBar","justifyContent","opacity","title","h5","HeaderNavigation","MobileMenu","offset","mixins","toolbar","ToolbarMixin","HomePage","connect","state","dispatch","EnhancedTableContainer","TableContainer","EnhancedTable","Table","EnhancedTableHead","TableHead","EnhancedTableBody","TableBody","borderBottom","custom","lightGray","EnhancedTableRow","id","TableRow","maxWidth","spacing","alignTop","useColor","green","red","EnhancedTableCell","colSpan","TableCell","minWidth","border","noBorder","EnhancedTablePagination","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","labelRowsPerPage","TablePagination","flexWrap","width","marginTop","CircularIndeterminate","CircularProgress","EnhancedTableSortLabel","active","direction","TableSortLabel","icon","maxHeight","textContainer","height","gridItem","fullWidth","CardDetails","setName","dateFrom","dateTo","margin","borderRadius","foilCard","backgroundImage","content","link","Image","tcgImageUrl","foil","src","alt","CardImage","EnhancedTooltip","placement","arrow","Tooltip","enterDelay","enterNextDelay","French","German","Italian","Japanese","Korean","Portuguese","Russian","Spannish","fill","blue","flag","scaleSize","bottom","left","star","gold","paddingLeft","countryCodes","language","tcgListing","cardKingdom","edhRec","tcgStore","calc","cursor","container","paddingBottom","IconHolder","tcgUrl","tcgSellerDashboardUrl","handlePriceCalc","SvgIcon","countryCode","svg","viewBox","d","transform","stroke","descendingComparator","a","b","orderBy","scrollSpace","minHeight","centerGridItem","gridContainer","stickyContainer","top","zIndex","contrastText","tableContainer","overflow","spinner","pagination","borderTop","tableHeader","paddingTop","cardDetails","MuiTableHeaders","order","onRequestSort","priceCategory","tableHeaders","isCardName","header","Grid","map","index","item","xs","key","sortDirection","property","MuiTableBody","data","setPriceCalc","tcgPrice","avgPurchasePrice","gain","gainLoss","spread","centerText","MuiTable","isLoadingCards","setOrder","setOrderBy","rowPerPage","setRowPerPage","currentPage","setCurrentPage","setData","firstRowRef","useRef","useEffect","startingIndex","endingIndex","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","Fragment","current","scrollIntoView","mobileDetailsCell","mobileImageGridItem","mobileMaxWidth","marginLeft","marginRight","textAlign","iconHolder","tableBody","marginBottom","dataSection","mobileSortValues","tertiary","common","white","EnhancedButton","buttonText","variant","Button","darkGray","EnhancedCheckbox","useClasses","checked","Checkbox","name","EnhancedTextField","required","InputLabelProps","select","helperText","params","type","InputProps","TextField","popper","EnhancedAutocomplete","options","Autocomplete","renderInput","shrink","textField","EnhancedDatePicker","EnhancedInputAdornment","start","InputAdornment","form","operandValue","formControlLabel","button","selectOperand","menuItem","spreadInput","SideBarFilterForm","cardNamesAndSets","filterValues","setFilterOptions","clearFilterOptions","isFoil","setIsFoil","setSetName","setCardName","spreadOperator","setSpreadOperator","spreadValue","setSpreadValue","gainOperator","setGainOperator","gainValue","setGainValue","tcgPriceOperator","setTcgPriceOperator","tcgPriceValue","setTcgPriceValue","setDateFrom","setDateTo","cardNameOptions","setCardNameOptions","setNameOptions","setSetNameOptions","namesAndSets","outNames","outSets","entry","set","push","uniq","FormControlLabel","control","labelPlacement","e","textContent","Operands","option","startAdornment","tcgLow","tcgMid","tcgHigh","tcgMarket","formControl","radio","light","SideBarPriceRadios","handleChange","FormControl","RadioGroup","Radio","inputContainer","paddingRight","SideBarQuickCalculation","priceCalc","tcgValue","setTcgValue","purchaseValue","setPurchaseValue","cardNameValue","setCardNameValue","updatedValue","newTcgValue","cardActions","expanded","expand","transition","transitions","create","duration","shortest","expandOpen","formLabel","body1Text","boxShadow","cardContent","filterCardContent","SideBar","setPriceCategoryLow","setPriceCategoryMid","setPriceCategoryHigh","setPriceCategoryMarket","setExpanded","Card","FormLabel","Collapse","in","timeout","CardContent","CardActions","disableSpacing","clsx","EnhancedToolbar","CardsTableToolbar","iconActive","TableDisplayIcons","activeDisplay","getClasses","selectContainer","background","SortOrderSelect","sortOptions","sortHandler","selectValue","setSelectValue","findOption","find","createSortHandler","CardsTableToolbarMobile","grid","desktopSidebar","mixin","MobileTable","setActiveDisplay","setMobileSortValues","mobileContainer","CardsTableMobile","DesktopTable","CardsTable","CardsView","axiosGET","axios","get","process","myCardsSchema","schema","Entity","cardsNormalizedData","originalData","normalize","tcg_price","spec_prices","fetchCardsData","then","res","normalizedResponse","cardsNormalizr","results","payload","setCollectionPrice","isLoadingCardsFalse","catch","err","console","error","fetchSingleCardData","cardNormalizr","result","cardEntity","entities","specPricesEntity","tcgPriceEntity","setSpecPricesSuccessful","setTcgPricesSuccessful","isLoadingCardFalse","setSingleCard","singleId","getState","singleCard","cardsReducer","isLoadingCardsTrue","isLoadingCardTrue","tcgPrices","cardEntities","cardResults","low","mid","high","market","forEach","spec","formatter","Intl","NumberFormat","currency","format","getCards","getCardsResults","cardsSelector","createSelector","tcgPriceCategory","filterReducer","filterCategories","reduce","isValid","isEmpty","cardIsValid","tcg_productId","totalPurchasePrice","total_cash","total_credit","getAvgPurchasePrice","dateRange","acc","price","date_purchased","outObj","card_name","set_name","tcg_url","tcg_imageUrl","filterByReducer","isLoadingReducer","priceCalcReducer","SingleCardView","fetchSingleCard","isLoadingCard","match","JSON","stringify","getCard","cardReducer","specPricesSelector","specPricesReducer","specPriceId","tcgPriceSelector","tcgPricesReducer","cardSelector","singleCardId","InventoryRoutes","exact","routeProps","CardsViewContainer","SingleCardViewContainer","Routes","HomePageContainer","MainView","fetchCards","collectionPrice","collectionPriceTitle","collectionPriceReducer","createMuiTheme","values","sm","md","lg","xl","dark","action","hover","fontFamily","overrides","MuiInput","underline","borderColor","App","ThemeProvider","MainViewContainer","initState","tcgPriceCategories","SET_PRICE_CATEGORY_LOW","SET_PRICE_CATEGORY_MID","SET_PRICE_CATEGORY_HIGH","SET_PRICE_CATEGORY_MARKET","initialState","combineReducers","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"yPAoBeA,EAjBW,SAACC,GAAW,IAAD,iBAE9BA,GADGC,EAD2B,EAC3BA,UAAWC,EADgB,EAChBA,QADgB,IACPC,sBADO,SACiBC,EADjB,EACiBA,SAAUC,EAD3B,EAC2BA,MAG9D,OACE,kBAACC,EAAA,EAAD,CACEL,UAAWA,EACXC,QAASA,EACTK,YAAWH,EACXD,eAAgBA,EAChBE,MAAOA,GAENL,EAAMQ,WCPPC,EAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJC,SAAU,EACVC,gBAAiBH,EAAMI,QAAQC,QAAQC,KACvCC,QAAS,eAqBAC,EAhBG,SAACnB,GACjB,IAAME,EAAUO,IADW,iBAGUT,GAA7BC,EAHmB,EAGnBA,UAAWG,EAHQ,EAGRA,SAEnB,OACE,yBAAKH,UAAWC,EAAQU,MACtB,kBAACQ,EAAA,EAAD,CAAQC,SAAS,QAAQpB,UAAWA,EAAWM,YAAWH,GACxD,kBAAC,EAAD,KACE,kBAACkB,EAAA,EAAD,CAASnB,gBAAgB,GAAOH,EAAMQ,c,SCvB1CC,EAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,GACNW,WAAY,CACVC,WAAY,EACZC,SAAU,SAACzB,GAAD,OACRA,EAAM0B,UACFf,EAAMY,WAAWI,aACjBhB,EAAMY,WAAWE,UACvBG,WAAY,SAAC5B,GAAD,OACVA,EAAM6B,KACFlB,EAAMY,WAAWO,eACjBnB,EAAMY,WAAWQ,mBACvBC,QAAS,OACTC,WAAY,cAeHC,EAVY,SAAClC,GAC1B,IAAME,EAAUO,EAAUT,GAClBC,EAF4B,eAETD,GAAnBC,UACR,OACE,kBAACkC,EAAA,EAAD,CAAYlC,UAAWA,EAAWC,QAAS,CAAEU,KAAMV,EAAQqB,aACxDvB,EAAMQ,W,4DCvBPC,EAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJM,QAAS,SAAClB,GACR,OAAOA,EAAMoC,QAAU,OAAS,YAsCzBC,EAhCYC,IAAMC,YAAW,SAACvC,EAAOwC,GAElD,IAAMJ,EAAUK,YAAc,qBAExBvC,EAAUO,EAAU,CAAE2B,YAJ8B,iBAajDpC,GAPP0C,EANwD,EAMxDA,KACAC,EAPwD,EAOxDA,MACAC,EARwD,EAQxDA,UACAC,EATwD,EASxDA,QACAzC,EAVwD,EAUxDA,SACAH,EAXwD,EAWxDA,UACA6C,EAZwD,EAYxDA,aAGF,OACE,kBAACC,EAAA,EAAD,CACE7C,QAAS,CAAEU,KAAMV,EAAQU,MACzB8B,KAAMA,EACNC,MAAOA,EACPK,aAAYJ,EACZC,QAASA,EACTtC,YAAWH,EACXH,UAAWA,EACXgD,gBAAeH,EACfN,IAAKA,GAEJxC,EAAMQ,a,0BC1CE,EACP,CACJ0C,KAAM,IACNC,MAAO,QAHI,EAKF,CACTA,MAAO,YACPD,KAAM,aACNE,MAAO,CACLF,KAAM,mBACNC,MAAO,SAETE,KAAM,CAAEH,KAAM,sBAAuBC,MAAO,gBCJ1C1C,EAAYC,aAAW,SAACC,GAAW,IAAD,EACtC,MAAO,CACLC,MAAI,mBAEDD,EAAM2C,YAAYC,KAAK,MAAQ,CAC9BvB,QAAS,UAHT,cAMDrB,EAAM2C,YAAYE,GAAG,MAAQ,CAC5BxB,QAAS,SAPT,GAUJyB,MAAO,CACLd,MAAOhC,EAAMI,QAAQC,QAAQC,UA2DpByC,EAtDK,WAClB,IAAMxD,EAAUO,IADQ,EAEQkD,mBAAS,MAFjB,mBAEjBC,EAFiB,KAEPC,EAFO,KAQlBC,EAAc,WAClBD,EAAY,OAGd,OACE,yBAAKtD,YAAU,cAAcN,UAAWC,EAAQU,MAC9C,kBAAC,EAAD,CACE8B,MAAM,EACNC,MAAM,UACNK,aAAW,OACXH,QAdc,SAACkB,GACnBF,EAAYE,EAAMC,gBAcdzD,YAAU,2BAEV,kBAAC,IAAD,CAAUkB,SAAS,QAAQlB,YAAU,sBAGvC,kBAAC0D,EAAA,EAAD,CACE1D,YAAU,WACVqD,SAAUA,EACVM,aAAW,EACXC,KAAMC,QAAQR,GACdS,QAASP,GAET,kBAACQ,EAAA,EAAD,CACEzB,QAASiB,EACTS,UAAWC,IACXC,GAAIC,EAAiBxB,KACrBhD,QAAS,CAAEU,KAAMV,EAAQuD,OACzBlD,YAAU,aAETmE,EAAiBvB,OAEpB,kBAACmB,EAAA,EAAD,CACEzB,QAASiB,EACTS,UAAWC,IACXC,GAAIC,EAAsBtB,MAAMF,KAChChD,QAAS,CAAEU,KAAMV,EAAQuD,OACzBlD,YAAU,kBAETmE,EAAsBvB,U,iBCrE3B1C,EAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,GACN+D,UAAW,CACT7D,gBAAiBH,EAAMI,QAAQ6D,KAAKC,eA8B3BC,EAzBM,SAAC9E,GAAW,IAAD,iBACWA,GAAjC+E,EADsB,EACtBA,aAAc9E,EADQ,EACRA,UAChBC,EAAUO,IAFc,EAIJ6B,IAAMqB,SAASoB,GAJX,mBAIvBC,EAJuB,KAIhBC,EAJgB,KAU9B,OACE,yBAAKhF,UAAWA,GACd,kBAACiF,EAAA,EAAD,CACEF,MAAOA,EACPG,SARe,SAACpB,EAAOqB,GAC3BH,EAASG,IAQLpC,aAAW,WACX9C,QAAS,CAAEyE,UAAWzE,EAAQyE,WAC9BpE,YAAU,gBAETP,EAAMQ,Y,SCZA6E,EAjBK,SAACrF,GAAW,IAAD,iBAExBA,GADGmD,EADqB,EACrBA,MAAOoB,EADc,EACdA,UAAWE,EADG,EACHA,GAAIrE,EADD,EACCA,SAAU+E,EADX,EACWA,SAAUH,EADrB,EACqBA,MAAO/E,EAD5B,EAC4BA,UAGzD,OACE,kBAACqF,EAAA,EAAD,CACErF,UAAWA,EACXkD,MAAOA,EACPoB,UAAWA,EACXE,GAAIA,EACJlE,YAAWH,EACX+E,SAAUA,EACVH,MAAOA,K,gBCbAO,EAAkB,SAACC,GAC9B,IAD6C,EACzCC,EAAgB,EADyB,cAG5BD,GAH4B,IAG7C,2BAA6B,CAC3BC,GAD2B,QACLC,UAJqB,8BAO7C,OAAOD,GAaIE,EAAmB,SAACC,GAC/B,OAAOC,WAAWD,EAAIE,QAAQ,KAGnBC,EAAY,SAACH,GAGxB,IAAMI,GADNJ,EAAMA,EAAIK,YACMC,MAAM,KAAK,GACrBC,EAAMH,GAAOA,EAAII,OAAS,EAAIJ,EAAII,OAAS,EACjD,OAAOC,OAAOT,GAAKE,QAAQK,IAmBhBG,EAAmB,SAACC,GAQ/B,MAPmB,CACjBC,UAAW,gBACXC,UAAW,gBACXC,WAAY,iBACZC,aAAc,oBAGEJ,IAOPK,EAAa,SAAChB,GACzB,OAAIA,EAAM,GAMCiB,EAAiB,SAACC,EAAcC,GAC3C,OAAOpB,GACHmB,EAAeC,GAAiBA,EAAiB,MAIvD,SAASC,EAAkBC,GAQzB,IAPA,IAOA,MAPuB,CACrB,gBACA,kBACA,sBACA,cACA,oBAEF,eAAmC,CAA9B,IAAIC,EAAM,KACbD,EAAWA,EAASE,QAAQD,EAAQ,IAEtC,OAAOD,EAGF,IAAMG,EAA+B,SAACH,GAC3C,IAGMI,EAAmBL,EAAkBC,GAI3C,MANE,uGAIuBK,mBAAmBD,IAKjCE,EAAmB,SAACN,GAO/B,MANgB,4BAESD,EAAkBC,GAEDf,MAAM,KAAKsB,KAAK,MAO/CC,EAAkB,SAACC,GAC9B,IAAMC,EACO,CACTzE,KAAM,aACN8B,MAAO,GAHL2C,EAKE,CACJzE,KAAM,IACN8B,MAAO,GAIX,OAAI0C,EAASE,SAASC,WAAW,cACxBF,EAAkB3C,MAElB2C,EAAa3C,OAmIX8C,EAAmB,SAACC,GAAwB,IACjDC,EAAaD,EAAK7B,MAAM,KAExB+B,EAAOD,EAAW,GAClBE,EAAQF,EAAW,GACnBG,EAAMH,EAAW,GAKnB,MAAM,GAAN,OAAUE,EAAV,YAAmBC,EAAnB,YAA0BF,ICtQ1BxH,GAAYC,aAAW,SAACC,GAAW,IAAD,EACtC,MAAO,CACLC,KAAM,CACJ+B,MAAOhC,EAAMI,QAAQ6D,KAAKC,WAE5BuD,MAAI,mBACDzH,EAAM2C,YAAYC,KAAK,MAAQ,CAC9BvB,QAAS,SAFT,cAKDrB,EAAM2C,YAAYE,GAAG,MAAQ,CAC5BxB,QAAS,UANT,OAuCOqG,GA3BQ,WACrB,IAAMnI,EAAUO,KACViH,EAAWY,cAEjB,OACE,kBAAC,EAAD,CACErI,UAAWC,EAAQkI,KACnBrD,aAAc0C,EAAgBC,IAE9B,kBAAC,EAAD,CACEzH,UAAWC,EAAQU,KACnBuC,MAAOuB,EAAsBvB,MAC7BoB,UAAWC,IACXC,GAAIC,EAAsBtB,MAAMF,KAChC9C,SAAS,mBAEX,kBAAC,EAAD,CACEH,UAAWC,EAAQU,KACnBuC,MAAOuB,EAAiBvB,MACxBoB,UAAWC,IACXC,GAAIC,EAAiBxB,KACrB9C,SAAS,gBCtCXK,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACL4H,OAAQ,CACN,qBAAsB,CACpBvG,QAAS,OACTwG,eAAgB,iBAElB,6BAA8B,CAE5BC,QAAS,IAGbC,MAAO,CACL7H,SAAU,EACVY,SAAUd,EAAMY,WAAWoH,GAAGlH,cA2BrBmH,GAtBU,SAAC5I,GACxB,IAAME,EAAUO,KACViH,EAAWY,cAETI,EAJ0B,eAIX1I,GAAf0I,MAER,OACE,kBAAC,EAAD,CACEzI,UAAWC,EAAQqI,OACnBG,MAAOA,EACPtI,SAAU,oBAEV,kBAAC,EAAD,CAAoBA,SAAS,eAAeH,UAAWC,EAAQwI,OAC5DA,GAGH,kBAACG,EAAD,MACA,kBAAC,GAAD,CAAgBnB,SAAUA,MC1C1BjH,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLmI,OAAQnI,EAAMoI,OAAOC,YAgBVC,GAXM,SAACjJ,GACpB,IAAME,EAAUO,KACRR,EAFsB,eAEHD,GAAnBC,UACR,OACE,yBAAKM,YAAU,gBACb,yBAAKN,UAAS,UAAKC,EAAQ4I,OAAb,YAAuB7I,KACpCD,EAAMQ,WCVE0I,GAJE,SAAClJ,GAChB,OAAO,yBAAKO,YAAU,YAAf,cCQM4I,gBARS,SAACC,GACvB,MAAO,MAGkB,SAACC,GAC1B,MAAO,KAGMF,CAA6CD,I,UCC7CI,GATgB,SAACtJ,GAAW,IAAD,iBACJA,GAA5BE,EADgC,EAChCA,QAASD,EADuB,EACvBA,UACjB,OACE,kBAACsJ,GAAA,EAAD,CAAgBtJ,UAAWA,EAAWC,QAASA,EAASqE,UAAU,OAC/DvE,EAAMQ,W,UCKEgJ,OATf,SAAuBxJ,GAAQ,IACrBC,EADoB,eACDD,GAAnBC,UACR,OACE,kBAACwJ,GAAA,EAAD,CAAOxJ,UAAWA,EAAWsE,UAAU,OACpCvE,EAAMQ,W,UCAEkJ,GAJW,SAAC1J,GACzB,OAAO,kBAAC2J,GAAA,EAAD,CAAWpF,UAAU,OAAOvE,EAAMQ,W,UCQ5BoJ,GATW,SAAC5J,GAAW,IAC5BC,EAD2B,eACRD,GAAnBC,UACR,OACE,kBAAC4J,GAAA,EAAD,CAAW5J,UAAWA,EAAWsE,UAAU,OACxCvE,EAAMQ,W,UCHPC,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJkJ,aAAa,aAAD,OAAenJ,EAAMI,QAAQgJ,OAAOC,gBAwBvCC,GAnBU3H,IAAMC,YAAW,SAACvC,EAAOwC,GAChD,IAAMtC,EAAUO,KADwC,iBAGzBT,GAAvBC,EAHgD,EAGhDA,UAAWiK,EAHqC,EAGrCA,GAEnB,OACE,kBAACC,GAAA,EAAD,CACED,GAAIA,EACJ1H,IAAKA,EACLtC,QAAS,CAAEU,KAAMV,EAAQU,MACzBX,UAAWA,EACXM,YAAW,kBACXgE,UAAU,OAETvE,EAAMQ,a,UCtBPC,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJwJ,SAAU,OACVpI,QAAS,OACTd,QAAS,SAAClB,GAAD,OAAYA,EAAMkB,QAAUP,EAAM0J,QAAQ,GAAK,GACxDpI,WAAY,SAACjC,GAAD,OAAYA,EAAMsK,SAAW,aAAe,UACxDR,aAAc,MACdnH,MAAO,SAAC3C,GACN,GAAIA,EAAMuK,SACR,OAAOvK,EAAM4G,WACTjG,EAAMI,QAAQgJ,OAAOS,MACrB7J,EAAMI,QAAQgJ,OAAOU,KAG7B7I,WAAY,SAAC5B,GACX,GAAIA,EAAM6B,KACR,MAAO,aAuBF6I,GAhBW,SAAC1K,GACzB,IAAME,EAAUO,GAAUT,GADS,iBAEWA,GAAtC2K,EAF2B,EAE3BA,QAASvK,EAFkB,EAElBA,SAAUH,EAFQ,EAERA,UAC3B,OACE,kBAAC2K,GAAA,EAAD,CACE1K,QAAS,CAAEU,KAAMV,EAAQU,MACzBX,UAAWA,EACXM,YAAWH,EACXuK,QAASA,EACTpG,UAAU,OAETvE,EAAMQ,W,UCnCPC,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJiK,SAAU,OACV7I,QAAS,OACTwG,eAAgB,WAChBtH,QAAS,SAAClB,GAAD,OAAYA,EAAMkB,QAAUP,EAAM0J,QAAQ,GAAK,GACxDpI,WAAY,SACZ6I,OAAQ,SAAC9K,GAAD,OAAWA,EAAM+K,UAAY,YAqC5BC,GAhCiB,SAAChL,GAC/B,IAAME,EAAUO,GAAUT,GADe,iBAYhCA,GARPiL,EAJuC,EAIvCA,mBACAC,EALuC,EAKvCA,MACAC,EANuC,EAMvCA,YACAC,EAPuC,EAOvCA,KACAC,EARuC,EAQvCA,aACAC,EATuC,EASvCA,oBACArL,EAVuC,EAUvCA,UACAsL,EAXuC,EAWvCA,iBAGF,OACE,kBAACC,GAAA,EAAD,CACEP,mBAAoBA,EACpB1G,UAAU,MACV2G,MAAOA,EACPK,iBAAkBA,EAClBJ,YAAaA,EACbC,KAAMA,EACNC,aAAcA,EACdC,oBAAqBA,EACrBpL,QAAS,CAAEU,KAAMV,EAAQU,MACzBX,UAAWA,GAEVD,EAAMQ,W,UCvCPC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJoB,QAAS,OACTyJ,SAAU,OACVC,MAAO,OACPzJ,WAAY,SACZuG,eAAgB,UAElBjH,WAAY,CACVS,QAAS,OACT0J,MAAO,OACPzJ,WAAY,SACZuG,eAAgB,SAChBmD,UAAWhL,EAAM0J,QAAQ,QAId,SAASuB,GAAsB5L,GAC5C,IAAME,EAAUO,KAERR,EAH2C,eAGxBD,GAAnBC,UAER,OACE,yBAAKA,UAAWC,EAAQU,KAAO,IAAMX,GACnC,kBAAC4L,GAAA,EAAD,MACA,kBAAC,EAAD,CAAoBhK,MAAI,EAAC5B,UAAWC,EAAQqB,YAA5C,yB,cC1BAd,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJ+B,MAAO,kBACP,UAAW,CACTA,MAAO,aAqBAmJ,GAfgB,SAAC9L,GAC9B,IAAME,EAAUO,GAAUT,GADc,iBAEIA,GAApC+L,EAFgC,EAEhCA,OAAQC,EAFwB,EAExBA,UAAWnJ,EAFa,EAEbA,QAC3B,OACE,kBAACoJ,GAAA,EAAD,CACE/L,QAAS,CAAEU,KAAMV,EAAQU,KAAMsL,KAAMhM,EAAQU,KAAMmL,OAAQ7L,EAAQU,MACnEmL,OAAQA,EACRC,UAAWA,EACXnJ,QAASA,GAER7C,EAAMQ,W,UCnBPC,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJoB,QAAS,cACT0J,MAAO,OACP,QAAS,CACPS,UAAW,UAGfC,cAAe,CACbC,OAAQ,OACRrK,QAAS,OACTyJ,SAAU,QAEZa,SAAU,CACRtK,QAAS,QAEXuK,UAAW,CACTb,MAAO,YAoCEc,GA/BK,SAACxM,GACnB,IAAME,EAAUO,KADa,iBAEiCT,GAAxDiH,EAFuB,EAEvBA,SAAUwF,EAFa,EAEbA,QAASC,EAFI,EAEJA,SAAUC,EAFN,EAEMA,OAAQ1M,EAFd,EAEcA,UAM3C,OAHAyM,EAAW5E,EAAiB4E,GAC5BC,EAAS7E,EAAiB6E,GAGxB,kBAAC,EAAD,CACEzM,QAAS,CAAEU,KAAMV,EAAQkM,eACzBnM,UAAWA,EACXE,gBAAc,GAEd,yBAAKF,UAAWC,EAAQqM,UAAWhM,YAAU,eAC1CP,EAAMQ,SACP,kBAAC,EAAD,CAAoBkB,WAAS,EAACG,MAAI,GAC/BoF,GAEH,kBAAC,EAAD,KAAqBwF,IAGvB,yBAAKxM,UAAWC,EAAQqM,UAAWhM,YAAU,kBAC3C,kBAAC,EAAD,KACGmM,IAAaC,EAAb,UAAyBD,EAAzB,cAAuCC,GAAWD,MChDvDjM,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJoB,QAAS,cACT0J,MAAO,OACPtB,SAAU,OACVwC,OAAQ,EACR,QAAS,CACPlB,MAAO,OACPW,OAAQ,QACRjC,SAAU,OACVyC,aAAc,MACd/B,OAAQ,oBAGZzH,KAAM,CACJrB,QAAS,QAEX8K,SAAU,CACR,UAAW,CACT9K,QAAS,QACTX,SAAU,WACV+I,SAAU,OACVsB,MAAO,OACPW,OAAQ,QACRU,gBACE,wTACFpB,UAAW,SACXkB,aAAc,MACdG,QAAS,OAGbC,KAAM,CACJ7C,SAAU,YAKV8C,GAAQ,SAAClN,GAAW,IAAD,iBACYA,GAA3BmN,EADe,EACfA,YAAaC,EADE,EACFA,KACflN,EAAUO,KAEVL,EAAWgN,EAAO,qBAAuB,gBAC/C,OACE,kBAAC,IAAD,CACEnN,UAAWC,EAAQ+M,KACnBxI,GAAI,CAAEmD,SAAUuF,GAChBjG,OAAO,UAEP,kBAAC,EAAD,CACEjH,UAAWmN,EAAOlN,EAAQ4M,SAAW5M,EAAQmD,KAC7CjD,SAAUA,EACVD,gBAAc,GAEd,yBAAKkN,IAAKF,EAAaG,IAAI,eAoBpBC,GAdG,SAACvN,GACjB,IAAME,EAAUO,KADW,iBAEQT,GAA3BmN,EAFmB,EAEnBA,YAAaC,EAFM,EAENA,KACrB,OACE,kBAAC,EAAD,CACEhN,SAAS,YACTH,UAAWC,EAAQU,KACnBT,gBAAc,GAEd,kBAAC,GAAD,CAAOgN,YAAaA,EAAaC,KAAMA,M,UCvD9BI,GAhBSlL,IAAMC,YAAW,SAACvC,EAAOwC,GAAS,IAAD,iBACIxC,GAAnD0I,EAD+C,EAC/CA,MAD+C,IACxC+E,iBADwC,MAC5B,SAD4B,MAClBC,aADkB,SAEvD,OACE,kBAACC,GAAA,EAAD,CACEjF,MAAOA,EACP+E,UAAWA,EACXC,MAAOA,EACPE,WAAY,IACZC,eAAgB,IAChBrL,IAAKA,GAEJxC,EAAMQ,a,mBCdE,IACbsN,OAAQ,KACRC,OAAQ,KACRC,QAAS,KACTC,SAAU,KACVC,OAAQ,KACRC,WAAY,MACZC,QAAS,KACTC,SAAU,M,qBCaZ,IAAM5N,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJoB,QAAS,OACTC,WAAY,SACZuG,eAAgB,SAChB8F,KAAM3N,EAAMI,QAAQgJ,OAAOwE,MAE7BC,KAAM,CACJ,QAAS,CACP9C,MAAO,SAAC1L,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,kBACPpC,OAAQ,SAACrM,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,kBACRpN,SAAU,WACVqN,OAAQ,MACRC,KAAM,QAGVC,KAAM,CACJlD,MAAO,SAAC1L,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACPpC,OAAQ,SAACrM,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACRH,KAAM3N,EAAMI,QAAQgJ,OAAO8E,KAC3BC,YAAa,SAAC9O,GAAD,gBAAc+O,GAAa/O,EAAMgP,UAAY,EAAI,EAAjD,QAEfC,WAAY,CACVvD,MAAO,SAAC1L,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACPpC,OAAQ,SAACrM,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACRK,YAAa,SAAC9O,GAAD,iBApCCoN,EAqCEpN,EAAMoN,KArCF4B,EAqCQhP,EAAMgP,SArCJP,EAqCczO,EAAMyO,UApClDrB,EACK,EAAIqB,GACDrB,GAAQ2B,GAAaC,GACxB,GAAKP,EAEL,GA8BQ,MApCnB,IAAoBrB,EAAM4B,EAAUP,IAuChCS,YAAa,CACXxD,MAAO,SAAC1L,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACPpC,OAAQ,SAACrM,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACRK,YAAa,SAAC9O,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,QAEfU,OAAQ,CACNzD,MAAO,SAAC1L,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACPpC,OAAQ,SAACrM,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACRK,YAAa,SAAC9O,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,QAEfW,SAAU,CACR1D,MAAO,SAAC1L,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACPpC,OAAQ,SAACrM,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACRK,YAAa,SAAC9O,GAAD,gBAAc,EAAIA,EAAMyO,UAAxB,QAEfY,KAAM,CACJ3D,MAAO,SAAC1L,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACPpC,OAAQ,SAACrM,GAAD,gBAAc,GAAKA,EAAMyO,UAAzB,OACRK,YAAa,SAAC9O,GAAD,gBAAc,EAAIA,EAAMyO,UAAxB,OACb,UAAW,CACTa,OAAQ,YAGZC,UAAW,CACTvN,QAAS,OACTC,WAAY,SACZuN,cAAe7O,EAAM0J,QAAQ,QAqNpBoF,GAhNI,SAACzP,GAClB,IAAME,EAAUO,GAAUT,GADE,iBAWvBA,GARHoN,EAH0B,EAG1BA,KACAnG,EAJ0B,EAI1BA,SACAyI,EAL0B,EAK1BA,OACAC,EAN0B,EAM1BA,sBACAX,EAP0B,EAO1BA,SACAY,EAR0B,EAQ1BA,gBACA3P,EAT0B,EAS1BA,UAKF,OACE,kBAAC,EAAD,CACEC,QAAS,CAAEU,KAAMV,EAAQqP,WACzBtP,UAAWA,EACXE,gBAAc,EACdC,SAAS,cAIR2O,GAAaC,IACZ,kBAAC,GAAD,CAAiBtG,MAAOsG,GACtB,kBAACa,GAAA,EAAD,CACEtL,UAAU,MACVtE,UAAS,UAAKC,EAAQU,KAAb,YAAqBV,EAAQsO,MACtCjO,YAAU,aAEV,kBAAC,KAAD,CACEuP,YAAaf,GAAaC,GAC1Be,KAAG,EACH/M,aAAYgM,MAQnB5B,EACC,kBAAC,GAAD,CAAiB1E,MAAM,QACrB,kBAACmH,GAAA,EAAD,CACEtL,UAAU,MACVtE,UAAS,UAAKC,EAAQU,KAAb,YAAqBV,EAAQ0O,MACtCrO,YAAU,aAEV,yBAAKyP,QAAQ,YAAY3D,OAAO,OAAOX,MAAM,QAC3C,0BAAMuE,EAAE,gGAIZ,KAIJ,kBAAC,GAAD,CAAiBvH,MAAM,uBACrB,kBAAC,IAAD,CAAMjE,GAAI,CAAEmD,SAAU8H,GAAUxI,OAAO,UACrC,kBAAC2I,GAAA,EAAD,CACEtL,UAAU,MACVtE,UAAS,UAAKC,EAAQU,KAAb,YAAqBV,EAAQ+O,YACtC1O,YAAU,YAEV,yBAAK8L,OAAO,OAAOX,MAAM,OAAOsE,QAAQ,oBACtC,0BAAMC,EAAE,yyBAQhB,kBAAC,GAAD,CAAiBvH,MAAM,uBACrB,kBAAC,IAAD,CACEjE,GAAI,CAAEmD,SAAUR,EAA6BH,IAC7CC,OAAO,UAEP,kBAAC2I,GAAA,EAAD,CACEtL,UAAU,MACVtE,UAAS,UAAKC,EAAQU,KAAb,YAAqBV,EAAQgP,aACtC3O,YAAU,oBAEV,yBAAK8L,OAAO,OAAOX,MAAM,OAAOsE,QAAQ,2BACtC,uBAAGE,UAAU,wBACX,0BAAMD,EAAE,wKASlB,kBAAC,GAAD,CAAiBvH,MAAM,UACrB,kBAAC,IAAD,CAAMjE,GAAI,CAAEmD,SAAUL,EAAiBN,IAAaC,OAAO,UACzD,kBAAC2I,GAAA,EAAD,CACEtL,UAAU,MACVtE,UAAS,UAAKC,EAAQU,KAAb,YAAqBV,EAAQiP,QACtC5O,YAAU,eAEV,yBAAK8L,OAAO,OAAOX,MAAM,OAAOsE,QAAQ,6BACtC,uBACEE,UAAU,2DACVC,OAAO,QAEP,0BACEF,EAAE,w5GAsDd,kBAAC,GAAD,CAAiBvH,MAAM,4BACrB,kBAAC,IAAD,CAAMjE,GAAI,CAAEmD,SAAU+H,GAAyBzI,OAAO,UACpD,kBAAC2I,GAAA,EAAD,CACEtL,UAAU,MACVtE,UAAS,UAAKC,EAAQU,KAAb,YAAqBV,EAAQkP,UACtC7O,YAAU,iBAEV,yBAAKmL,MAAM,OAAOsE,QAAQ,6BACxB,uBACEE,UAAU,2DACVC,OAAO,QAEP,0BAAMF,EAAE,2hFACR,0BAAMA,EAAE,iSACR,0BAAMA,EAAE,uSACR,0BAAMA,EAAE,0GACR,0BAAMA,EAAE,sLACR,0BAAMA,EAAE,iIACR,0BAAMA,EAAE,gFACR,0BAAMA,EAAE,47FACR,0BAAMA,EAAE,iFACR,0BAAMA,EAAE,2EACR,0BAAMA,EAAE,wFASlB,kBAAC,GAAD,CAAiBvH,MAAO,cACtB,kBAACmH,GAAA,EAAD,CACEtL,UAAU,MACVtE,UAAS,UAAKC,EAAQU,KAAb,YAAqBV,EAAQsO,MACtCjO,YAAU,aAEV,kBAAC,KAAD,CACEsC,QAAS+M,EACT3P,UAAS,UAAKC,EAAQU,KAAb,YAAqBV,EAAQmP,YCvQlD,SAASe,GAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,IAAYF,EAAEE,IACV,EAEND,EAAEC,IAAYF,EAAEE,GACX,EAEF,EAmBT,IAAM9P,GAAYC,aAAW,SAACC,GAE5B,IAAM6P,EACyD,EAA7D7P,EAAMoI,OAAOC,QAAQ,4BAA4ByH,UACjD9P,EAAM0J,QAAQ,GACd,EAEF,MAAO,CACLzJ,KAAM,CACJ,kBAAmB,CACjBoB,QAAS,QAEX,iCAAkC,CAChC8H,aAAc,IAGlB4G,eAAgB,CACdlI,eAAgB,UAElBmI,cAAe,CACbzP,QAAQ,GAAD,OAAKP,EAAM0J,QAAQ,GAAnB,WAETuG,gBAAiB,CACfvP,SAAU,SACVwP,IAAK,EACLC,OAAQ,EACRhQ,gBAAiBH,EAAMI,QAAQC,QAAQ+P,aACvCjH,aAAa,aAAD,OAAenJ,EAAMI,QAAQgJ,OAAOC,YAElDgH,eAAgB,CAEd3P,SAAU,WACVqN,OAAQ,MACRvC,UAAU,gBAAD,OAAkBqE,EAAlB,OACTS,SAAU,SACV,uBAAwB,CACtBjP,QAAS,SAGb+I,SAAU,CACRD,OAAQ,GAEVoG,QAAS,CACPvF,UAAWhL,EAAM0J,QAAQ,KAE3B8G,WAAY,CACVC,UAAU,aAAD,OAAezQ,EAAMI,QAAQgJ,OAAOC,YAE/CqH,YAAa,CACXC,WAAY,QAEdC,YAAa,CACXzC,YAAanO,EAAM0J,QAAQ,QAK3BmH,GAAkB,SAACxR,GAAW,IAAD,iBAC6BA,GAAtDyR,EADyB,EACzBA,MAAOlB,EADkB,EAClBA,QAASmB,EADS,EACTA,cAAeC,EADN,EACMA,cAEjCzR,EAAUO,KAMVmR,EAAe,CACnB,CAAE1H,GAAI,WAAY/G,MAAO,OAAQwH,QAAS,GAC1C,CAAET,GAAI,SAAU/G,MAAO,OAAQwH,QAAS,GACxC,CAAET,GAAI,SAAU/G,MAAO,SAAUwH,QAAS,GAC1C,CAAET,GAAI,WAAY/G,MAAO,cAAewH,QAAS,GACjD,CAAET,GAAI,WAAY/G,MAAO,WAAYwH,QAAS,GAC9C,CACET,GAAI,mBACJ/G,MAAO,qBACPwH,QAAS,GAEX,CACET,GAAI,WACJ/G,MAAOmD,EAAiBqL,GACxBhH,QAAS,IAIPkH,EAAa,SAACC,GAClB,MAAkB,aAAdA,EAAO5H,GACF,MAEF,QAGT,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAkBjK,UAAWC,EAAQ6K,UACnC,kBAACgH,GAAA,EAAD,CACExC,WAAS,EACTtP,UAAS,UAAKC,EAAQyQ,cAAb,YAA8BzQ,EAAQ0Q,gBAAtC,YAAyD1Q,EAAQmR,cAEzEO,EAAaI,KAAI,SAACF,EAAQG,GACzB,OACE,kBAACF,GAAA,EAAD,CACEG,MAAI,EACJjS,UAAWC,EAAQwQ,eACnByB,GAAIL,EAAOnH,QACXyH,IAAKH,GAEL,kBAAC,GAAD,CACEI,cAAe9B,IAAYuB,EAAO5H,IAAKuH,GAEvC,kBAAC,GAAD,CACE1F,OAAQwE,IAAYuB,EAAO5H,GAC3B8B,UACEuE,IAAYuB,EAAO5H,GAAKuH,EAAQI,EAAWC,GAE7CjP,SApDSyP,EAoDkBR,EAAO5H,GApDZ,SAACnG,GACvC2N,EAAc3N,EAAOuO,MAqDL,kBAAC,EAAD,CAAoBzQ,MAAI,GAAEiQ,EAAO3O,UAtDzB,IAACmP,SAkEvBC,GAAejQ,IAAMC,YAAW,SAACvC,EAAOwC,GAAS,IAAD,iBAChBxC,GAA5BwS,EAD4C,EAC5CA,KAAMC,EADsC,EACtCA,aAERvS,EAAUO,KAYhB,OACE,kBAAC,GAAD,KACG+R,EAAKR,KAAI,SAAC3O,EAAM4O,GACf,OACE,kBAAC,GAAD,CACE/H,GAAE,oBAAe+H,GACjBG,IAAKH,EACLzP,IAAe,IAAVyP,EAAczP,EAAM,MAEzB,kBAACuP,GAAA,EAAD,CAAMxC,WAAS,EAACtP,UAAWC,EAAQyQ,eACjC,kBAACoB,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,CAAmB/R,SAAS,aAC1B,kBAAC,GAAD,CAAW+M,YAAa9J,EAAK8J,YAAaC,KAAM/J,EAAK+J,SAGzD,kBAAC2E,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,CAAmB7H,UAAQ,EAAClK,SAAS,aACnC,kBAAC,GAAD,CACEH,UAAWC,EAAQqR,YACnBtK,SAAU5D,EAAK4D,SACfwF,QAASpJ,EAAKoJ,QACdC,SAAUrJ,EAAKqJ,SACfC,OAAQtJ,EAAKsJ,QAEb,kBAAC,GAAD,CACE8B,UAAW,EACXrB,KAAM/J,EAAK+J,KACXX,QAASpJ,EAAKoJ,QACdiD,OAAQrM,EAAKqM,OACbC,sBAAuBtM,EAAKsM,sBAC5B1I,SAAU5D,EAAK4D,SACf+H,SAAU3L,EAAK2L,SACfY,gBAAiB,kBA1CZ8C,EA4CDrP,EAAKqP,SA5CM3L,EA6CX1D,EAAKsP,iBA7CqBC,EA8C1BvP,EAAKwP,SA9C2BC,EA+ChCzP,EAAKyP,OA/CmC7L,EAgDxC5D,EAAK4D,cA/C3BwL,EAAa,CACXC,WACA3L,gBACA6L,OACAE,SACA7L,aANoB,IAACyL,EAAU3L,EAAe6L,EAAME,EAAQ7L,QAuDpD,kBAAC8K,GAAA,EAAD,CAAMG,MAAI,EAACjS,UAAWC,EAAQwQ,eAAgByB,GAAI,GAChD,kBAAC,GAAD,CACE5H,UAAQ,EACR1I,MAAI,EACJ+E,WAAYA,EAAWvD,EAAKyP,QAC5BC,YAAU,EACV3S,SAAS,eAER2F,EAAU1C,EAAKyP,QACf,MAGL,kBAACf,GAAA,EAAD,CAAMG,MAAI,EAACjS,UAAWC,EAAQwQ,eAAgByB,GAAI,GAChD,kBAAC,GAAD,CACE5H,UAAQ,EACR1I,MAAI,EACJ+E,WAAYA,EAAWvD,EAAKwP,UAC5BE,YAAU,EACV3S,SAAS,kBAER2F,EAAU1C,EAAKwP,YAGpB,kBAACd,GAAA,EAAD,CAAMG,MAAI,EAACjS,UAAWC,EAAQwQ,eAAgByB,GAAI,GAChD,kBAAC,GAAD,CAAmBY,YAAU,EAAC3S,SAAS,iBACpCiD,EAAKqC,WAGV,kBAACqM,GAAA,EAAD,CAAMG,MAAI,EAACjS,UAAWC,EAAQwQ,eAAgByB,GAAI,GAChD,kBAAC,GAAD,CACEY,YAAU,EACV3S,SAAS,2BAER,IACA2F,EAAU1C,EAAKsP,oBAGpB,kBAACZ,GAAA,EAAD,CAAMG,MAAI,EAACjS,UAAWC,EAAQwQ,eAAgByB,GAAI,GAChD,kBAAC,GAAD,CAAmBY,YAAU,EAAC3S,SAAS,kBACpC,IACA2F,EAAU1C,EAAKqP,qBA2GnBM,GAhGE,SAAChT,GAAW,IAAD,iBAC0CA,GAA5DoD,EADkB,EAClBA,MAAO6P,EADW,EACXA,eAAgBtB,EADL,EACKA,cAAec,EADpB,EACoBA,aADpB,EAGA9O,mBAAS,QAHT,mBAGnB8N,EAHmB,KAGZyB,EAHY,OAIIvP,mBAAS,UAJb,mBAInB4M,EAJmB,KAIV4C,EAJU,OAKUxP,mBAAS,IALnB,mBAKnByP,EALmB,KAKPC,EALO,OAMY1P,mBAAS,GANrB,mBAMnB2P,EANmB,KAMNC,EANM,OAOF5P,mBAAS,IAPP,mBAOnB6O,EAPmB,KAObgB,EAPa,KAUpBC,EAAcC,mBAEdxT,EAAUO,KAIhBkT,qBAAU,WACRJ,EAAe,KACd,CAACN,IAeJU,qBAAU,WACR,IAAMC,EAAgBR,GAAcE,EAAc,GAAKF,EACjDS,EAAcT,GAAcE,EAAc,GAE1Cd,EA9RV,SAAoBsB,EAAOC,GACzB,IAAMC,EAAiBF,EAAM9B,KAAI,SAACiC,EAAIhC,GAAL,MAAe,CAACgC,EAAIhC,MAMrD,OALA+B,EAAeE,MAAK,SAAC7D,EAAGC,GACtB,IAAMmB,EAAQsC,EAAW1D,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVmB,EAAoBA,EACjBpB,EAAE,GAAKC,EAAE,MAEX0D,EAAehC,KAAI,SAACiC,GAAD,OAAQA,EAAG,MAuRtBE,CAAW/Q,EApS5B,SAAuBqO,EAAOlB,GAC5B,MAAiB,SAAVkB,EACH,SAACpB,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,IAiST6D,CAAc3C,EAAOlB,IAAU8D,MAC5DT,EACAC,GAEFL,EAAQhB,KACP,CAACpP,EAAOgQ,EAAYE,EAAa7B,EAAOlB,IAc3C,OACE,kBAAC,IAAM+D,SAAP,KACE,kBAAC,GAAD,CACErU,UAAWC,EAAQ8Q,eACnB5Q,SAAS,cAET,kBAAC,GAAD,CAAeH,UAAWC,EAAQU,MAChC,kBAAC,GAAD,CACE6Q,MAAOA,EACPlB,QAASA,EACToB,cAAeA,EACfD,cA/CgB,SAAC3N,EAAOuO,GAChC,GAAiB,aAAbA,EAIF,OADAY,EADc3C,IAAY+B,GAAsB,QAAVb,EACrB,OAAS,OACnB0B,EAAWb,GAIpBY,EADe3C,IAAY+B,GAAsB,SAAVb,EACrB,MAAQ,QAC1B0B,EAAWb,OAuCHW,GACA,kBAACV,GAAD,CACEC,KAAMA,EACNC,aAAcA,EACdjQ,IAAKiR,MAKZR,EACC,kBAAC,GAAD,CAAiBhT,UAAWC,EAAQgR,UAEpC,kBAAC,GAAD,CACEjG,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,MAAO9H,EAAMgD,OACb+E,YAAaiI,EACbrI,UAAQ,EACR9K,UAAWC,EAAQiR,WACnB/F,KAAMkI,EACNjI,aA1CiB,SAACtH,EAAOqH,GAC/BmI,EAAenI,GACfqI,EAAYc,QAAQC,gBAAe,IAyC7BlJ,oBAtCwB,SAACvH,GAC/BsP,EAActP,EAAMmD,OAAOlC,OAC3BuO,EAAe,QChUnB,SAASnD,GAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,IAAYF,EAAEE,IACV,EAEND,EAAEC,IAAYF,EAAEE,GACX,EAEF,EAmBT,IAAM9P,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJ,kBAAmB,CACjBoB,QAAS,OACTyJ,SAAU,QAEZ,iCAAkC,CAChC3B,aAAc,IAGlBqH,WAAY,CACVC,UAAU,aAAD,OAAezQ,EAAMI,QAAQgJ,OAAOC,WAC7CxB,eAAgB,SAChB,qBAAsB,CACpBtH,QAAQ,OAAD,OAASP,EAAM0J,QAAQ,GAAvB,QAGX6G,QAAS,CACPvF,UAAWhL,EAAM0J,QAAQ,KAE3B9I,WAAY,CACVS,QAAS,UAEXyS,kBAAmB,CACjB/I,MAAO,OACPlD,eAAgB,iBAElBkM,oBAAqB,CACnBlM,eAAgB,QAElBmM,eAAgB,CACdvK,SAAU,QACVwK,WAAY,OACZC,YAAa,QAEftD,YAAa,CACX,MAAO,CACLuD,UAAW,SACX9S,QAAS,UAGb+S,WAAY,CACVrJ,MAAO,OACP8D,cAAe7O,EAAM0J,QAAQ,IAE/B2K,UAAW,CACT,uBAAwB,CACtBxF,cAAe7O,EAAM0J,QAAQ,IAE/B,sBAAuB,CACrBrI,QAAS,QACTiT,aAActU,EAAM0J,QAAQ,KAGhC6K,YAAa,CACXhU,QAAQ,GAAD,OAAKP,EAAM0J,QAAQ,GAAnB,cAA2B1J,EAAM0J,QAAQ,GAAzC,WAKPkI,GAAejQ,IAAMC,YAAW,SAACvC,EAAOwC,GAAS,IAAD,iBACDxC,GAA3CwS,EAD4C,EAC5CA,KAAMC,EADsC,EACtCA,aAAcd,EADwB,EACxBA,cAEtBzR,EAAUO,KAYhB,OACE,kBAAC,GAAD,CAAmBR,UAAWC,EAAQ8U,WACnCxC,EAAKR,KAAI,SAAC3O,EAAM4O,GACf,OACE,kBAAC,GAAD,CACE/H,GAAE,oBAAe+H,GACjBG,IAAKH,EACLzP,IAAe,IAAVyP,EAAczP,EAAM,MAEzB,kBAAC,GAAD,CACEvC,UAAWC,EAAQyU,eACnBrK,UAAQ,EACRlK,SAAS,uBAET,kBAAC,GAAD,CACEH,UAAWC,EAAQqR,YACnBtK,SAAU5D,EAAK4D,SACfwF,QAASpJ,EAAKoJ,QACdC,SAAUrJ,EAAKqJ,SACfC,OAAQtJ,EAAKsJ,UAIjB,kBAACoF,GAAA,EAAD,CACExC,WAAS,EACTtP,UAAS,UAAKC,EAAQyU,eAAb,YAA+BzU,EAAQgV,cAEhD,kBAACnD,GAAA,EAAD,CAAM9R,UAAWC,EAAQwU,oBAAqBxC,MAAI,EAACC,GAAI,GACrD,kBAAC,GAAD,CAAmB/R,SAAS,aAC1B,kBAAC,GAAD,CAAW+M,YAAa9J,EAAK8J,YAAaC,KAAM/J,EAAK+J,SAGzD,kBAAC2E,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,CACE5H,UAAQ,EACR1I,MAAI,EACJ+E,WAAYA,EAAWvD,EAAKyP,QAC5BC,YAAU,EACV3S,SAAS,cACTH,UAAWC,EAAQuU,mBAEnB,kBAAC,EAAD,CAAoBxU,UAAWC,EAAQqB,YACpC,WAEFwE,EAAU1C,EAAKyP,QACf,KAGH,kBAAC,GAAD,CACE7S,UAAWC,EAAQuU,kBACnBlK,UAAQ,EACR1I,MAAI,EACJ+E,WAAYA,EAAWvD,EAAKwP,UAC5BE,YAAU,EACV3S,SAAS,kBAET,kBAAC,EAAD,CAAoBH,UAAWC,EAAQqB,YACpC,iBAEFwE,EAAU1C,EAAKwP,WAGlB,kBAAC,GAAD,CACE5S,UAAWC,EAAQuU,kBACnB1B,YAAU,EACV3S,SAAS,iBAET,kBAAC,EAAD,CAAoBH,UAAWC,EAAQqB,YACpC,cAEF8B,EAAKqC,UAGR,kBAAC,GAAD,CACEzF,UAAWC,EAAQuU,kBACnB1B,YAAU,EACV3S,SAAS,2BAET,kBAAC,EAAD,CAAoBH,UAAWC,EAAQqB,YACpC,wBAEF,IACAwE,EAAU1C,EAAKsP,mBAGlB,kBAAC,GAAD,CACE1S,UAAWC,EAAQuU,kBACnB1B,YAAU,EACV3S,SAAS,kBAET,kBAAC,EAAD,CAAoBH,UAAWC,EAAQqB,YACpC+E,EAAiBqL,IAEnB,IACA5L,EAAU1C,EAAKqP,aAKtB,kBAAC,GAAD,CACEzS,UAAWC,EAAQyU,eACnBrK,UAAQ,EACRlK,SAAS,sBAET,kBAAC,GAAD,CACEH,UAAWC,EAAQ6U,WACnBtG,UAAW,EACXrB,KAAM/J,EAAK+J,KACXX,QAASpJ,EAAKoJ,QACdiD,OAAQrM,EAAKqM,OACbC,sBAAuBtM,EAAKsM,sBAC5B1I,SAAU5D,EAAK4D,SACf+H,SAAU3L,EAAK2L,SACfY,gBAAiB,kBA3HN8C,EA6HPrP,EAAKqP,SA7HY3L,EA8HjB1D,EAAKsP,iBA9H2BC,EA+HhCvP,EAAKwP,SA/HiCC,EAgItCzP,EAAKyP,OAhIyC7L,EAiI9C5D,EAAK4D,cAhIrBwL,EAAa,CACXC,WACA3L,gBACA6L,OACAE,SACA7L,aANoB,IAACyL,EAAU3L,EAAe6L,EAAME,EAAQ7L,cAyOnD+L,GA5FE,SAAChT,GAAW,IAAD,iBAQrBA,GANHoD,EAFwB,EAExBA,MACA6P,EAHwB,EAGxBA,eACAtB,EAJwB,EAIxBA,cACAc,EALwB,EAKxBA,aACA0C,EANwB,EAMxBA,iBANwB,EAWAxR,mBAASwR,EAAiBnJ,WAX1B,mBAWnByF,EAXmB,KAWZyB,EAXY,OAYIvP,mBAASwR,EAAiBjL,IAZ9B,mBAYnBqG,EAZmB,KAYV4C,EAZU,OAaUxP,mBAAS,IAbnB,mBAanByP,EAbmB,KAaPC,EAbO,OAcY1P,mBAAS,GAdrB,mBAcnB2P,EAdmB,KAcNC,EAdM,OAeF5P,mBAAS,IAfP,mBAenB6O,EAfmB,KAebgB,EAfa,KAkBpBC,EAAcC,mBAEdxT,EAAUO,KAIhBkT,qBAAU,WACRJ,EAAe,KACd,CAACN,IAEJU,qBAAU,WACRT,EAASiC,EAAiBnJ,WAC1BmH,EAAWgC,EAAiBjL,MAC3B,CAACiL,IAEJxB,qBAAU,WACR,IAAMC,EAAgBR,GAAcE,EAAc,GAAKF,EACjDS,EAAcT,GAAcE,EAAc,GAE1Cd,EA9PV,SAAoBsB,EAAOC,GACzB,IAAMC,EAAiBF,EAAM9B,KAAI,SAACiC,EAAIhC,GAAL,MAAe,CAACgC,EAAIhC,MAMrD,OALA+B,EAAeE,MAAK,SAAC7D,EAAGC,GACtB,IAAMmB,EAAQsC,EAAW1D,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVmB,EAAoBA,EACjBpB,EAAE,GAAKC,EAAE,MAEX0D,EAAehC,KAAI,SAACiC,GAAD,OAAQA,EAAG,MAuPtBE,CAAW/Q,EApQ5B,SAAuBqO,EAAOlB,GAC5B,MAAiB,SAAVkB,EACH,SAACpB,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,IAiQT6D,CAAc3C,EAAOlB,IAAU8D,MAC5DT,EACAC,GAEFL,EAAQhB,KACP,CAACpP,EAAOgQ,EAAYE,EAAa7B,EAAOlB,IAc3C,OACE,kBAAC,IAAM+D,SAAP,KACE,kBAAC,GAAD,CACErU,UAAWC,EAAQ8Q,eACnB5Q,SAAS,cAET,kBAAC,GAAD,CAAeH,UAAWC,EAAQU,OAC9BqS,GACA,kBAAC,GAAD,CACET,KAAMA,EACNC,aAAcA,EACdjQ,IAAKiR,EACL9B,cAAeA,MAKtBsB,EACC,kBAAC,GAAD,CAAiBhT,UAAWC,EAAQgR,UAEpC,kBAAC,GAAD,CACEjG,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,MAAO9H,EAAMgD,OACbmF,iBAAiB,GACjBJ,YAAaiI,EACbrI,UAAQ,EACR9K,UAAWC,EAAQiR,WACnB/F,KAAMkI,EACNjI,aAtCiB,SAACtH,EAAOqH,GAC/BmI,EAAenI,GACfqI,EAAYc,QAAQC,gBAAe,IAqC7BlJ,oBAlCwB,SAACvH,GAC/BsP,EAActP,EAAMmD,OAAOlC,OAC3BuO,EAAe,Q,mGC1Sb9S,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJ+B,MAAO,SAAC3C,GAAD,OAAYA,EAAMoV,SAAWzU,EAAMI,QAAQC,QAAQC,KAAO,IACjEH,gBAAiB,SAACd,GAAD,OACfA,EAAMoV,SAAWzU,EAAMI,QAAQsU,OAAOC,MAAQ,IAChDxK,OAAQ,SAAC9K,GAAD,OACNA,EAAMoV,SAAN,oBAA8BzU,EAAMI,QAAQC,QAAQC,MAAS,IAC/D,UAAW,CACTH,gBAAiB,SAACd,GAAD,OACfA,EAAMoV,SAAW,0BAA4B,UA6BxCG,GAvBQ,SAACvV,GACtB,IAAME,EAAUO,GAAUT,GADM,iBASvBA,GALPwV,EAJ8B,EAI9BA,WAJ8B,IAK9B7S,aAL8B,MAKtB,UALsB,MAM9B8S,eAN8B,MAMpB,YANoB,EAO9BxV,EAP8B,EAO9BA,UACA4C,EAR8B,EAQ9BA,QAEF,OACE,kBAAC6S,GAAA,EAAD,CACED,QAASA,EACT9S,MAAOA,EACPzC,QAASA,EACTD,UAAWA,EACX4C,QAASA,GAER2S,I,UClCD/U,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJ+B,MAAOhC,EAAMI,QAAQgJ,OAAO4L,cAqBnBC,GAhBU,SAAC5V,GACxB,IAAM6V,EAAapV,KADe,iBAEqBT,GAA/C8V,EAF0B,EAE1BA,QAAS3Q,EAFiB,EAEjBA,SAAUlF,EAFO,EAEPA,UAAWC,EAFJ,EAEIA,QAEtC,OACE,kBAAC6V,GAAA,EAAD,CACE9V,UAAWA,EACXC,QAAO,aAAIU,KAAMiV,EAAWjV,MAASV,GACrC4V,QAASA,EACT3Q,SAAUA,EACV6Q,KAAK,WACLrT,MAAM,a,UCnBNlC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAEJ,wBAAyB,CACvB+B,MAAOhC,EAAMI,QAAQ6D,KAAK5D,SAG5B,iBAAkB,CAChB2B,MAAOhC,EAAMI,QAAQ6D,KAAK5D,SAE5B,4BAA6B,CAC3B2B,MAAOhC,EAAMI,QAAQ6D,KAAK5D,SAE5B,oBAAqB,CACnBS,SAAUd,EAAMY,WAAWE,UAE7BmL,OAAO,GAAD,OAAKjM,EAAM0J,QAAQ,GAAnB,aA+CK4L,GA3CW,SAACjW,GACzB,IAAME,EAAUO,KADmB,iBAkB9BT,GAfHkW,EAHiC,EAGjCA,SACA/S,EAJiC,EAIjCA,MAJiC,IAKjCoJ,iBALiC,SAMjCrC,EANiC,EAMjCA,GACAiM,EAPiC,EAOjCA,gBACAC,EARiC,EAQjCA,OACAC,EATiC,EASjCA,WACApW,EAViC,EAUjCA,UACAG,EAXiC,EAWjCA,SACA+E,EAZiC,EAYjCA,SACAH,EAbiC,EAajCA,MACAsR,EAdiC,EAcjCA,OACAC,EAfiC,EAejCA,KACAC,EAhBiC,EAgBjCA,WAKF,OACE,kBAACC,GAAA,EAAD,eACEL,OAAQA,GACJE,EAFN,CAGErW,UAAS,UAAKC,EAAQU,KAAb,YAAqBX,GAC9BiW,SAAUA,EACV3J,UAAWA,EACXrC,GAAIA,EACJiM,gBAAiBA,EACjBhT,MAAOA,EACPkT,WAAYA,EACZ9V,YAAWH,EACX4E,MAAOA,EACPG,SAAUA,EACVoR,KAAMA,EACNC,WAAYA,IAEXxW,EAAMQ,W,UCzDPC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAEJ,wBAAyB,CACvB+B,MAAOhC,EAAMI,QAAQ6D,KAAK5D,SAG5B,iBAAkB,CAChB2B,MAAOhC,EAAMI,QAAQC,QAAQC,MAE/B,4BAA6B,CAC3B0B,MAAOhC,EAAMI,QAAQ6D,KAAK5D,SAE5B,oBAAqB,CACnBS,SAAUd,EAAMY,WAAWE,UAE7BmL,OAAO,GAAD,OAAKjM,EAAM0J,QAAQ,GAAnB,SAERqM,OAAQ,CACN,6BAA8B,CAE5BvK,UAAW,SAEb,4BAA6B,CAC3B1K,SAAUd,EAAMY,WAAWE,eA6BlBkV,GAxBc,SAAC3W,GAC5B,IAAME,EAAUO,KADsB,iBAEyBT,GAAvDkK,EAF8B,EAE9BA,GAAIlF,EAF0B,EAE1BA,MAAO4R,EAFmB,EAEnBA,QAASzR,EAFU,EAEVA,SAAU/E,EAFA,EAEAA,SAAU+C,EAFV,EAEUA,MAChD,OACE,kBAAC0T,GAAA,EAAD,CACEtW,YAAWH,EACXF,QAAS,CAAEU,KAAMV,EAAQU,KAAM8V,OAAQxW,EAAQwW,QAC/CxM,GAAIA,EACJ0M,QAASA,EACTE,YAAa,SAACR,GAAD,OACX,kBAACG,GAAA,EAAD,iBACMH,EADN,CAEEnT,MAAOA,EACPgT,gBAAiB,CACfY,QAAQ,OAId5R,SAAUA,EACVH,MAAOA,KCjDPvE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4O,UAAW,CACTvN,QAAS,OACTyJ,SAAU,QAEZuL,UAAW,CACTrL,UAAWhL,EAAM0J,QAAQ,GACzB4K,aAActU,EAAM0J,QAAQ,GAC5B,uBAAwB,CACtB1H,MAAOhC,EAAMI,QAAQ6D,KAAK5D,SAE5B,oBAAqB,CACnBS,SAAUd,EAAMY,WAAWE,eAyBlBwV,GApBY,SAACjX,GAC1B,IAAME,EAAUO,KADoB,iBAGeT,GAA3CmD,EAH4B,EAG5BA,MAAO6B,EAHqB,EAGrBA,MAAOG,EAHc,EAGdA,SAAUoH,EAHI,EAGJA,UAEhC,OACE,kBAACkK,GAAA,EAAD,CACElK,UAAWA,EACXpJ,MAAOA,EACPoT,KAAK,OACLvR,MAAOA,EACPG,SAAUA,EACVlF,UAAWC,EAAQ8W,UACnBb,gBAAiB,CACfY,QAAQ,M,UC/BVtW,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJ,wBAAyB,CACvB+B,MAAOhC,EAAMI,QAAQ6D,KAAK5D,cAuBnBkW,GAjBgB,SAAClX,GAC9B,IAAME,EAAUO,KADwB,iBAGIT,GAApCC,EAHgC,EAGhCA,UAAWkX,EAHqB,EAGrBA,MAAO/W,EAHc,EAGdA,SAE1B,OACE,kBAACgX,GAAA,EAAD,CACEnX,UAAWA,EACXC,QAAS,CAAEU,KAAMV,EAAQU,MACzBuW,MAAOA,EACP5W,YAAWH,GAEVJ,EAAMQ,W,UC1BE,IACb,CAAEwE,MAAO,KAAM7B,MAAO,MACtB,CAAE6B,MAAO,IAAK7B,MAAO,KACrB,CAAE6B,MAAO,KAAM7B,MAAO,OCYlB1C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0W,KAAM,CACJrV,QAAS,OACTyJ,SAAU,OACVjD,eAAgB,SAChBvG,WAAY,SACZ,0BAA2B,CACzByJ,MAAO,QAET,wBAAyB,CAEvBb,SAAU,UAGd0E,UAAW,CACTrO,QAAS,GAEXoW,aAAc,CACZtV,QAAS,QAEXuV,iBAAkB,CAChBvV,QAAS,OACTwG,eAAgB,gBAChBoM,WAAY,EACZ,+BAAgC,CAC9BnT,SAAUd,EAAMY,WAAWE,WAG/B+V,OAAQ,CACN7L,UAAWhL,EAAM0J,QAAQ,GACzB5I,SAAUd,EAAMY,WAAWE,SAC3BiK,MAAO,QAET+L,cAAe,CACb/L,MAAO/K,EAAM0J,QAAQ,IACrBwK,YAAalU,EAAM0J,QAAQ,IAE7BqN,SAAU,CACRjW,SAAUd,EAAMY,WAAWE,UAE7BkW,YAAa,CACXhM,UAAW,YAwVAiM,GApVW,SAAC5X,GACzB,IAAME,EAAUO,KADmB,iBAW1BT,GAPP2R,EAJiC,EAIjCA,cACAkG,EALiC,EAKjCA,iBACAC,EANiC,EAMjCA,aAGAC,EATiC,EASjCA,iBACAC,EAViC,EAUjCA,mBAViC,EAaPrU,mBAASmU,EAAaG,QAbf,mBAa5BA,EAb4B,KAapBC,EAboB,OAcLvU,mBAASmU,EAAarL,SAdjB,mBAc5BA,EAd4B,KAcnB0L,EAdmB,OAeHxU,mBAASmU,EAAa7Q,UAfnB,mBAe5BA,EAf4B,KAelBmR,EAfkB,OAgBSzU,mBAC1CmU,EAAaO,gBAjBoB,mBAgB5BA,EAhB4B,KAgBZC,EAhBY,OAmBG3U,mBAASmU,EAAaS,aAnBzB,mBAmB5BA,EAnB4B,KAmBfC,EAnBe,OAoBK7U,mBAASmU,EAAaW,cApB3B,mBAoB5BA,EApB4B,KAoBdC,EApBc,OAqBD/U,mBAASmU,EAAaa,WArBrB,mBAqB5BA,EArB4B,KAqBjBC,EArBiB,OAsBajV,mBAC9CmU,EAAae,kBAvBoB,mBAsB5BA,EAtB4B,KAsBVC,EAtBU,OAyBOnV,mBACxCmU,EAAaiB,eA1BoB,mBAyB5BA,EAzB4B,KAyBbC,EAzBa,OA4BHrV,mBAASmU,EAAapL,UA5BnB,oBA4B5BA,GA5B4B,MA4BlBuM,GA5BkB,SA6BPtV,mBAASmU,EAAanL,QA7Bf,qBA6B5BA,GA7B4B,MA6BpBuM,GA7BoB,SAgCWvV,mBAAS,IAhCpB,qBAgC5BwV,GAhC4B,MAgCXC,GAhCW,SAiCSzV,mBAAS,IAjClB,qBAiC5B0V,GAjC4B,MAiCZC,GAjCY,MAmCnC3F,qBAAU,WAGRuE,EAAUJ,EAAaG,QACvBE,EAAWL,EAAarL,SACxB2L,EAAYN,EAAa7Q,UACzBqR,EAAkBR,EAAaO,gBAC/BG,EAAeV,EAAaS,aAC5BG,EAAgBZ,EAAaW,cAC7BG,EAAad,EAAaa,WAC1BG,EAAoBhB,EAAae,kBACjCG,EAAiBlB,EAAaiB,eAC9BE,GAAYnB,EAAapL,UACzBwM,GAAUpB,EAAanL,UACtB,CAACmL,IAEJnE,qBAAU,WAER,IAAI4F,EAAY,aAAO1B,GACnB2B,EAAW,GACXC,EAAU,GAEd,GAAIhN,EAAS,CAAC,IAAD,gBACO8M,GADP,IACX,2BAAgC,CAAC,IAAxBG,EAAuB,QAC1BA,EAAMC,MAAQlN,GAChB+M,EAASI,KAAKF,EAAM1D,MAIjB/O,GACHwS,EAAQG,KAAKF,EAAMC,MARZ,+BAab,GAAI1S,EAAU,CAAC,IAAD,gBACMsS,GADN,IACZ,2BAAgC,CAAC,IAAxBG,EAAuB,QAC1BA,EAAM1D,OAAS/O,GACjBwS,EAAQG,KAAKF,EAAMC,KAIhBlN,GACH+M,EAASI,KAAKF,EAAM1D,OARZ,+BAad,IAAKvJ,IAAYxF,EAAU,CAAC,IAAD,gBACPsS,GADO,IACzB,2BAAgC,CAAC,IAAxBG,EAAuB,QAC9BF,EAASI,KAAKF,EAAM1D,MACpByD,EAAQG,KAAKF,EAAMC,MAHI,+BAO3BP,GAAmBS,eAAKL,EAAStF,SACjCoF,GAAkBO,eAAKJ,EAAQvF,WAC9B,CACD2D,EACApL,EACAxF,EACAmS,GACAE,KAyBF,OACE,0BAAMrZ,UAAWC,EAAQmX,KAAM9W,YAAU,wBAGvC,kBAAC,EAAD,CACEL,QAAS,CAAEU,KAAMV,EAAQqP,WACzBnP,SAAS,iBAET,kBAAC0Z,GAAA,EAAD,CACE5Z,QAAS,CAAEU,KAAMV,EAAQqX,kBACzBwC,QACE,kBAAC,GAAD,CACEjE,QAASmC,EACT9S,SAAU,kBAAM+S,GAAWD,MAG/B+B,eAAe,QACf7W,MAAM,cAMV,kBAAC,GAAD,CACE/C,SAAS,wBACT+E,SAAU,SAAC8U,GAAD,OAAO9B,EAAW8B,EAAE/S,OAAOgT,cACrClV,MAAOyH,EACPtJ,MAAM,WACNyT,QAASyC,KAKX,kBAAC,GAAD,CACEjZ,SAAS,yBACT+E,SAAU,SAAC8U,GAAD,OAAO7B,EAAY6B,EAAE/S,OAAOgT,cACtClV,MAAOiC,EACP9D,MAAM,YACNyT,QAASuC,KAKX,kBAAC,EAAD,CACElZ,UAAS,UAAKC,EAAQqP,UAAb,YAA0BrP,EAAQoX,eAE3C,kBAAC,GAAD,CACElX,SAAS,2BACTgW,QAAM,EACNjT,MAAOmD,EAAiBqL,GACxB3M,MAAO6T,EACP1T,SAAU,SAACpB,GAAD,OAAW+U,EAAoB/U,EAAMmD,OAAOlC,QACtD/E,UAAWC,EAAQuX,cACnBtB,gBAAiB,CACfY,QAAQ,IAGToD,GAASnI,KAAI,SAACoI,GACb,OACE,kBAAC9V,EAAA,EAAD,CACErE,UAAWC,EAAQwX,SACnBtF,IAAKgI,EAAOpV,MACZA,MAAOoV,EAAOpV,OAEboV,EAAOjX,WAKhB,kBAAC,GAAD,CACE/C,SAAS,sBACTH,UAAWC,EAAQyX,YACnB3S,MAAO+T,EACPxM,WAAS,EACTpH,SAAU,SAACpB,GAAD,OAAWiV,EAAiBjV,EAAMmD,OAAOlC,QACnDmR,gBAAiB,CACfY,QAAQ,GAEVP,WAAY,CACV6D,eACE,kBAAC,GAAD,CAAwBhZ,SAAS,SAC9B,SASX,kBAAC,EAAD,CACEpB,UAAS,UAAKC,EAAQqP,UAAb,YAA0BrP,EAAQoX,eAE3C,kBAAC,GAAD,CACElX,SAAS,2BACTgW,QAAM,EACNjT,MAAM,cACN6B,MAAOyT,EACPtT,SAAU,SAACpB,GAAD,OAAW2U,EAAgB3U,EAAMmD,OAAOlC,QAClD/E,UAAWC,EAAQuX,cACnBtB,gBAAiB,CACfY,QAAQ,IAGToD,GAASnI,KAAI,SAACoI,GACb,OACE,kBAAC9V,EAAA,EAAD,CACErE,UAAWC,EAAQwX,SACnBtF,IAAKgI,EAAOpV,MACZA,MAAOoV,EAAOpV,OAEboV,EAAOjX,WAKhB,kBAAC,GAAD,CACE/C,SAAS,sBACTH,UAAWC,EAAQyX,YACnB3S,MAAO2T,EACPpM,WAAS,EACTpH,SAAU,SAACpB,GAAD,OAAW6U,EAAa7U,EAAMmD,OAAOlC,QAC/CmR,gBAAiB,CACfY,QAAQ,GAEVP,WAAY,CACV6D,eACE,kBAAC,GAAD,CAAwBhZ,SAAS,SAC9B,SASX,kBAAC,EAAD,CACEpB,UAAS,UAAKC,EAAQqP,UAAb,YAA0BrP,EAAQoX,eAE3C,kBAAC,GAAD,CACElX,SAAS,2BACTgW,QAAM,EACNpR,MAAOqT,EACPlT,SAAU,SAACpB,GAAD,OAAWuU,EAAkBvU,EAAMmD,OAAOlC,QACpD7B,MAAM,SACNlD,UAAWC,EAAQuX,cACnBtB,gBAAiB,CACfY,QAAQ,IAGToD,GAASnI,KAAI,SAACoI,GACb,OACE,kBAAC9V,EAAA,EAAD,CACErE,UAAWC,EAAQwX,SACnBtF,IAAKgI,EAAOpV,MACZA,MAAOoV,EAAOpV,OAEboV,EAAOjX,WAKhB,kBAAC,GAAD,CACE/C,SAAS,mBACTH,UAAWC,EAAQyX,YACnB3S,MAAOuT,EACPhM,WAAS,EACTpH,SAAU,SAACpB,GAAD,OAAWyU,EAAezU,EAAMmD,OAAOlC,QACjDmR,gBAAiB,CACfY,QAAQ,GAEVP,WAAY,CACV6D,eACE,kBAAC,GAAD,CAAwBhZ,SAAS,SAC9B,SASX,kBAAC,GAAD,CACE8B,MAAM,YACN6B,MAAO0H,GACPH,WAAS,EACTpH,SAAU,SAACpB,GAAD,OAAWkV,GAAYlV,EAAMmD,OAAOlC,UAKhD,kBAAC,GAAD,CACE7B,MAAM,UACN6B,MAAO2H,GACPJ,WAAS,EACTpH,SAAU,SAACpB,GAAD,OAAWmV,GAAUnV,EAAMmD,OAAOlC,UAG9C,kBAAC,EAAD,CAAmB7E,gBAAc,GAC/B,kBAAC,GAAD,CACEF,UAAWC,EAAQsX,OACnBhC,WAAW,SACX3S,QAlOa,WAenBkV,EAdc,CACZE,SACAxL,UACAxF,WACAoR,iBACAE,cACAE,eACAE,YACAE,mBACAE,gBACArM,YACAC,eAyNE,kBAAC,GAAD,CACE1M,UAAWC,EAAQsX,OACnBpC,UAAQ,EACRI,WAAW,YACX3S,QAvNe,WACrBmV,U,8BCnLSsC,GAAS,YACTC,GAAS,YACTC,GAAU,aACVC,GAAY,eCUnBha,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACL+Z,YAAa,CACX/X,MAAOhC,EAAMI,QAAQ6D,KAAK5D,QAC1B0K,MAAO,OACP,mCAAoC,CAClC/I,MAAOhC,EAAMI,QAAQ6D,KAAK5D,UAG9BuW,iBAAkB,CAChBvV,QAAS,OACTwG,eAAgB,gBAChB/G,SAAUd,EAAMY,WAAWE,SAC3BmT,WAAY,KAEd+F,MAAO,CACLhY,MAAOhC,EAAMI,QAAQgJ,OAAO4L,SAC5B,YAAa,CACXhT,MAAOhC,EAAMI,QAAQC,QAAQ4Z,QAGjC9E,QAAS,OA+FE+E,GA3FY,SAAC7a,GAAW,IAAD,iBACSA,GAArC2R,EAD4B,EAC5BA,cAAemJ,EADa,EACbA,aAEjB5a,EAAUO,KAEhB,OACE,kBAACsa,GAAA,EAAD,CAAa9a,UAAWC,EAAQwa,YAAanW,UAAU,YACrD,kBAACyW,GAAA,EAAD,CACEhY,aAAW,qBACXgT,KAAK,qBACLhR,MAAO2M,EACPxM,SAAU,SAACpB,GAAD,OAAW+W,EAAa/W,IAClCxD,YAAU,eAEV,kBAACuZ,GAAA,EAAD,CACE9U,MAAOyV,GACPva,QAAS,CACPiD,MAAOjD,EAAQqX,iBACf3W,KAAMV,EAAQqX,kBAEhBwC,QACE,kBAACkB,GAAA,EAAD,CACE/a,QAAS,CACPU,KAAMV,EAAQya,MACd7E,QAAS5V,EAAQ4V,SAEnBvV,YAAU,qBAGd4C,MAAM,aACN6W,eAAe,UAEjB,kBAACF,GAAA,EAAD,CACE9U,MAAOsV,GACPpa,QAAS,CACPiD,MAAOjD,EAAQqX,iBACf3W,KAAMV,EAAQqX,kBAEhBwC,QACE,kBAACkB,GAAA,EAAD,CACE/a,QAAS,CACPU,KAAMV,EAAQya,MACd7E,QAAS5V,EAAQ4V,SAEnBvV,YAAU,kBAGd4C,MAAM,UACN6W,eAAe,UAEjB,kBAACF,GAAA,EAAD,CACE9U,MAAOuV,GACPra,QAAS,CACPiD,MAAOjD,EAAQqX,iBACf3W,KAAMV,EAAQqX,kBAEhBwC,QACE,kBAACkB,GAAA,EAAD,CACE/a,QAAS,CACPU,KAAMV,EAAQya,MACd7E,QAAS5V,EAAQ4V,SAEnBvV,YAAU,kBAGd4C,MAAM,UACN6W,eAAe,UAEjB,kBAACF,GAAA,EAAD,CACE9U,MAAOwV,GACPta,QAAS,CACPiD,MAAOjD,EAAQqX,iBACf3W,KAAMV,EAAQqX,kBAEhBwC,QACE,kBAACkB,GAAA,EAAD,CACE/a,QAAS,CACPU,KAAMV,EAAQya,MACd7E,QAAS5V,EAAQ4V,SAEnBvV,YAAU,mBAGd4C,MAAM,WACN6W,eAAe,aCjHnBvZ,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLqW,UAAW,CACT,wBAAyB,CAEvB,+BAAgC,CAC9B,qBAAsB,OACtBpK,OAAQ,KAEV,+BAAgC,CAC9B,qBAAsB,OACtBA,OAAQ,OAId2C,UAAW,CACTvN,QAAS,OACTyJ,SAAU,QAEZyP,eAAgB,CACdlZ,QAAS,OACTwG,eAAgB,gBAChBkD,MAAO,OACP,oBAAqB,CACnBoJ,UAAW,QACXqG,aAAcxa,EAAM0J,QAAQ,KAGhC9I,WAAY,CACV6I,SAAU,OAEZnD,SAAU,CACRyE,MAAO,OACP1J,QAAS,OACTwG,eAAgB,SAChBvG,WAAY,SACZ6S,UAAW,SACXxD,WAAY3Q,EAAM0J,QAAQ,QA2KjB+Q,GAtKiB,SAACpb,GAC/B,IAAME,EAAUO,KADyB,iBAMpCT,GAHH2R,EAHuC,EAGvCA,cAHuC,IAIvC0J,UAAa3I,EAJ0B,EAI1BA,SAAU3L,EAJgB,EAIhBA,cAAe6L,EAJC,EAIDA,KAAME,EAJL,EAIKA,OAAQ7L,EAJb,EAIaA,SAJb,EASTtD,mBAAS+O,GATA,mBASlC4I,EATkC,KASxBC,EATwB,OAUC5X,mBAASoD,GAVV,mBAUlCyU,EAVkC,KAUnBC,EAVmB,OAWP9X,mBAASiP,GAXF,mBAWlC+F,EAXkC,KAWvBC,EAXuB,OAYHjV,mBAASmP,GAZN,mBAYlCyF,EAZkC,KAYrBC,EAZqB,OAaC7U,mBAASsD,GAbV,mBAalCyU,EAbkC,KAanBC,EAbmB,KAezChI,qBAAU,WACR4H,EAAY7I,GACZ+I,EAAiB1U,GACjB6R,EAAahG,GACb4F,EAAe1F,GACf6I,EAAiB1U,KAChB,CAACyL,EAAU3L,EAAe6L,EAAME,EAAQ7L,IAiD3C,OACE,kBAAC,EAAD,CAAmBhH,UAAWC,EAAQqP,UAAWpP,gBAAc,GAC7D,yBAAKF,UAAWC,EAAQgb,gBACtB,kBAAC,GAAD,CACE9a,SAAS,iBACTmW,KAAK,SACLvR,MAAOsW,EACPnY,MAAOmD,EAAiBqL,GACxBpF,WAAS,EACT4J,gBAAiB,CACfY,QAAQ,GAEVP,WAAY,CACV6D,eACE,kBAAC,GAAD,CAAwBhZ,SAAS,SAC9B,MAIP8D,SAlEgB,SAACpB,GACvB,IAAM6X,EAAe7X,EAAMmD,OAAOlC,MAClCuW,EAAYK,GACRJ,IACF5C,EAAagD,EAAeJ,GAAiB,IAC7ChD,EAAe3R,EAAe+U,EAAcJ,IAAkB,MA8D1Dvb,UAAWC,EAAQ8W,aAIvB,yBAAK/W,UAAWC,EAAQgb,gBACtB,kBAAC,GAAD,CACE9a,SAAS,sBACTmW,KAAK,SACLvR,MAAOwW,EACPrY,MAAO,iBACPoJ,WAAS,EACT4J,gBAAiB,CACfY,QAAQ,GAEVP,WAAY,CACV6D,eACE,kBAAC,GAAD,CAAwBhZ,SAAS,SAC9B,MAIP8D,SA/EqB,SAACpB,GAC5B,IAAM6X,EAAe7X,EAAMmD,OAAOlC,MAClCyW,EAAiBG,GACbN,IACF1C,EAAajT,EAAiB2V,EAAWM,IAAiB,IAC1DpD,EAAe3R,EAAeyU,EAAUM,IAAiB,MA2ErD3b,UAAWC,EAAQ8W,aAIvB,yBAAK/W,UAAWC,EAAQgb,gBACtB,kBAAC,GAAD,CACE9a,SAAS,kBACTmW,KAAK,SACLvR,MAAO2T,EACPxV,MAAO,cACPoJ,WAAS,EACT4J,gBAAiB,CACfY,QAAQ,GAEVP,WAAY,CACV6D,eACE,kBAAC,GAAD,CAAwBhZ,SAAS,SAC9B,MAIP8D,SA5FiB,SAACpB,GACxB,IAAM6X,EAAe7X,EAAMmD,OAAOlC,MAElC,GADA4T,EAAagD,GACTJ,EAAe,CACjB,IAAMK,EAAclW,EAClBE,WAAW2V,GAAiB3V,WAAW+V,IAEzCL,EAAYM,GAAe,IAC3BrD,EACE3R,EAAegV,EAAahW,WAAW2V,KAAmB,MAoFxDvb,UAAWC,EAAQ8W,aAIvB,yBAAK/W,UAAWC,EAAQgb,gBACtB,kBAAC,GAAD,CACE9a,SAAS,oBACTmW,KAAK,SACLvR,MAAOuT,EACPpV,MAAO,SACPoJ,WAAS,EACT4J,gBAAiB,CACfY,QAAQ,GAEVP,WAAY,CACV6D,eACE,kBAAC,GAAD,CAAwBhZ,SAAS,SAC9B,MAIP8D,SApGmB,SAACpB,GAC1B,IAAM6X,EAAe7X,EAAMmD,OAAOlC,MAElC,GADAwT,EAAeoD,GACXJ,EAAe,CACjB,IAAMK,EAAclW,EAClBE,WAAW2V,GACT3V,WAAW2V,GAAiB3V,WAAW+V,EAAe,MAE1DL,EAAYM,GAAe,IAC3BjD,EACEjT,EAAiBkW,EAAchW,WAAW2V,KAAmB,MA2F3Dvb,UAAWC,EAAQ8W,aAGvB,yBAAK/W,UAAWC,EAAQ+G,UACtB,kBAAC,EAAD,CAAoBpF,MAAI,GAAE6Z,MC7L5Bjb,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,KAAM,CACJoB,QAAS,OACTwG,eAAgB,SAChByM,aAActU,EAAM0J,QAAQ,IAE9ByR,YAAa,CACX9Z,QAAS,OACTwG,eAAgB,SAChBtH,QAAS,EAETsO,cAAe,SAACxP,GAAD,OAAYA,EAAM+b,UAAYpb,EAAM0J,QAAQ,KAE7D2R,OAAQ,CACN9L,UAAW,eACX1H,eAAgB,SAChBvG,WAAY,SACZga,WAAYtb,EAAMub,YAAYC,OAAO,YAAa,CAChDC,SAAUzb,EAAMub,YAAYE,SAASC,YAGzCC,WAAY,CACVpM,UAAW,kBAEbqM,UAAW,CACT5Z,MAAOhC,EAAMI,QAAQ6D,KAAK5D,QAC1B8T,UAAW,SACXrT,SAAUd,EAAMY,WAAWE,SAC3BmL,OAAO,GAAD,OAAKjM,EAAM0J,QAAQ,GAAnB,cAA2B1J,EAAM0J,QAAQ,GAAzC,MACN,iBAAkB,CAChBsB,UAAWhL,EAAM0J,QAAQ,IAE3BzI,WAAYjB,EAAMY,WAAWO,eAC7B,iBAAkB,CAChBE,QAAS,SAGbwa,UAAW,CACT/a,SAAUd,EAAMY,WAAWE,UAE7B4B,KAAM,CACJ+G,SAAU,IACVqS,UAAW,OACX3R,OAAQ,oCAEV4R,YAAa,CACX1a,QAAS,OACTwG,eAAgB,SAChBiD,SAAU,OACV6F,WAAY,EACZ9B,cAAe,EACf,eAAgB,CACdA,cAAe,IAGnBmN,kBAAmB,CACjBrL,WAAY,OAqHHsL,GAhHC,SAAC5c,GAAW,IAAD,iBAkBhBA,GAfP2R,EAHuB,EAGvBA,cACAkG,EAJuB,EAIvBA,iBACAC,EALuB,EAKvBA,aACAuD,EANuB,EAMvBA,UAGAwB,EATuB,EASvBA,oBACAC,EAVuB,EAUvBA,oBACAC,EAXuB,EAWvBA,qBACAC,EAZuB,EAYvBA,uBACAjF,EAbuB,EAavBA,iBACAC,EAduB,EAcvBA,mBAGA/X,EAjBuB,EAiBvBA,UAjBuB,EAoBOqC,IAAMqB,UAAS,GApBtB,mBAoBlBoY,EApBkB,KAoBRkB,EApBQ,KAqBnB/c,EAAUO,GAAU,CAAEsb,aAyB5B,OACE,yBAAKxb,YAAU,UAAUN,UAAWC,EAAQU,MAC1C,kBAACsc,GAAA,EAAD,CACElH,KAAK,UACL/V,UAAWA,EACXC,QAAS,CACPU,KAAMV,EAAQmD,OAGhB,kBAAC8Z,GAAA,EAAD,CAAWld,UAAWC,EAAQqc,UAAWhY,UAAU,OAZhDwX,EAAW,iBAAmB,wBAejC,kBAACqB,GAAA,EAAD,CAAUC,IAAKtB,EAAUuB,QAAQ,QAC/B,kBAACC,GAAA,EAAD,CAAatd,UAAWC,EAAQwc,aAC9B,kBAAC,GAAD,CACE/K,cAAeA,EACfmJ,aAnCS,SAAC/W,GACpB,OAAQA,EAAMmD,OAAOlC,OACnB,KAAKsV,GACH,OAAOuC,IACT,KAAKtC,GACH,OAAOuC,IACT,KAAKtC,GACH,OAAOuC,IACT,KAAKtC,GACH,OAAOuC,QA4BH,kBAAC,GAAD,CACEtU,MAAM,6CACN+E,UAAU,SACVC,OAAK,GAEL,kBAACyP,GAAA,EAAD,CAAWld,UAAWC,EAAQqc,UAAWhY,UAAU,UAAnD,sBAIF,kBAAC,GAAD,CACEoN,cAAeA,EACf0J,UAAWA,MAIjB,kBAACmC,GAAA,EAAD,CACEtd,QAAS,CACPU,KAAMV,EAAQ4b,aAEhB2B,gBAAc,GAEd,kBAAC,EAAD,CACExd,UAAWyd,aAAKxd,EAAQ8b,OAAT,eACZ9b,EAAQoc,WAAaP,IAExBlZ,QAlEgB,WACxBoa,GAAalB,IAkEL9Y,gBAAe8Y,EACf/Y,aAAW,aAEX,kBAAC,KAAD,QAGJ,kBAACoa,GAAA,EAAD,CAAUC,GAAItB,GACZ,kBAACwB,GAAA,EAAD,CAAatd,UAAWC,EAAQyc,mBAC9B,kBAAC,GAAD,CACE9E,iBAAkBA,EAClBlG,cAAeA,EACfoG,iBAAkBA,EAClBC,mBAAoBA,EACpBF,aAAcA,SCvLtBrX,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJM,QAAS,OAgBEyc,GAZS,SAAC3d,GACvB,IAAME,EAAUO,KAERR,EAHyB,eAGND,GAAnBC,UAER,OACE,kBAACqB,EAAA,EAAD,CAASrB,UAAWA,EAAWC,QAAS,CAAEU,KAAMV,EAAQU,OACrDZ,EAAMQ,WCZPC,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLqI,QAAS,OAqBE4U,GAjBW,SAAC5d,GACzB,IAAME,EAAUO,KAEhB,OACE,kBAAC,GAAD,CAAiBR,UAAWC,EAAQ8I,SAClC,kBAAC+I,GAAA,EAAD,CAAMxC,WAAS,GACb,kBAACwC,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,KAGf,kBAACJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,O,0CCTjB1R,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLuL,KAAM,CACJvJ,MAAOhC,EAAMI,QAAQC,QAAQ4Z,OAE/BiD,WAAY,CACVlb,MAAOhC,EAAMI,QAAQC,QAAQC,MAE/BsO,UAAW,CACTvN,QAAS,OACTwG,eAAgB,WAChB2S,aAAc,EACd1K,UAAW,OA0CFqN,GArCW,SAAC9d,GACzB,IAAME,EAAUO,KADmB,iBAGKT,GAAhC+d,EAH2B,EAG3BA,cAAelb,EAHY,EAGZA,QAEjBmb,EAAa,SAAChc,GAClB,OAAIA,IAAY+b,EACP7d,EAAQ2d,WAER3d,EAAQgM,MAInB,OACE,kBAAC,EAAD,CAAWjM,UAAWC,EAAQqP,UAAWnP,SAAU,qBACjD,kBAAC,GAAD,CAAiBsI,MAAM,aACrB,kBAAC,EAAD,CACEnI,YAAU,kBACVN,UAAW+d,EC7CM,eD8CjBnb,QAAS,kBAAMA,EC9CE,iBDgDjB,kBAAC,KAAD,CAAepB,SAAS,YAG5B,kBAAC,GAAD,CAAiBiH,MAAM,eACrB,kBAAC,EAAD,CACEnI,YAAU,oBACVN,UAAW+d,ECvDQ,iBDwDnBnb,QAAS,kBAAMA,ECxDI,mBD0DnB,kBAAC,KAAD,CAAcpB,SAAS,cEhD3BhB,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLsd,gBAAiB,CACfjc,QAAS,OACTC,WAAY,UAEdmU,OAAQ,CACN1K,MAAO,OAETnK,WAAY,CACVsT,YAAalU,EAAM0J,QAAQ,IAE7BrB,QAAS,CACP3H,SAAU,QACVqK,MAAM,eAAD,OAAiB/K,EAAM0J,QAAQ,GAA/B,OACL6T,WAAYvd,EAAMI,QAAQC,QAAQ+P,aAClCD,OAAQ,OAKRqN,GAAkB,SAACne,GACvB,IAAME,EAAUO,KAEV2d,EAAc,CAClB,CAAEjb,MAAO,mBAAoB+G,GAAI,WAAY8B,UAAW,OACxD,CAAE7I,MAAO,oBAAqB+G,GAAI,WAAY8B,UAAW,QACzD,CAAE7I,MAAO,mBAAoB+G,GAAI,SAAU8B,UAAW,OACtD,CAAE7I,MAAO,oBAAqB+G,GAAI,SAAU8B,UAAW,QACvD,CAAE7I,MAAO,qBAAsB+G,GAAI,SAAU8B,UAAW,OACxD,CAAE7I,MAAO,sBAAuB+G,GAAI,SAAU8B,UAAW,QACzD,CAAE7I,MAAO,mBAAoB+G,GAAI,WAAY8B,UAAW,OACxD,CAAE7I,MAAO,oBAAqB+G,GAAI,WAAY8B,UAAW,QACzD,CAAE7I,MAAO,kBAAmB+G,GAAI,WAAY8B,UAAW,OACvD,CAAE7I,MAAO,mBAAoB+G,GAAI,WAAY8B,UAAW,SAbzB,iBAgBchM,GAAvCqe,EAhByB,EAgBzBA,YAAalJ,EAhBY,EAgBZA,iBAhBY,EAkBKxR,mBAASwR,EAAiBhS,OAlB/B,mBAkB1Bmb,EAlB0B,KAkBbC,EAlBa,KAoBjC5K,qBAAU,WACR4K,EAAepJ,EAAiBhS,SAC/B,CAACgS,EAAkBiJ,IAOtB,OACE,kBAAC,GAAD,CACEhe,SAAS,qBACTgW,QAAM,EACNpR,MAAOsZ,EACPnZ,SAAU,SAACpB,GAAD,OAVY,SAACZ,GACzB,IAAMqb,EAAaC,eAAKL,EAAa,CAAC,QAASjb,IAC/Ckb,EAAYG,GAQWE,CAAkB3a,EAAMmD,OAAOlC,QACpD/E,UAAWC,EAAQkW,OACnBD,gBAAiB,CACfY,QAAQ,IAGTqH,EAAYpM,KAAI,SAACoI,GAChB,OACE,kBAAC9V,EAAA,EAAD,CAAU8N,IAAKgI,EAAOjX,MAAO6B,MAAOoV,EAAOjX,OACxCiX,EAAOjX,YAmCLwb,GA3BiB,SAAC3e,GAC/B,IAAME,EAAUO,KADyB,iBAGpCT,GADG6C,EAFiC,EAEjCA,QAASkb,EAFwB,EAExBA,cAAeM,EAFS,EAETA,YAAalJ,EAFJ,EAEIA,iBAI7C,OACE,kBAAC,GAAD,CAAiBlV,UAAWC,EAAQ8I,SAClC,kBAAC+I,GAAA,EAAD,CAAMxC,WAAS,GACb,kBAACwC,GAAA,EAAD,CAAM9R,UAAWC,EAAQ+d,gBAAiB/L,MAAI,EAACC,GAAI,GACjD,kBAAC,EAAD,CAAoBlS,UAAWC,EAAQqB,YACpC,eAEH,kBAAC,GAAD,CACE4T,iBAAkBA,EAClBkJ,YAAaA,KAIjB,kBAACtM,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,CAAmBtP,QAASA,EAASkb,cAAeA,QCzFxDtd,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLie,KAAM,CACJnT,SAAU,UAEZoT,eAAgB,CACdhK,YAAalU,EAAM0J,QAAQ,IAE7ByU,MAAO,CACL7J,aAActU,EAAM0J,QAAQ,QAK5B0U,GAAc,SAAC/e,GACnB,IAAME,EAAUO,KADa,EAGakD,mBF7BjB,eE0BI,mBAGtBoa,EAHsB,KAGPiB,EAHO,OAImBrb,mBAAS,CACvDR,MAAO,sBACP+G,GAAI,SACJ8B,UAAW,SAPgB,mBAItBmJ,EAJsB,KAIJ8J,EAJI,sBA+BpBjf,GAfPoD,EAhB2B,EAgB3BA,MACAuO,EAjB2B,EAiB3BA,cACAsB,EAlB2B,EAkB3BA,eACA4E,EAnB2B,EAmB3BA,iBACAC,EApB2B,EAoB3BA,aACAuD,EArB2B,EAqB3BA,UAGAwB,EAxB2B,EAwB3BA,oBACAC,EAzB2B,EAyB3BA,oBACAC,EA1B2B,EA0B3BA,qBACAC,EA3B2B,EA2B3BA,uBACAjF,EA5B2B,EA4B3BA,iBACAC,EA7B2B,EA6B3BA,mBACAvF,EA9B2B,EA8B3BA,aAOF,OACE,kBAAC,EAAD,CAAmBtS,gBAAc,EAACC,SAAS,0BACzC,kBAAC,GAAD,CACEyC,QAPsB,SAACb,GAC3Bgd,EAAiBhd,IAOb+b,cAAeA,EACfM,YAhCc,SAACnK,GACnB+K,EAAoB/K,IAgChBiB,iBAAkBA,IAEpB,kBAAC,EAAD,CACEhV,gBAAc,EACdF,UAAWC,EAAQgf,gBACnB9e,SAAS,yBAET,kBAAC,GAAD,CAAcH,UAAWC,EAAQ4e,OF5Ed,gBE6EhBf,EACC,kBAACoB,GAAD,CACE/b,MAAOA,EACP6P,eAAgBA,EAChBtB,cAAeA,EACfmG,aAAcA,EACdC,iBAAkBA,EAClBC,mBAAoBA,EACpBvF,aAAcA,EACd0C,iBAAkBA,IAGpB,kBAAC,GAAD,CACExD,cAAeA,EACfkL,oBAAqBA,EACrBC,oBAAqBA,EACrBC,qBAAsBA,EACtBC,uBAAwBA,EACxBnF,iBAAkBA,EAClBE,iBAAkBA,EAClBC,mBAAoBA,EACpBF,aAAcA,EACduD,UAAWA,QASnB+D,GAAe,SAACpf,GACpB,IAAME,EAAUO,KADc,iBAoBrBT,GAfPoD,EAL4B,EAK5BA,MACAuO,EAN4B,EAM5BA,cACAsB,EAP4B,EAO5BA,eACA4E,EAR4B,EAQ5BA,iBACAC,EAT4B,EAS5BA,aACAuD,EAV4B,EAU5BA,UAGAwB,EAb4B,EAa5BA,oBACAC,EAd4B,EAc5BA,oBACAC,EAf4B,EAe5BA,qBACAC,EAhB4B,EAgB5BA,uBACAjF,EAjB4B,EAiB5BA,iBACAC,EAlB4B,EAkB5BA,mBACAvF,EAnB4B,EAmB5BA,aAGF,OACE,kBAAC,EAAD,CAAmBtS,gBAAc,EAACC,SAAS,2BACzC,kBAAC,GAAD,CAAmByC,QAAS,eAC5B,kBAACkP,GAAA,EAAD,CAAMxC,WAAS,EAACtP,UAAWC,EAAQ0e,MACjC,kBAAC7M,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,CACElS,UAAWC,EAAQ2e,eACnBlN,cAAeA,EACfkL,oBAAqBA,EACrBC,oBAAqBA,EACrBC,qBAAsBA,EACtBC,uBAAwBA,EACxBnF,iBAAkBA,EAClBE,iBAAkBA,EAClBC,mBAAoBA,EACpBF,aAAcA,EACduD,UAAWA,KAGf,kBAACtJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACkN,GAAD,CACEjc,MAAOA,EACP6P,eAAgBA,EAChBtB,cAAeA,EACfmG,aAAcA,EACdC,iBAAkBA,EAClBC,mBAAoBA,EACpBvF,aAAcA,QAwEX6M,GAhEG,SAACtf,GAAW,IAAD,iBAmBtBA,GAhBHoD,EAHyB,EAGzBA,MACAuO,EAJyB,EAIzBA,cACAsB,EALyB,EAKzBA,eACA4E,EANyB,EAMzBA,iBACAC,EAPyB,EAOzBA,aACAuD,EARyB,EAQzBA,UAGAwB,EAXyB,EAWzBA,oBACAC,EAZyB,EAYzBA,oBACAC,EAbyB,EAazBA,qBACAC,EAdyB,EAczBA,uBACAjF,EAfyB,EAezBA,iBACAC,EAhByB,EAgBzBA,mBACAvF,EAjByB,EAiBzBA,aAMIrQ,EAAUK,YAAc,qBAE9B,OACE,yBAAKlC,YAAU,aACX6B,EAiBA,kBAAC,GAAD,CACEuP,cAAeA,EACfkL,oBAAqBA,EACrBC,oBAAqBA,EACrBC,qBAAsBA,EACtBC,uBAAwBA,EACxBnF,iBAAkBA,EAClBE,iBAAkBA,EAClBC,mBAAoBA,EACpBF,aAAcA,EACduD,UAAWA,EACXjY,MAAOA,EACP6P,eAAgBA,EAChBR,aAAcA,IA7BhB,kBAAC,GAAD,CACErP,MAAOA,EACPuO,cAAeA,EACfsB,eAAgBA,EAChB4E,iBAAkBA,EAClBC,aAAcA,EACduD,UAAWA,EACXwB,oBAAqBA,EACrBC,oBAAqBA,EACrBC,qBAAsBA,EACtBC,uBAAwBA,EACxBjF,iBAAkBA,EAClBC,mBAAoBA,EACpBvF,aAAcA,M,mDC1MX8M,GAAW,WAAgC,IAA/BjJ,EAA8B,uDAArB,iBAChC,OAAOkJ,KAAMC,IAJbC,oEAI0CpJ,I,SCCtCqJ,GAAgB,CAJT,IAAIC,KAAOC,OAAO,UAShBC,GAHa,SAACC,GAAD,OAC1BC,aAAUD,EAAcJ,KCPpBjN,GAAW,IAAIkN,KAAOC,OAAO,aAG7Bra,GAAa,IAAIoa,KAAOC,OAAO,eAI/Bxc,GAAO,IAAIuc,KAAOC,OAAO,OAAQ,CACrCI,UAAWvN,GACXwN,YAAa,CAAC1a,MAKDsa,GAFa,SAACC,GAAD,OAAkBC,aAAUD,EAAc1c,KCkCzD8c,GAAiB,SAAC7J,GAAD,OAAY,SAACjN,GACzC,OAAOkW,GAASjJ,GACb8J,MAAK,SAACC,GAGL,IAAMC,EAAqBC,GAAeF,EAAI7N,KAAKgO,SAEnDnX,EAAS,CACPkN,KCxDmC,8BDyDnCkK,QAASH,IAGXjX,EAASqX,MAETrX,EAASsX,SAEVC,OAAM,SAACC,GACNxX,EAAS,CAAEkN,KChEsB,0BDgESkK,QAASI,IACnDC,QAAQC,MAAMF,GACdxX,EAASsX,WAsBFK,GAAsB,SAAC9W,GAAD,OAAQ,SAACb,GAC1C,OAAOkW,GAAS,IAAMrV,EAAK,KACxBkW,MAAK,SAACC,GACL,IAAMC,EAAqBW,GAAcZ,EAAI7N,MACvC0O,EAASZ,EAAmBY,OAE5BC,EAAab,EAAmBc,SAAS/d,KAAK6d,GAC9CG,EAAmBf,EAAmBc,SAASlB,YAC/CoB,EAAiBhB,EAAmBc,SAASnB,UAEnD5W,EAAS,CACPkN,KC/FkC,6BDgGlCkK,QAASU,IAEX9X,EAASkY,GAAwBF,IACjChY,EAASmY,GAAuBF,OAEjCV,OAAM,SAACG,GACN1X,EAAS,CAAEkN,KCrGqB,yBDqGSkK,QAASM,IAClD1X,EAASoY,WAIFC,GAAgB,SAACC,GAAD,OAAc,SAACtY,EAAUuY,GACpD,IACE,IAAMC,EAAaD,IAAWE,aAAaV,SAAShe,MAAMue,GACpDrB,EAAqBW,GAAcY,GACnCX,EAASZ,EAAmBY,OAE5BC,EAAab,EAAmBc,SAAS/d,KAAK6d,GAC9CG,EAAmBf,EAAmBc,SAASlB,YAC/CoB,EAAiBhB,EAAmBc,SAASnB,UAEnD5W,EAAS,CAAEkN,KCnHyB,2BDmHOkK,QAASU,IACpD9X,EAASkY,GAAwBF,IACjChY,EAASmY,GAAuBF,IAChC,MAAOP,GACP1X,EAAS,CAAEkN,KCtHqB,uBDsHOkK,QAASM,OAwBvCgB,GAAqB,WAChC,MAAO,CAAExL,KCrI0B,0BDwIxBoK,GAAsB,WACjC,MAAO,CAAEpK,KCxI2B,2BD2IzByL,GAAoB,WAC/B,MAAO,CAAEzL,KC3IyB,yBD8IvBkL,GAAqB,WAChC,MAAO,CAAElL,KC9I0B,0BDmJxBgL,GAA0B,SAAC/b,GACtC,MAAO,CAAE+Q,KCjJ+B,6BDiJGkK,QAASjb,IAUzCgc,GAAyB,SAACS,GACrC,MAAO,CAAE1L,KCxJ8B,4BDwJGkK,QAASwB,IA0BxCvB,GAAqB,kBAAM,SAACrX,EAAUuY,GACjD,IAAMM,EAAeN,IAAWE,aAAaV,SAAShe,MAChD+e,EAAcP,IAAWE,aAAaZ,OAE5C,IAAK,IAAD,IACEkB,EAAM,EACNC,EAAM,EACNC,EAAO,EACPC,EAAS,EAJX,cAMeJ,GANf,IAMF,2BAA8B,CAAC,IAAtB9e,EAAqB,QAC5B,GACE6e,EAAa7e,GAAM6c,YAAY9Z,QAC/B8b,EAAa7e,GAAM4c,UACnB,CACA,IAAIva,EAAW,EAEfwc,EAAa7e,GAAM6c,YAAYsC,SAC7B,SAACC,GAAD,OAAW/c,GAAY+c,EAAK/c,YAG9B0c,GAAO1c,EAAWG,WAAWqc,EAAa7e,GAAM4c,UAAU3F,MAAY,EACtE+H,GAAO3c,EAAWG,WAAWqc,EAAa7e,GAAM4c,UAAU1F,MAAY,EACtE+H,GACE5c,EAAWG,WAAWqc,EAAa7e,GAAM4c,UAAUzF,MAAa,EAClE+H,GACE7c,EAAWG,WAAWqc,EAAa7e,GAAM4c,UAAUxF,MAAe,IAtBtE,8BA0BF,IAAIiI,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CviB,MAAO,WACPwiB,SAAU,QAcZxZ,EAAS,CACPkN,KC3P8B,uBD4P9BkK,SATW,mBACVnG,GAASoI,EAAUI,OAAOV,EAAItc,QAAQ,KAD5B,cAEVyU,GAASmI,EAAUI,OAAOT,EAAIvc,QAAQ,KAF5B,cAGV0U,GAAUkI,EAAUI,OAAOR,EAAKxc,QAAQ,KAH9B,cAIV2U,GAAYiI,EAAUI,OAAOP,EAAOzc,QAAQ,KAJlC,KAWb,MAAOib,GACPD,QAAQC,MAAMA,M,SEvPZgC,GAAW,SAAC3Z,GAAD,OAAWA,EAAM0Y,aAAaV,SAAShe,OAClD4f,GAAkB,SAAC5Z,GAAD,OAAWA,EAAM0Y,aAAaZ,QAIzC+B,GAAgBC,aAC3B,CAACH,GAAUC,GAJe,SAAC5Z,GAAD,OAAWA,EAAM+Z,kBACjB,SAAC/Z,GAAD,OAAWA,EAAMga,iBAI3C,SAAChgB,EAAOod,EAAS7O,EAAe0R,GAC9B,OAAO7C,EAAQ8C,QAAO,SAACjD,EAAKa,GAC1B,IAAM7d,EAAI,eAAQD,EAAM8d,IAIxB,I7CZqB,SAAC7d,GAC1B,IAAIkgB,GAAU,EAMd,OAJIC,kBAAQngB,EAAK6c,eACfqD,GAAU,GAGLA,E6CGaE,CAAYpgB,GAM1B,OAHAyd,QAAQC,MAAM1d,GAGPgd,EAGT,IAAM1Q,EAAqB,2DAAuDtM,EAAKqgB,eAEjF/Q,E7CCuB,SAACnN,GAClC,IADiD,EAC7CC,EAAgBF,EAAgBC,GAChCme,EAAqB,EAFwB,cAIhCne,GAJgC,IAIjD,2BAA6B,CAAC,IAArBid,EAAoB,QAC3BkB,GACE9d,WAAW4c,EAAKmB,aAAe/d,WAAW4c,EAAKoB,eANF,8BAajD,OAJ6Ble,EAC3Bge,EAAqBle,G6CXMqe,CAAoBzgB,EAAK6c,aAC5CxN,EAAW/M,EACfE,WAAWxC,EAAK4c,UAAUtO,KAEtBkB,E7CyBHlN,E6CzB2B+M,EAAUC,GAClCG,EAASjM,EAAe6L,EAAUC,GAElCoR,EAAY1gB,EAAK6c,YACpBoD,QAAO,SAACU,EAAKC,GAEZ,OADAD,EAAIpK,KAAKqK,EAAMC,gBACRF,IACN,IACF9P,OAEGiQ,EAAS,CACbld,SAAU5D,EAAK+gB,UACfhX,KAAM/J,EAAK+J,KACX4B,SAAU3L,EAAK2L,SACfvC,QAASpJ,EAAKghB,SACd3U,OAAQrM,EAAKihB,QACbnX,YAAa9J,EAAKkhB,aAClB5U,wBACAmD,SACApN,SAAUH,EAAgBlC,EAAK6c,aAC/BvN,mBACAD,WACAG,WACAnG,SAAUqX,EAAU,GACpBpX,OAAQoX,EAAUA,EAAU3d,OAAS,IAOvC,O7CkEyB,SAACgd,EAAe/f,GAAU,IAAD,iBAa7C+f,GAXPnL,EAFoD,EAEpDA,OACAxL,EAHoD,EAGpDA,QACAxF,EAJoD,EAIpDA,SACAoR,EALoD,EAKpDA,eACAE,EANoD,EAMpDA,YACAE,EAPoD,EAOpDA,aACAE,EARoD,EAQpDA,UACAE,EAToD,EASpDA,iBACAE,EAVoD,EAUpDA,cACArM,EAXoD,EAWpDA,SACAC,EAZoD,EAYpDA,OAGF,GAAIsL,IAAW5U,EAAK+J,KAClB,OAAO,EAGT,GAAIX,GAAWpJ,EAAKoJ,UAAYA,EAC9B,OAAO,EAGT,GAAIxF,GAAY5D,EAAK4D,WAAaA,EAChC,OAAO,EAGT,GAAIoR,GAAkBE,EACpB,OAAQF,GACN,IAAK,KACH,GAAIhV,EAAKyP,QAAUyF,EACjB,MAEA,OAAO,EAEX,IAAK,IACH,GAAIlV,EAAKyP,SAAWyF,EAClB,MAEA,OAAO,EAEX,IAAK,KACH,GAAIlV,EAAKyP,QAAUyF,EACjB,MAEA,OAAO,EAOf,GAAIE,GAAgBE,EAClB,OAAQF,GACN,IAAK,KACH,GAAIpV,EAAKwP,UAAY8F,EACnB,MAEA,OAAO,EAEX,IAAK,IACH,GAAItV,EAAKwP,WAAa8F,EACpB,MAEA,OAAO,EAEX,IAAK,KACH,GAAItV,EAAKwP,UAAY8F,EACnB,MAEA,OAAO,EAOf,GAAIE,GAAoBE,EACtB,OAAQF,GACN,IAAK,KACH,GAAIxV,EAAKqP,UAAYqG,EACnB,MAEA,OAAO,EAEX,IAAK,IACH,GAAI1V,EAAKqP,WAAaqG,EACpB,MAEA,OAAO,EAEX,IAAK,KACH,GAAI1V,EAAKqP,UAAYqG,EACnB,MAEA,OAAO,EAOf,QAAIrM,GAMErJ,EAAKqJ,SAAWA,GAAYrJ,EAAKsJ,OAASD,MAK5CC,GAMEtJ,EAAKsJ,OAASA,GAAUtJ,EAAKqJ,SAAWC,G6C7LtC6X,CAAgBnB,EAAkBc,IACpC9D,EAAIzG,KAAKuK,GAGJ9D,IACN,OAIMxI,GAAmBqL,aAC9B,CAACH,GAAUC,KACX,SAAC5f,EAAOod,GAAR,OACEA,EAAQxO,KAAI,SAACkP,GACX,IAAM7d,EAAI,eAAQD,EAAM8d,IAExB,MAAO,CAAElL,KAAM3S,EAAK+gB,UAAWzK,IAAKtW,EAAKghB,gBC3ChClb,gBAvBS,SAACC,GACvB,MAAO,CACLhG,MAAO6f,GAAc7Z,GACrByO,iBAAkBA,GAAiBzO,GACnC6J,eAAgB7J,EAAMqb,iBAAiBrhB,MACvCuO,cAAevI,EAAM+Z,iBACrBrL,aAAc1O,EAAMga,cACpB/H,UAAWjS,EAAMsb,qBAIM,SAACrb,GAC1B,MAAO,CACLwT,oBAAqB,kBAAMxT,EHsKtB,CAAEkN,KC/J2B,4BENlCuG,oBAAqB,kBAAMzT,EHyKtB,CAAEkN,KClK2B,4BENlCwG,qBAAsB,kBAAM1T,EH4KvB,CAAEkN,KCrK4B,6BENnCyG,uBAAwB,kBAAM3T,EH+KzB,CAAEkN,KCxK8B,+BENrCwB,iBAAkB,SAAC0I,GAAD,OAAapX,EHuGH,SAACoX,GAAD,gDAAa,WAAOpX,GAAP,UAAAgH,EAAA,sEACrChH,EAAS0Y,MAD4B,uBAErC1Y,EAAS,CAAEkN,KC3He,qBD2HWkK,YAFA,OAG3CpX,EAASsX,MAHkC,2CAAb,sDGvGY5I,CAAiB0I,KACzDzI,mBAAoB,kBAAM3O,EH6GrB,CAAEkN,KC/HyB,0BEmBhC9D,aAAc,SAACgO,GAAD,OAAapX,EHiHH,SAACoX,GAC3B,MAAO,CAAElK,KClImB,iBDkIGkK,WGlHOhO,CAAagO,QAItCtX,CAA6CmW,ICD7CqF,GAhCQ,SAAC3kB,GAAW,IAAD,iBAU3BA,GARHqD,EAF8B,EAE9BA,KACAuhB,EAH8B,EAG9BA,gBACAC,EAJ8B,EAI9BA,cACApD,EAL8B,EAK9BA,mBAEYvX,EAPkB,EAM9B4a,MACExO,OAAUpM,GAgBd,OAVAyJ,qBAAU,WACRiR,EAAgB1a,KACf,CAAC0a,EAAiB1a,IAErByJ,qBAAU,YACH6P,kBAAQngB,IAASwhB,GACpBpD,MAED,CAACpe,EAAMwhB,EAAepD,IAGvB,yBAAKlhB,YAAU,kBACb,iDACA,+CAAqBskB,EAAc5e,YACnC,8CAAoB8e,KAAKC,UAAU3hB,MC5BnC4hB,GAAU,SAAC7b,GAAD,OAAWA,EAAM8b,aAI3BC,GAAqBjC,aACzB,CAAC+B,GAJmB,SAAC7b,GAAD,OAAWA,EAAMgc,qBAKrC,SAAC/hB,EAAMmC,GACL,IACE,OAAOnC,EAAK6c,YAAYlO,KAAI,SAACqT,GAC3B,OAAO,eAEF7f,EAAW6f,OAGlB,SACA,MAAO,OAKPC,GAAmBpC,aACvB,CAAC+B,GAnBiB,SAAC7b,GAAD,OAAWA,EAAMmc,oBAoBnC,SAACliB,EAAM4e,GACL,IACE,OAAO,eAEFA,EAAU5e,EAAK4c,YAEpB,SACA,MAAO,OAKAuF,GAAetC,aAC1B,CAAC+B,GAASE,GAAoBG,KAC9B,SAACjiB,EAAMmC,EAAYkN,GAGjB,OAAO,2BAEFrP,GAFL,IAGE6c,YAAa1a,EACbya,UAAWvN,OC1BFvJ,gBAdS,SAACC,GACvB,MAAO,CACL/F,KAAMmiB,GAAapc,GACnByb,cAAezb,EAAMqb,iBAAiBphB,SAIf,SAACgG,GAC1B,MAAO,CACLub,gBAAiB,SAACtO,GAAD,OAAYjN,GN6DDa,EM7D0BoM,EN6DnB,SAACjN,EAAUuY,GAAc,IACtDR,EAAaQ,IAAWE,aAAxBV,SACFqE,EAAe7D,IAAWsD,YAAYhb,GAE5Cb,EAAS2Y,MAELwB,kBAAQpC,IACV/X,EAAS8W,MACT9W,EAAS2X,GAAoB9W,KACpBjE,SAASwf,KAAkBxf,SAASiE,IAE7Cb,EAASqY,GAAcxX,OAXI,IAACA,GM5D5BuX,mBAAoB,kBAAMpY,EAASoY,UAIxBtY,CAA6Cwb,ICK7Ce,GAlBS,SAAC1lB,GACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE2lB,OAAK,EACLziB,KAAMwB,EAAsBtB,MAAMF,KAClCqB,UAAW,SAACqhB,GAAD,OAAgB,kBAACC,GAAuBD,MAGrD,kBAAC,IAAD,CACED,OAAK,EACLziB,KAAMwB,EAAsBrB,KAAKH,KACjCqB,UAAW,SAACqhB,GAAD,OAAgB,kBAACE,GAA4BF,QCEjDzc,gBAhBS,SAACC,GACvB,MAAO,MAGkB,SAACC,GAC1B,MAAO,KAWMF,EARY,SAACnJ,GAC1B,OACE,yBAAKO,YAAU,uBACb,kBAAC,GAAD,UCQSwlB,GAjBA,SAAC/lB,GACd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE2lB,OAAK,EACLziB,KAAMwB,EAAiBxB,KACvBqB,UAAW,SAACqhB,GAAD,OAAgB,kBAACI,GAAsBJ,MAGpD,kBAAC,IAAD,CACE1iB,KAAMwB,EAAsBxB,KAC5BqB,UAAW,SAACqhB,GAAD,OAAgB,kBAAC,GAAuBA,QCgB5CK,GA1BE,SAACjmB,GAAW,IAAD,iBACqCA,GAAvDkmB,EADkB,EAClBA,WAAYC,EADM,EACNA,gBAAiBhD,EADX,EACWA,iBAErCxP,qBAAU,WACRuS,EAAW,iBAEV,CAACA,IAEJ,IAEME,EACJD,EAAgBhD,IAAhB,aACMgD,EAAgBhD,IAExB,OACE,yBAAK5iB,YAAU,YACb,kBAAC,GAAD,CAAkBmI,MARL,gBAQuB0d,IACpC,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,UCTKjd,gBAbS,SAACC,GACvB,MAAO,CACL+c,gBAAiB/c,EAAMid,uBACvBlD,iBAAkB/Z,EAAM+Z,qBAID,SAAC9Z,GAC1B,MAAO,CACL6c,WAAY,SAAC5P,GAAD,OAAYjN,EX6BF,SAACiN,GAAD,OAAY,SAACjN,GAErCA,EAAS0Y,MACT1Y,EAAS8W,GAAe7J,KWhCW4P,CAAW5P,QAIjCnN,CAA6C8c,I,oBCqC7CtlB,GApDD2lB,aAAe,CAC3BhjB,YAAa,CACXijB,OAAQ,CACNpU,GAAI,EACJqU,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,OAGR5lB,QAAS,CACPC,QAAS,CACPC,KAAM,uBACN2lB,KAAM,UACNhM,MAAO,wBACP7J,aAAc,QAEhBhH,OAAQ,CACN4L,SAAU,yBACV3L,UAAW,yBACXQ,MAAO,uBACPC,IAAK,uBACLoE,KAAM,yBACNN,KAAM,yBAER1J,UAAW,CACT5D,KAAM,wBAER2D,KAAM,CAAE5D,QAAS,OAAQ6D,UAAW,QACpCgiB,OAAQ,CACNC,MAAO,2BAGXvlB,WAAY,CACVI,aAAc,GACdF,SAAU,GACVslB,WAAY,CAAC,sBAAuB,uBAEtCC,UAAW,CACTC,SAAU,CACRC,UAAW,CACT,6CAA8C,CAC5CC,YAAa,yBAEf,4CAA6C,CAC3CA,YAAa,8BC/BRC,I,GAAAA,GAVf,WACE,OACE,kBAACC,GAAA,EAAD,CAAe1mB,MAAOA,IACpB,kBAAC,IAAD,KACE,kBAAC2mB,GAAD,S,SCJKC,GAAY,CACvBnG,SAAU,GACVF,OAAQ,IAeKY,GAZM,WAAgC,IAA/B1Y,EAA8B,uDAAtBme,GAAWV,EAAW,uCAClD,OAAQA,EAAOtQ,MACb,IbZuC,8BaarC,OAAOsQ,EAAOpG,QAEhB,IbdmC,0BaejC,OAAO8G,GACT,QACE,OAAOne,ICXAme,GAAY,GAiBVrC,GAfK,WAAgC,IAA/B9b,EAA8B,uDAAtBme,GAAWV,EAAW,uCACjD,OAAQA,EAAOtQ,MACb,IdNsC,6BcQtC,IdNoC,2BcOlC,OAAOsQ,EAAOpG,QAChB,IdTkC,yBcWlC,IdTgC,uBcU9B,OAAO8G,GACT,QACE,OAAOne,ICdAme,GAAY,CACvBnkB,OAAO,EACPC,MAAM,GAsBOohB,GAnBU,WAAgC,IAA/Brb,EAA8B,uDAAtBme,GAAWV,EAAW,uCACtD,OAAQA,EAAOtQ,MACb,IfKiC,wBeJ/B,OAAO,2BAAKnN,GAAZ,IAAmBhG,OAAO,IAE5B,IfGkC,yBeFhC,OAAO,2BAAKgG,GAAZ,IAAmBhG,OAAO,IAE5B,IfCgC,uBeA9B,OAAO,2BAAKgG,GAAZ,IAAmB/F,MAAM,IAE3B,IfDiC,wBeE/B,OAAO,2BAAK+F,GAAZ,IAAmB/F,MAAM,IAE3B,QACE,OAAO+F,ICtBAme,GAAY,GAeVnC,GAbW,WAAgC,IAA/Bhc,EAA8B,uDAAtBme,GAAWV,EAAW,uCACvD,OAAQA,EAAOtQ,MACb,IhBgBsC,6BgBfpC,OAAOsQ,EAAOpG,QAEhB,IhBckC,yBgBbhC,OAAO8G,GAET,QACE,OAAOne,ICXAme,GAAY,GAeVhC,GAbU,WAAgC,IAA/Bnc,EAA8B,uDAAtBme,GAAWV,EAAW,uCACtD,OAAQA,EAAOtQ,MACb,IjBoBqC,4BiBnBnC,OAAOsQ,EAAOpG,QAEhB,IjBkBiC,wBiBjB/B,OAAO8G,GAET,QACE,OAAOne,ICFAoe,GAAqB,CAChCC,uBAAwBnN,GACxBoN,uBAAwBnN,GACxBoN,wBAAyBnN,GACzBoN,0BAA2BnN,IAGvB8M,GAAYC,GAAkB,0BAiBrBrE,GAfU,WAAgC,IAA/B/Z,EAA8B,uDAAtBme,GAAWV,EAAW,uCACtD,OAAQA,EAAOtQ,MACb,IlBQkC,yBkBPhC,OAAOiR,GAAkB,uBAC3B,IlBOkC,yBkBNhC,OAAOA,GAAkB,uBAC3B,IlBMmC,0BkBLjC,OAAOA,GAAkB,wBAC3B,IlBKqC,4BkBJnC,OAAOA,GAAkB,0BAC3B,QACE,OAAOpe,IChCPme,GAAY,CAChBtP,QAAQ,EACRxL,QAAS,KACTxF,SAAU,KACVoR,eAAgB,GAChBE,YAAa,GACbE,aAAc,GACdE,UAAW,GACXE,iBAAkB,GAClBE,cAAe,GACfrM,SAAU,GACVC,OAAQ,IAcKyW,GAXO,WAAgC,IAA/Bha,EAA8B,uDAAtBme,GAAWV,EAAW,uCACnD,OAAQA,EAAOtQ,MACb,InBN8B,qBmBO5B,OAAOsQ,EAAOpG,QAChB,InBPgC,uBmBQ9B,OAAO8G,GACT,QACE,OAAOne,ICrBPme,GAAY,CAChB7U,SAAU,GACV3L,cAAe,GACf6L,KAAM,GACNE,OAAQ,GACR7L,SAAU,IAYGyd,GATU,WAAgC,IAA/Btb,EAA8B,uDAAtBme,GAAWV,EAAW,uCACtD,OAAQA,EAAOtQ,MACb,IpBI0B,iBoBHxB,OAAOsQ,EAAOpG,QAChB,QACE,OAAOrX,ICUPye,IAAY,qBACfvN,GAAS,IADM,eAEfC,GAAS,IAFM,eAGfC,GAAU,IAHK,eAIfC,GAAY,IAJG,IAOH4L,GAhBgB,WAAmC,IAAlCjd,EAAiC,uDAAzBye,GAAchB,EAAW,uCAC/D,OAAQA,EAAOtQ,MACb,IrBfgC,uBqBgB9B,OAAOsQ,EAAOpG,QAChB,QACE,OAAOrX,ICVE0e,8BAAgB,CAC7B3E,oBACArB,gBACAoD,eACAT,oBACAW,qBACAG,oBACAnC,iBACAsB,oBACA2B,4B,oBCfa0B,0BACbC,GACAC,+BAAoBC,2BAAgBC,QCDtCC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9010941d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\n\r\nconst EnhancedContainer = (props) => {\r\n  const { className, classes, disableGutters = false, dataTest, style } = {\r\n    ...props,\r\n  };\r\n  return (\r\n    <Container\r\n      className={className}\r\n      classes={classes}\r\n      data-test={dataTest}\r\n      disableGutters={disableGutters}\r\n      style={style}\r\n    >\r\n      {props.children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EnhancedContainer;\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport Container from './Container';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.primary.main,\r\n      padding: '0px 8px',\r\n    },\r\n  };\r\n});\r\n\r\nconst MuiAppBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { className, dataTest } = { ...props };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='fixed' className={className} data-test={dataTest}>\r\n        <Container>\r\n          <Toolbar disableGutters={true}>{props.children}</Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MuiAppBar;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {},\r\n    typography: {\r\n      lineHeight: 1,\r\n      fontSize: (props) =>\r\n        props.largeText\r\n          ? theme.typography.htmlFontSize\r\n          : theme.typography.fontSize,\r\n      fontWeight: (props) =>\r\n        props.bold\r\n          ? theme.typography.fontWeightBold\r\n          : theme.typography.fontWeightRegular,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n  };\r\n});\r\n\r\nconst EnhancedTypography = (props) => {\r\n  const classes = useStyles(props);\r\n  const { className } = { ...props };\r\n  return (\r\n    <Typography className={className} classes={{ root: classes.typography }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default EnhancedTypography;\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: (props) => {\r\n        return props.matches ? '12px' : '8px';\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst EnhancedIconButton = React.forwardRef((props, ref) => {\r\n  // Returns true if viewport width >= 600px\r\n  const matches = useMediaQuery('(min-width:600px)');\r\n\r\n  const classes = useStyles({ matches });\r\n  const {\r\n    edge,\r\n    color,\r\n    ariaLabel,\r\n    onClick,\r\n    dataTest,\r\n    className,\r\n    ariaExpanded,\r\n  } = { ...props };\r\n\r\n  return (\r\n    <IconButton\r\n      classes={{ root: classes.root }}\r\n      edge={edge}\r\n      color={color}\r\n      aria-label={ariaLabel}\r\n      onClick={onClick}\r\n      data-test={dataTest}\r\n      className={className}\r\n      aria-expanded={ariaExpanded}\r\n      ref={ref}\r\n    >\r\n      {props.children}\r\n    </IconButton>\r\n  );\r\n});\r\n\r\nexport default EnhancedIconButton;\r\n","export default {\r\n  home: {\r\n    path: '/',\r\n    label: 'Home',\r\n  },\r\n  inventory: {\r\n    label: 'Inventory',\r\n    path: '/inventory',\r\n    cards: {\r\n      path: '/inventory/cards',\r\n      label: 'Cards',\r\n    },\r\n    card: { path: '/inventory/card/:id', label: 'Single Card' },\r\n  },\r\n};\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Menu, MenuItem } from '@material-ui/core/';\r\nimport EnhancedIconButton from '../component-library/mui/components/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport RouteMapper from '../routes/RouteMapper';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      // down() works as a \"less than\"\r\n      [theme.breakpoints.down('md')]: {\r\n        display: 'block',\r\n      },\r\n      // up() works as a \"greater than\"\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    links: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  };\r\n});\r\n\r\nconst MuiMenuIcon = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div data-test='mobile-menu' className={classes.root}>\r\n      <EnhancedIconButton\r\n        edge={false}\r\n        color='inherit'\r\n        aria-label='menu'\r\n        onClick={handleClick}\r\n        data-test='mobile-menu-icon-button'\r\n      >\r\n        <MenuIcon fontSize='large' data-test='mobile-menu-icon' />\r\n      </EnhancedIconButton>\r\n\r\n      <Menu\r\n        data-test='mui-menu'\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem\r\n          onClick={handleClose}\r\n          component={Link}\r\n          to={RouteMapper.home.path}\r\n          classes={{ root: classes.links }}\r\n          data-test='home-link'\r\n        >\r\n          {RouteMapper.home.label}\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={handleClose}\r\n          component={Link}\r\n          to={RouteMapper.inventory.cards.path}\r\n          classes={{ root: classes.links }}\r\n          data-test='inventory-link'\r\n        >\r\n          {RouteMapper.inventory.label}\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MuiMenuIcon;\r\n","import React from 'react';\r\nimport { Tabs } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {},\r\n    indicator: {\r\n      backgroundColor: theme.palette.text.secondary,\r\n    },\r\n  };\r\n});\r\n\r\nconst EnhancedTabs = (props) => {\r\n  const { initialValue, className } = { ...props };\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(initialValue);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label='mui tabs'\r\n        classes={{ indicator: classes.indicator }}\r\n        data-test='tabs-wrapper'\r\n      >\r\n        {props.children}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnhancedTabs;\r\n","import React from 'react';\r\nimport { Tab } from '@material-ui/core';\r\n\r\nconst EnhancedTab = (props) => {\r\n  const { label, component, to, dataTest, onChange, value, className } = {\r\n    ...props,\r\n  };\r\n  return (\r\n    <Tab\r\n      className={className}\r\n      label={label}\r\n      component={component}\r\n      to={to}\r\n      data-test={dataTest}\r\n      onChange={onChange} // Default prop from MUI, do not pass down manually\r\n      value={value} // Default prop from MUI, do not pass down manually\r\n    />\r\n  );\r\n};\r\n\r\nexport default EnhancedTab;\r\n","import { isEmpty } from 'lodash';\r\n\r\nexport const getCardQuantity = (specPrices) => {\r\n  let totalQuantity = 0;\r\n\r\n  for (let spec of specPrices) {\r\n    totalQuantity += spec.quantity;\r\n  }\r\n\r\n  return totalQuantity;\r\n};\r\n\r\nexport const cardIsValid = (card) => {\r\n  let isValid = true;\r\n\r\n  if (isEmpty(card.spec_prices)) {\r\n    isValid = false;\r\n  }\r\n\r\n  return isValid;\r\n};\r\n\r\nexport const roundTwoDecimals = (num) => {\r\n  return parseFloat(num.toFixed(2));\r\n};\r\n\r\nexport const addZeroes = (num) => {\r\n  // Display only, forces two decimal points\r\n  num = num.toString();\r\n  const dec = num.split('.')[1];\r\n  const len = dec && dec.length > 2 ? dec.length : 2;\r\n  return Number(num).toFixed(len);\r\n};\r\n\r\nexport const getAvgPurchasePrice = (specPrices) => {\r\n  let totalQuantity = getCardQuantity(specPrices);\r\n  let totalPurchasePrice = 0;\r\n\r\n  for (let spec of specPrices) {\r\n    totalPurchasePrice +=\r\n      parseFloat(spec.total_cash) || parseFloat(spec.total_credit);\r\n  }\r\n\r\n  const averagePurchasePrice = roundTwoDecimals(\r\n    totalPurchasePrice / totalQuantity\r\n  );\r\n\r\n  return averagePurchasePrice;\r\n};\r\n\r\nexport const getPriceCategory = (category) => {\r\n  const categories = {\r\n    low_price: 'TCG Low Price',\r\n    mid_price: 'TCG Mid Price',\r\n    high_price: 'TCG High Price',\r\n    market_price: 'TCG Market Price',\r\n  };\r\n\r\n  return categories[category];\r\n};\r\n\r\nexport const gainLossCalc = (currentPrice, purchasePrice) => {\r\n  return roundTwoDecimals(currentPrice - purchasePrice);\r\n};\r\n\r\nexport const isPositive = (num) => {\r\n  if (num > 0) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getPriceSpread = (currentPrice, purchasePrice) => {\r\n  return roundTwoDecimals(\r\n    ((currentPrice - purchasePrice) / purchasePrice) * 100\r\n  );\r\n};\r\n\r\nfunction replaceInCardName(cardName) {\r\n  const replaceTargets = [\r\n    ' (Borderless)',\r\n    ' (Extended Art)',\r\n    ' (JP Alternate Art)',\r\n    ' (Showcase)',\r\n    ' (Alternate Art)',\r\n  ];\r\n  for (let target of replaceTargets) {\r\n    cardName = cardName.replace(target, '');\r\n  }\r\n  return cardName;\r\n}\r\n\r\nexport const formatCardKingdomBuylistLink = (cardName) => {\r\n  const baseUri =\r\n    'https://www.cardkingdom.com/purchasing/mtg_singles?filter%5Bsearch%5D=mtg_advanced&filter%5Bname%5D=';\r\n\r\n  const replacedCardname = replaceInCardName(cardName);\r\n\r\n  const outStr = baseUri + encodeURIComponent(replacedCardname);\r\n\r\n  return outStr;\r\n};\r\n\r\nexport const formatEdhrecLink = (cardName) => {\r\n  const baseUri = 'https://edhrec.com/cards/';\r\n\r\n  const replacedCardname = replaceInCardName(cardName);\r\n\r\n  const outStr = baseUri + replacedCardname.split(' ').join('-');\r\n\r\n  return outStr;\r\n};\r\n\r\n// Used in determining which HeaderNavigation link is active on Comp Did Mount\r\n// Takes in the useLocation() hook from react router dom\r\nexport const getTabLinksPath = (location) => {\r\n  const pathMap = {\r\n    inventory: {\r\n      path: '/inventory',\r\n      value: 0,\r\n    },\r\n    home: {\r\n      path: '/',\r\n      value: 1,\r\n    },\r\n  };\r\n\r\n  if (location.pathname.startsWith('/inventory')) {\r\n    return pathMap.inventory.value;\r\n  } else {\r\n    return pathMap.home.value;\r\n  }\r\n};\r\n\r\nexport const filterByReducer = (filterReducer, card) => {\r\n  const {\r\n    isFoil,\r\n    setName,\r\n    cardName,\r\n    spreadOperator,\r\n    spreadValue,\r\n    gainOperator,\r\n    gainValue,\r\n    tcgPriceOperator,\r\n    tcgPriceValue,\r\n    dateFrom,\r\n    dateTo,\r\n  } = { ...filterReducer };\r\n\r\n  if (isFoil && !card.foil) {\r\n    return false;\r\n  }\r\n\r\n  if (setName && card.setName !== setName) {\r\n    return false;\r\n  }\r\n\r\n  if (cardName && card.cardName !== cardName) {\r\n    return false;\r\n  }\r\n\r\n  if (spreadOperator && spreadValue) {\r\n    switch (spreadOperator) {\r\n      case '>=':\r\n        if (card.spread >= spreadValue) {\r\n          break;\r\n        } else {\r\n          return false;\r\n        }\r\n      case '=':\r\n        if (card.spread === spreadValue) {\r\n          break;\r\n        } else {\r\n          return false;\r\n        }\r\n      case '<=':\r\n        if (card.spread <= spreadValue) {\r\n          break;\r\n        } else {\r\n          return false;\r\n        }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  if (gainOperator && gainValue) {\r\n    switch (gainOperator) {\r\n      case '>=':\r\n        if (card.gainLoss >= gainValue) {\r\n          break;\r\n        } else {\r\n          return false;\r\n        }\r\n      case '=':\r\n        if (card.gainLoss === gainValue) {\r\n          break;\r\n        } else {\r\n          return false;\r\n        }\r\n      case '<=':\r\n        if (card.gainLoss <= gainValue) {\r\n          break;\r\n        } else {\r\n          return false;\r\n        }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  if (tcgPriceOperator && tcgPriceValue) {\r\n    switch (tcgPriceOperator) {\r\n      case '>=':\r\n        if (card.tcgPrice >= tcgPriceValue) {\r\n          break;\r\n        } else {\r\n          return false;\r\n        }\r\n      case '=':\r\n        if (card.tcgPrice === tcgPriceValue) {\r\n          break;\r\n        } else {\r\n          return false;\r\n        }\r\n      case '<=':\r\n        if (card.tcgPrice <= tcgPriceValue) {\r\n          break;\r\n        } else {\r\n          return false;\r\n        }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  if (dateFrom) {\r\n    // ex: original purchase dates = [8/1, 8/15]\r\n    // I want to find all cards I purchased after 8/10\r\n    // if (8/1 < 8/10 && 8/15 < 8/10)\r\n    // This will return true because we purchased a card after 8/10\r\n\r\n    if (card.dateFrom < dateFrom && card.dateTo < dateFrom) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (dateTo) {\r\n    // ex: original purchase dates = [8/1, 8/15]\r\n    // I want to check for all cards I purchased before 8/10\r\n    // if (8/15 > 8/10 && 8/1 > 8/10)\r\n    // This will return true because we purchased a card before 8/10\r\n\r\n    if (card.dateTo > dateTo && card.dateFrom > dateTo) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport const formatDateString = (date, type = 'USA') => {\r\n  const splitArray = date.split('-');\r\n\r\n  const year = splitArray[0];\r\n  const month = splitArray[1];\r\n  const day = splitArray[2];\r\n\r\n  switch (type) {\r\n    default:\r\n      // USA\r\n      return `${month}/${day}/${year}`;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport EnhancedTabs from '../component-library/mui/components/Tabs';\r\nimport EnhancedTab from '../component-library/mui/components/Tab';\r\nimport RouteMapper from '../routes/RouteMapper';\r\nimport { getTabLinksPath } from '../../utils';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    tabs: {\r\n      [theme.breakpoints.down('md')]: {\r\n        display: 'none',\r\n      },\r\n      // down() works as a \"greater than\"\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst HeaderTabLinks = () => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <EnhancedTabs\r\n      className={classes.tabs}\r\n      initialValue={getTabLinksPath(location)}\r\n    >\r\n      <EnhancedTab\r\n        className={classes.root}\r\n        label={RouteMapper.inventory.label}\r\n        component={Link}\r\n        to={RouteMapper.inventory.cards.path}\r\n        dataTest='inventory-link'\r\n      />\r\n      <EnhancedTab\r\n        className={classes.root}\r\n        label={RouteMapper.home.label}\r\n        component={Link}\r\n        to={RouteMapper.home.path}\r\n        dataTest='home-link'\r\n      />\r\n    </EnhancedTabs>\r\n  );\r\n};\r\n\r\nexport default HeaderTabLinks;\r\n","import React from 'react';\r\nimport AppBar from '../component-library/mui/components/AppBar';\r\nimport EnhancedTypography from '../component-library/mui/components/Typography';\r\nimport MobileMenu from './MobileMenu';\r\nimport HeaderTabLinks from './HeaderTabLinks';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    appBar: {\r\n      '& .MuiToolbar-root': {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n      },\r\n      '& .MuiTab-textColorInherit': {\r\n        // Sets opacity for visited links to 1\r\n        opacity: 1,\r\n      },\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      fontSize: theme.typography.h5.fontSize,\r\n    },\r\n  };\r\n});\r\n\r\nconst HeaderNavigation = (props) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  const { title } = { ...props };\r\n\r\n  return (\r\n    <AppBar\r\n      className={classes.appBar}\r\n      title={title}\r\n      dataTest={'HeaderNavigation'}\r\n    >\r\n      <EnhancedTypography dataTest='appbar-title' className={classes.title}>\r\n        {title}\r\n      </EnhancedTypography>\r\n\r\n      <MobileMenu />\r\n      <HeaderTabLinks location={location} />\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default HeaderNavigation;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    offset: theme.mixins.toolbar,\r\n  };\r\n});\r\n\r\n// Gives spacing above the main body of our content, so AppBar does not cover our body\r\nconst ToolbarMixin = (props) => {\r\n  const classes = useStyles();\r\n  const { className } = { ...props };\r\n  return (\r\n    <div data-test='toolbarMixin'>\r\n      <div className={`${classes.offset} ${className}`} />\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolbarMixin;\r\n","import React from 'react';\r\n\r\nconst HomePage = (props) => {\r\n  return <div data-test='homePage'>Home Page</div>;\r\n};\r\n\r\nexport default HomePage;\r\n","import { connect } from 'react-redux';\r\nimport HomePage from '../components/HomePage';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React from 'react';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\n\r\nconst EnhancedTableContainer = (props) => {\r\n  const { classes, className } = { ...props };\r\n  return (\r\n    <TableContainer className={className} classes={classes} component='div'>\r\n      {props.children}\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default EnhancedTableContainer;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\n\r\nfunction EnhancedTable(props) {\r\n  const { className } = { ...props };\r\n  return (\r\n    <Table className={className} component='div'>\r\n      {props.children}\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default EnhancedTable;\r\n","import React from 'react';\r\nimport TableHead from '@material-ui/core/TableHead';\r\n\r\nconst EnhancedTableHead = (props) => {\r\n  return <TableHead component='div'>{props.children}</TableHead>;\r\n};\r\n\r\nexport default EnhancedTableHead;\r\n","import React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst EnhancedTableBody = (props) => {\r\n  const { className } = { ...props };\r\n  return (\r\n    <TableBody className={className} component='div'>\r\n      {props.children}\r\n    </TableBody>\r\n  );\r\n};\r\n\r\nexport default EnhancedTableBody;\r\n","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      borderBottom: `1px solid ${theme.palette.custom.lightGray}`,\r\n    },\r\n  };\r\n});\r\n\r\nconst EnhancedTableRow = React.forwardRef((props, ref) => {\r\n  const classes = useStyles();\r\n\r\n  const { className, id } = { ...props };\r\n\r\n  return (\r\n    <TableRow\r\n      id={id}\r\n      ref={ref}\r\n      classes={{ root: classes.root }}\r\n      className={className}\r\n      data-test={'cards-table-row'}\r\n      component='div'\r\n    >\r\n      {props.children}\r\n    </TableRow>\r\n  );\r\n});\r\n\r\nexport default EnhancedTableRow;\r\n","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      maxWidth: '100%',\r\n      display: 'flex',\r\n      padding: (props) => (props.padding ? theme.spacing(8) : 0),\r\n      alignItems: (props) => (props.alignTop ? 'flex-start' : 'center'),\r\n      borderBottom: '0px',\r\n      color: (props) => {\r\n        if (props.useColor) {\r\n          return props.isPositive\r\n            ? theme.palette.custom.green\r\n            : theme.palette.custom.red;\r\n        }\r\n      },\r\n      fontWeight: (props) => {\r\n        if (props.bold) {\r\n          return 'bold';\r\n        }\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst EnhancedTableCell = (props) => {\r\n  const classes = useStyles(props);\r\n  const { colSpan, dataTest, className } = { ...props };\r\n  return (\r\n    <TableCell\r\n      classes={{ root: classes.root }}\r\n      className={className}\r\n      data-test={dataTest}\r\n      colSpan={colSpan}\r\n      component='div'\r\n    >\r\n      {props.children}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport default EnhancedTableCell;\r\n","import React from 'react';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      minWidth: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      padding: (props) => (props.padding ? theme.spacing(8) : 0),\r\n      alignItems: 'center',\r\n      border: (props) => props.noBorder && '0px',\r\n    },\r\n  };\r\n});\r\n\r\nconst EnhancedTablePagination = (props) => {\r\n  const classes = useStyles(props);\r\n\r\n  const {\r\n    rowsPerPageOptions,\r\n    count,\r\n    rowsPerPage,\r\n    page,\r\n    onChangePage,\r\n    onChangeRowsPerPage,\r\n    className,\r\n    labelRowsPerPage,\r\n  } = { ...props };\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={rowsPerPageOptions}\r\n      component='div'\r\n      count={count}\r\n      labelRowsPerPage={labelRowsPerPage}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      onChangePage={onChangePage}\r\n      onChangeRowsPerPage={onChangeRowsPerPage}\r\n      classes={{ root: classes.root }}\r\n      className={className}\r\n    >\r\n      {props.children}\r\n    </TablePagination>\r\n  );\r\n};\r\n\r\nexport default EnhancedTablePagination;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport EnhancedTypography from './Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  typography: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  const classes = useStyles();\r\n\r\n  const { className } = { ...props };\r\n\r\n  return (\r\n    <div className={classes.root + ' ' + className}>\r\n      <CircularProgress />\r\n      <EnhancedTypography bold className={classes.typography}>\r\n        Loading Inventory...\r\n      </EnhancedTypography>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      color: '#333 !important',\r\n      '$&hover': {\r\n        color: '#333',\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst EnhancedTableSortLabel = (props) => {\r\n  const classes = useStyles(props);\r\n  const { active, direction, onClick } = { ...props };\r\n  return (\r\n    <TableSortLabel\r\n      classes={{ root: classes.root, icon: classes.root, active: classes.root }}\r\n      active={active}\r\n      direction={direction}\r\n      onClick={onClick}\r\n    >\r\n      {props.children}\r\n    </TableSortLabel>\r\n  );\r\n};\r\n\r\nexport default EnhancedTableSortLabel;\r\n","import React from 'react';\r\nimport EnhancedTypography from '../component-library/mui/components/Typography';\r\nimport EnhancedContainer from '../component-library/mui/components/Container';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { formatDateString } from '../../utils';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: 'inline-flex',\r\n      width: 'auto',\r\n      '& img': {\r\n        maxHeight: '150px',\r\n      },\r\n    },\r\n    textContainer: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    gridItem: {\r\n      display: 'flex',\r\n    },\r\n    fullWidth: {\r\n      width: '100%',\r\n    },\r\n  };\r\n});\r\n\r\nconst CardDetails = (props) => {\r\n  const classes = useStyles();\r\n  let { cardName, setName, dateFrom, dateTo, className } = { ...props };\r\n\r\n  // Sets date to xx/xx/xxxx format\r\n  dateFrom = formatDateString(dateFrom);\r\n  dateTo = formatDateString(dateTo);\r\n\r\n  return (\r\n    <EnhancedContainer\r\n      classes={{ root: classes.textContainer }}\r\n      className={className}\r\n      disableGutters\r\n    >\r\n      <div className={classes.fullWidth} data-test='top-display'>\r\n        {props.children}\r\n        <EnhancedTypography largeText bold>\r\n          {cardName}\r\n        </EnhancedTypography>\r\n        <EnhancedTypography>{setName}</EnhancedTypography>\r\n      </div>\r\n\r\n      <div className={classes.fullWidth} data-test='bottom-display'>\r\n        <EnhancedTypography>\r\n          {dateFrom !== dateTo ? `${dateFrom} - ${dateTo}` : dateFrom}\r\n        </EnhancedTypography>\r\n      </div>\r\n    </EnhancedContainer>\r\n  );\r\n};\r\n\r\nexport default CardDetails;\r\n","import React from 'react';\r\nimport EnhancedContainer from '../component-library/mui/components/Container';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: 'inline-flex',\r\n      width: 'auto',\r\n      maxWidth: '100%',\r\n      margin: 0,\r\n      '& img': {\r\n        width: '96px',\r\n        height: '135px',\r\n        maxWidth: '100%',\r\n        borderRadius: '8px',\r\n        border: '1px solid black',\r\n      },\r\n    },\r\n    card: {\r\n      display: 'flex',\r\n    },\r\n    foilCard: {\r\n      '&:after': {\r\n        display: 'block',\r\n        position: 'relative',\r\n        maxWidth: '100%',\r\n        width: '96px',\r\n        height: '135px',\r\n        backgroundImage:\r\n          'linear-gradient(135deg, rgba(222,197,37,0) 0%, rgba(222,197,37,0) 1%, rgba(255,8,8,0.06) 19%, rgba(239,111,23,0.1) 32%, rgba(222,213,37,0.23) 45%, rgba(36,222,101,0.39) 62%, rgba(47,221,109,0.4) 63%, rgba(216,208,239,0.39) 79%, rgba(131,123,173,0.38) 88%, rgba(136,129,178,0.38) 89%, rgba(193,191,234,0) 100%)',\r\n        marginTop: '-140px',\r\n        borderRadius: '8px',\r\n        content: \"''\",\r\n      },\r\n    },\r\n    link: {\r\n      maxWidth: '100%',\r\n    },\r\n  };\r\n});\r\n\r\nconst Image = (props) => {\r\n  const { tcgImageUrl, foil } = { ...props };\r\n  const classes = useStyles();\r\n\r\n  const dataTest = foil ? 'foil-image-wrapper' : 'image-wrapper';\r\n  return (\r\n    <Link\r\n      className={classes.link}\r\n      to={{ pathname: tcgImageUrl }}\r\n      target='_blank'\r\n    >\r\n      <EnhancedContainer\r\n        className={foil ? classes.foilCard : classes.card}\r\n        dataTest={dataTest}\r\n        disableGutters\r\n      >\r\n        <img src={tcgImageUrl} alt='mtg-img' />\r\n      </EnhancedContainer>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst CardImage = (props) => {\r\n  const classes = useStyles();\r\n  const { tcgImageUrl, foil } = { ...props };\r\n  return (\r\n    <EnhancedContainer\r\n      dataTest='CardImage'\r\n      className={classes.root}\r\n      disableGutters\r\n    >\r\n      <Image tcgImageUrl={tcgImageUrl} foil={foil} />\r\n    </EnhancedContainer>\r\n  );\r\n};\r\n\r\nexport default CardImage;\r\n","import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst EnhancedTooltip = React.forwardRef((props, ref) => {\r\n  const { title, placement = 'bottom', arrow = true } = { ...props };\r\n  return (\r\n    <Tooltip\r\n      title={title}\r\n      placement={placement}\r\n      arrow={arrow}\r\n      enterDelay={500}\r\n      enterNextDelay={500}\r\n      ref={ref}\r\n    >\r\n      {props.children}\r\n    </Tooltip>\r\n  );\r\n});\r\n\r\nexport default EnhancedTooltip;\r\n","export default {\r\n  French: 'FR',\r\n  German: 'DE',\r\n  Italian: 'IT',\r\n  Japanese: 'JP',\r\n  Korean: 'KR',\r\n  Portuguese: 'POR',\r\n  Russian: 'RU',\r\n  Spannish: 'MX',\r\n};\r\n","import React from 'react';\r\nimport Container from '../component-library/mui/components/Container';\r\nimport EnhancedTooltip from '../component-library/mui/components/Tooltip';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatCardKingdomBuylistLink, formatEdhrecLink } from '../../utils';\r\nimport ReactCountryFlag from 'react-country-flag';\r\nimport countryCodes from '../constants/countryCodes';\r\nimport ExposureSharpIcon from '@material-ui/icons/ExposureSharp';\r\n\r\nfunction getPadding(foil, language, scaleSize) {\r\n  if (foil) {\r\n    return 5 * scaleSize;\r\n  } else if (!foil && countryCodes[language]) {\r\n    return 14 * scaleSize;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      fill: theme.palette.custom.blue,\r\n    },\r\n    flag: {\r\n      '& img': {\r\n        width: (props) => `${29 * props.scaleSize}px !important`,\r\n        height: (props) => `${29 * props.scaleSize}px !important`,\r\n        position: 'relative',\r\n        bottom: '1px', // Correct without bottom, but needs to be pushed up for more visual apeal\r\n        left: '2px',\r\n      },\r\n    },\r\n    star: {\r\n      width: (props) => `${29 * props.scaleSize}px`,\r\n      height: (props) => `${29 * props.scaleSize}px`,\r\n      fill: theme.palette.custom.gold,\r\n      paddingLeft: (props) => `${countryCodes[props.language] ? 8 : 0}px`,\r\n    },\r\n    tcgListing: {\r\n      width: (props) => `${19 * props.scaleSize}px`,\r\n      height: (props) => `${21 * props.scaleSize}px`,\r\n      paddingLeft: (props) =>\r\n        `${getPadding(props.foil, props.language, props.scaleSize)}px`,\r\n    },\r\n    cardKingdom: {\r\n      width: (props) => `${25 * props.scaleSize}px`,\r\n      height: (props) => `${27 * props.scaleSize}px`,\r\n      paddingLeft: (props) => `${10 * props.scaleSize}px`,\r\n    },\r\n    edhRec: {\r\n      width: (props) => `${29 * props.scaleSize}px`,\r\n      height: (props) => `${31 * props.scaleSize}px`,\r\n      paddingLeft: (props) => `${10 * props.scaleSize}px`,\r\n    },\r\n    tcgStore: {\r\n      width: (props) => `${60 * props.scaleSize}px`,\r\n      height: (props) => `${23 * props.scaleSize}px`,\r\n      paddingLeft: (props) => `${8 * props.scaleSize}px`,\r\n    },\r\n    calc: {\r\n      width: (props) => `${29 * props.scaleSize}px`,\r\n      height: (props) => `${29 * props.scaleSize}px`,\r\n      paddingLeft: (props) => `${8 * props.scaleSize}px`,\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n      },\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n  };\r\n});\r\n\r\nconst IconHolder = (props) => {\r\n  const classes = useStyles(props);\r\n  const {\r\n    foil,\r\n    cardName,\r\n    tcgUrl,\r\n    tcgSellerDashboardUrl,\r\n    language,\r\n    handlePriceCalc,\r\n    className,\r\n  } = {\r\n    ...props,\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      classes={{ root: classes.container }}\r\n      className={className}\r\n      disableGutters\r\n      dataTest='IconHolder'\r\n    >\r\n      {/* FLAG ICON */}\r\n\r\n      {countryCodes[language] && (\r\n        <EnhancedTooltip title={language}>\r\n          <SvgIcon\r\n            component='div'\r\n            className={`${classes.root} ${classes.flag}`}\r\n            data-test='flag-icon'\r\n          >\r\n            <ReactCountryFlag\r\n              countryCode={countryCodes[language]}\r\n              svg\r\n              aria-label={language}\r\n            />\r\n          </SvgIcon>\r\n        </EnhancedTooltip>\r\n      )}\r\n\r\n      {/* STAR ICON */}\r\n\r\n      {foil ? (\r\n        <EnhancedTooltip title='Foil'>\r\n          <SvgIcon\r\n            component='div'\r\n            className={`${classes.root} ${classes.star}`}\r\n            data-test='foil-icon'\r\n          >\r\n            <svg viewBox='0 0 24 24' height='29px' width='29px'>\r\n              <path d='M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z' />\r\n            </svg>\r\n          </SvgIcon>\r\n        </EnhancedTooltip>\r\n      ) : null}\r\n\r\n      {/* TCG LISTING ICON */}\r\n\r\n      <EnhancedTooltip title='TCG Player Listings'>\r\n        <Link to={{ pathname: tcgUrl }} target='_blank'>\r\n          <SvgIcon\r\n            component='div'\r\n            className={`${classes.root} ${classes.tcgListing}`}\r\n            data-test='tcg-icon'\r\n          >\r\n            <svg height='23px' width='23px' viewBox='0 0 10.399999 12'>\r\n              <path d='m4.22 0.8h-2.5536c-0.4496 0-0.8 0.3576-0.8 0.8v8.8c0 0.4424 0.3584 0.8 0.8 0.8h7.0672c0.4496 0 0.8-0.3576 0.8-0.8v-8.8c9e-7 -0.4424-0.3584-0.8-0.8-0.8h-1.4896l0.5472 2.52c0.025596 0.0768-0.00804 0.14-0.1008 0.188-0.0672 0.0352-0.1472 0.0528-0.24 0.0528-0.041604 0-0.072 0-0.092796-4e-3l-2.2712 0.9552 0.656 3.2432c0.020004 0.051204 0.00804 0.099204-0.036 0.144-0.0432 0.044796-0.1096 0.075204-0.1968 0.0912-0.051996 0.00636-0.087996 0.0096-0.108 0.0096-0.1496 0-0.2584-0.039996-0.3256-0.12l-2.444-3.9624c-0.056-0.0776-0.0384-0.148 0.0544-0.212 0.0776-0.048 0.1648-0.072 0.264-0.072 0.02 0 0.0504 0.0032 0.092 0.0096l2.1968-1.128-1.02-1.7152zm-4.22 0.005604c0-0.4456 0.3576-0.8056 0.8-0.8056h8.8c0.4424 0 0.8 0.36 0.8 0.8056v10.389c0 0.4456-0.3576 0.8056-0.8 0.8056h-8.8c-0.4424 0-0.8-0.36-0.8-0.8056z' />\r\n            </svg>\r\n          </SvgIcon>\r\n        </Link>\r\n      </EnhancedTooltip>\r\n\r\n      {/* CARD KINGDOM ICON */}\r\n\r\n      <EnhancedTooltip title='CardKingdom Buylist'>\r\n        <Link\r\n          to={{ pathname: formatCardKingdomBuylistLink(cardName) }}\r\n          target='_blank'\r\n        >\r\n          <SvgIcon\r\n            component='div'\r\n            className={`${classes.root} ${classes.cardKingdom}`}\r\n            data-test='cardkingdom-icon'\r\n          >\r\n            <svg height='25px' width='25px' viewBox='0 0 3.7041667 3.1750001'>\r\n              <g transform='translate(0 -293.82)'>\r\n                <path d='m0 293.82v1.1592h0.52042v2.0158h2.6633v-2.0158h0.52042v-1.1592h-0.57636v1.0908h-0.49196v-1.084h-0.54839v1.084h-0.47074v-1.084h-0.54839v1.084h-0.49196v-1.0908z' />\r\n              </g>\r\n            </svg>\r\n          </SvgIcon>\r\n        </Link>\r\n      </EnhancedTooltip>\r\n\r\n      {/* EDHREC ICON */}\r\n\r\n      <EnhancedTooltip title='EDHREC'>\r\n        <Link to={{ pathname: formatEdhrecLink(cardName) }} target='_blank'>\r\n          <SvgIcon\r\n            component='div'\r\n            className={`${classes.root} ${classes.edhRec}`}\r\n            data-test='edhrec-icon'\r\n          >\r\n            <svg height='29px' width='29px' viewBox='0 0 777.000000 582.000000'>\r\n              <g\r\n                transform='translate(0.000000,582.000000) scale(0.100000,-0.100000)'\r\n                stroke='none'\r\n              >\r\n                <path\r\n                  d='M0 2910 l0 -2910 3885 0 3885 0 0 2910 0 2910 -3885 0 -3885 0 0\r\n-2910z m3063 2516 c99 -44 167 -157 167 -276 0 -56 -21 -116 -60 -170 -11 -15\r\n-20 -35 -20 -43 0 -14 21 -69 65 -172 20 -46 43 -101 61 -142 9 -21 22 -51 30\r\n-66 8 -16 14 -33 14 -38 0 -4 11 -32 24 -61 14 -29 43 -98 66 -153 23 -55 46\r\n-104 51 -110 5 -5 9 -19 9 -31 0 -12 6 -27 14 -34 8 -6 16 -24 18 -38 4 -36\r\n32 -39 88 -8 25 14 99 52 166 86 l121 61 139 -72 c76 -39 144 -75 149 -79 6\r\n-4 25 -11 43 -15 30 -6 33 -5 38 24 4 17 13 36 20 42 8 6 14 17 14 24 0 11 36\r\n103 75 190 8 17 21 48 30 70 9 22 23 55 31 73 38 87 46 104 59 137 37 87 48\r\n112 61 138 8 16 14 33 14 38 0 5 11 32 25 61 31 64 31 74 2 118 -111 167 -49\r\n384 131 453 52 21 120 21 146 2 11 -8 26 -15 34 -15 25 0 92 -61 114 -104 70\r\n-138 50 -277 -56 -381 -39 -39 -78 -56 -138 -63 -60 -7 -62 -8 -85 -51 -13\r\n-24 -23 -51 -23 -59 0 -7 -6 -26 -14 -40 -20 -39 -76 -173 -76 -183 0 -5 -13\r\n-37 -29 -71 -15 -35 -43 -99 -61 -143 -31 -77 -43 -106 -74 -177 -61 -143 -69\r\n-168 -56 -183 7 -8 20 -15 29 -15 9 0 21 -4 27 -10 5 -5 63 -37 129 -71 66\r\n-33 128 -68 138 -77 16 -14 17 -79 17 -1084 0 -916 -2 -1068 -14 -1068 -12 0\r\n-60 23 -166 79 -8 4 -26 14 -40 21 -25 13 -161 84 -435 224 -82 43 -154 82\r\n-159 87 -13 12 -69 12 -82 -1 -5 -5 -66 -38 -134 -73 -69 -35 -188 -97 -265\r\n-137 -272 -143 -387 -200 -401 -200 -12 0 -14 161 -12 1077 l3 1077 165 83\r\nc90 46 168 87 174 93 8 8 -9 62 -56 170 -30 67 -44 100 -63 150 -18 47 -27 67\r\n-69 162 -15 31 -26 60 -26 63 0 10 -88 220 -116 278 -8 16 -14 35 -14 42 0 20\r\n-26 31 -89 39 -59 8 -90 24 -141 75 -47 48 -68 89 -79 163 -22 134 37 248 161\r\n310 67 34 119 35 191 4z m858 -68 c1 -7 0 -50 -1 -95 -1 -74 0 -82 19 -88 11\r\n-3 33 0 48 8 16 8 53 22 83 30 120 35 299 92 368 119 127 49 140 33 25 -30\r\n-43 -23 -105 -58 -138 -77 -33 -18 -80 -45 -105 -58 -25 -14 -61 -34 -80 -46\r\n-19 -11 -42 -24 -50 -28 -8 -3 -17 -10 -20 -14 -6 -8 -101 -62 -156 -87 -23\r\n-11 -45 -25 -48 -31 -4 -6 -14 -11 -22 -11 -12 0 -15 11 -12 53 1 28 1 73 0\r\n100 -2 56 -7 57 -107 21 -38 -14 -90 -29 -115 -33 -44 -9 -99 -26 -130 -41 -9\r\n-4 -30 -11 -49 -15 -18 -4 -44 -13 -59 -21 -15 -8 -36 -14 -47 -14 -11 -1 -31\r\n-7 -45 -15 -29 -16 -60 -19 -60 -6 0 11 12 18 135 80 44 22 89 46 100 53 73\r\n46 149 90 168 98 12 6 29 14 37 20 61 40 237 140 248 140 6 0 12 -6 13 -12z\r\nm-1221 -2545 c1 -969 -1 -1348 -8 -1355 -5 -5 -51 -30 -103 -57 -52 -27 -177\r\n-91 -279 -143 -209 -108 -455 -235 -576 -298 -49 -25 -89 -40 -98 -37 -15 6\r\n-16 69 -16 708 l1 701 24 22 c14 13 73 47 132 76 60 28 115 56 123 61 8 5 51\r\n27 95 49 372 190 655 336 661 343 4 4 16 7 26 7 16 0 18 -9 18 -77z m2496 15\r\nc197 -102 508 -262 702 -360 101 -51 195 -103 208 -115 l24 -22 0 -706 c-1\r\n-819 17 -735 -138 -653 -120 63 -325 169 -587 303 -110 56 -234 120 -275 142\r\nl-75 39 -5 640 c-6 722 -4 794 14 794 8 0 67 -28 132 -62z m-1276 -1162 c14\r\n-8 61 -33 105 -55 106 -56 288 -151 460 -241 77 -41 181 -95 230 -121 50 -26\r\n115 -60 145 -76 30 -16 143 -75 250 -130 107 -55 222 -115 255 -133 33 -18\r\n119 -63 190 -100 72 -37 155 -80 185 -97 30 -17 141 -74 245 -129 105 -54 231\r\n-119 280 -146 50 -26 100 -52 113 -58 13 -5 20 -14 17 -20 -9 -14 -5031 -14\r\n-5040 0 -3 6 4 15 17 20 13 6 77 39 143 74 66 34 178 93 248 130 70 36 167 87\r\n215 113 48 25 155 80 237 123 83 42 170 89 195 102 25 14 110 59 190 101 80\r\n41 183 95 230 119 47 25 131 70 188 99 57 30 156 82 220 115 64 34 167 87 227\r\n118 108 55 196 100 225 117 59 33 178 89 190 89 8 0 26 -7 40 -14z'\r\n                />\r\n              </g>\r\n            </svg>\r\n          </SvgIcon>\r\n        </Link>\r\n      </EnhancedTooltip>\r\n\r\n      {/* TCG STORE ICON */}\r\n\r\n      <EnhancedTooltip title='TCG Player Seller Portal'>\r\n        <Link to={{ pathname: tcgSellerDashboardUrl }} target='_blank'>\r\n          <SvgIcon\r\n            component='div'\r\n            className={`${classes.root} ${classes.tcgStore}`}\r\n            data-test='tcgstore-icon'\r\n          >\r\n            <svg width='59px' viewBox='0 0 300.000000 111.000000'>\r\n              <g\r\n                transform='translate(0.000000,111.000000) scale(0.050000,-0.050000)'\r\n                stroke='none'\r\n              >\r\n                <path d='M2168 2157 c-8 -13 -13 -65 -11 -117 l4 -94 -375 -98 c-458 -120 -462 -123 -420 -269 18 -59 30 -108 28 -109 -130 -61 -537 -310 -545 -334 -10 -30 16 -96 67 -172 40 -60 85 -5 54 68 -25 62 -25 68 6 70 21 1 24 5 9 11 -14 6 17 39 75 79 105 72 339 197 348 185 10 -14 52 -172 52 -195 0 -17 -11 -18 -39 -3 -21 12 -103 21 -182 21 l-143 0 14 -75 c24 -129 41 -145 151 -145 55 0 131 -13 170 -29 40 -17 69 -21 69 -9 0 11 9 15 20 8 46 -29 56 15 26 115 -112 369 -135 578 -67 614 31 17 354 108 469 132 20 4 72 26 115 48 103 54 100 68 93 -450 l-6 -437 485 5 485 4 0 -161 c0 -93 -8 -160 -20 -160 -11 0 -20 -49 -20 -110 l0 -110 95 0 95 0 79 215 c43 118 91 241 106 272 l28 57 189 -7 188 -7 0 447 c0 417 2 447 35 437 19 -5 169 -46 332 -90 164 -44 307 -90 318 -101 24 -24 -1 -167 -77 -443 -28 -104 -53 -203 -55 -219 -4 -37 65 -53 75 -17 4 14 32 118 63 231 l56 205 61 -46 c34 -26 135 -89 225 -141 173 -100 200 -132 166 -195 -21 -38 -11 -78 18 -78 33 0 100 150 82 183 -10 18 -136 99 -280 180 -243 137 -260 151 -250 197 40 174 38 192 -22 216 -50 20 -544 157 -691 192 -50 11 -54 21 -60 127 l-6 115 -834 5 c-617 4 -837 -1 -848 -18z m1521 -58 c-6 -11 -265 -60 -496 -95 -112 -16 -123 -41 -41 -84 32 -17 116 -60 186 -97 150 -78 162 -65 -183 -206 -295 -121 -287 -105 -145 -271 63 -75 104 -139 96 -153 -7 -13 2 -11 20 4 35 29 50 175 15 154 -10 -6 -25 -1 -33 12 -9 14 -6 18 9 9 13 -8 24 -3 25 12 1 20 3 20 11 1 6 -14 19 -20 29 -14 11 7 10 26 -2 48 -21 40 7 61 81 61 20 0 50 19 66 42 17 23 40 36 51 29 12 -7 22 -4 22 6 0 11 19 26 43 34 30 10 35 18 17 29 -18 11 -13 20 19 30 26 8 40 25 33 41 -6 15 9 42 33 58 36 26 38 31 9 31 -21 0 -34 15 -34 40 0 22 9 40 20 40 11 0 20 9 20 19 0 11 -14 15 -30 8 -24 -9 -27 -2 -13 35 9 25 29 49 45 53 22 6 22 3 -2 -15 -25 -20 -23 -22 10 -10 22 7 49 15 60 16 11 2 27 13 35 24 10 13 21 10 33 -7 23 -37 46 2 29 50 -11 31 -8 33 15 11 42 -39 54 -886 12 -920 -21 -18 -214 -23 -766 -19 l-738 5 -6 380 c-3 209 0 410 6 446 l12 66 71 -71 c62 -62 113 -83 173 -73 10 2 11 -6 4 -18 -7 -11 -23 -14 -36 -6 -14 8 -12 -1 3 -20 15 -18 34 -30 41 -25 8 5 27 0 43 -10 22 -14 18 -18 -19 -19 -46 0 -46 -2 -15 -37 39 -43 23 -111 -22 -94 -19 8 -26 2 -19 -16 6 -16 3 -36 -7 -46 -12 -12 5 -46 40 -88 33 -38 60 -78 60 -89 1 -12 35 -39 76 -60 41 -22 80 -47 86 -55 7 -9 31 -20 54 -24 23 -5 61 -18 84 -30 22 -12 41 -17 41 -11 0 7 11 5 25 -4 30 -19 115 -23 115 -6 0 13 -201 165 -365 277 -120 82 -123 75 65 193 87 55 159 105 159 110 0 6 -140 77 -310 159 -170 81 -309 153 -309 160 0 6 314 11 698 11 384 1 695 -4 691 -11z m-2343 -961 c58 -30 154 -120 154 -145 0 -11 -22 1 -49 26 -27 26 -84 68 -125 93 -77 47 -61 67 20 26z' />\r\n                <path d='M1995 1590 c12 -149 -17 -181 -115 -123 -82 48 -88 41 -39 -38 56 -91 40 -105 -121 -113 l-130 -6 106 -56 c132 -69 149 -106 75 -165 l-56 -44 68 -10 c37 -5 82 -15 100 -23 28 -13 30 -5 12 63 -32 119 -6 211 86 293 43 40 75 72 70 72 -6 0 -2 21 8 47 18 47 -32 233 -62 233 -7 0 -8 -58 -2 -130z' />\r\n                <path d='M4121 1634 c-14 -42 -59 -94 -125 -143 -58 -43 -94 -82 -80 -86 13 -5 19 -17 13 -26 -6 -10 -5 -75 3 -143 l14 -125 27 78 c50 144 127 196 128 86 0 -36 13 -87 29 -115 16 -27 29 -79 29 -115 1 -90 85 -94 130 -6 65 124 32 320 -39 241 -51 -57 -72 -30 -39 50 37 87 37 192 1 278 -40 95 -65 102 -91 26z' />\r\n                <path d='M1983 1314 c-45 -54 -60 -187 -28 -252 35 -72 76 -85 52 -17 -27 74 -16 212 20 270 20 33 -16 32 -44 -1z' />\r\n                <path d='M4653 1247 c-7 -8 -13 -32 -13 -55 -1 -35 -4 -37 -20 -12 -17 27 -20 27 -22 0 -5 -59 -9 -71 -34 -120 -23 -43 -19 -41 24 10 28 33 73 83 101 111 28 28 51 57 51 65 0 18 -69 18 -87 1z' />\r\n                <path d='M4755 1135 c-17 -25 -53 -70 -82 -100 l-51 -55 58 0 c41 0 66 14 82 45 12 25 46 70 74 100 l51 55 -51 0 c-31 0 -63 -18 -81 -45z' />\r\n                <path d='M4880 1040 c-41 -58 -41 -60 -4 -60 35 0 79 37 112 95 31 54 -67 23 -108 -35z' />\r\n                <path d='M59 930 c-1 -5 -2 -93 -3 -195 l-1 -185 112 -6 113 -6 0 -137 c0 -120 -5 -138 -40 -147 -34 -9 -40 -27 -40 -122 l0 -112 250 0 250 0 0 124 0 123 74 -86 c141 -165 585 -233 665 -102 8 12 43 5 92 -18 97 -48 -78 -45 2404 -43 l2025 2 0 120 c0 106 -5 120 -40 120 -67 0 -131 150 -91 211 121 185 -3 427 -233 455 -48 6 -539 4 -1093 -3 l-1006 -13 -91 -240 c-115 -303 -106 -293 -254 -286 l-122 6 -6 145 c-5 117 0 148 25 157 23 9 31 41 31 120 l0 108 -240 0 c-138 0 -240 -8 -240 -19 0 -12 -22 -12 -55 -2 -155 49 -897 42 -998 -10 -115 -58 -107 -56 -107 -20 0 80 -385 88 -510 11 l-70 -43 0 51 0 52 -400 0 c-220 0 -401 -4 -401 -10z m741 -190 l0 -120 -70 0 c-54 0 -70 8 -70 36 0 42 -37 84 -74 84 -50 0 -36 -534 14 -550 22 -7 40 -30 40 -51 0 -36 -15 -39 -180 -39 -191 0 -220 17 -140 85 57 49 52 555 -5 555 -24 0 -40 -20 -48 -60 -10 -52 -20 -60 -79 -60 l-68 0 0 120 0 120 340 0 340 0 0 -120z m535 107 c39 -10 45 -25 45 -109 l0 -98 -68 0 c-55 0 -70 9 -80 48 -22 90 -136 75 -174 -22 -92 -241 76 -630 172 -399 48 114 150 83 150 -47 0 -110 -7 -115 -180 -133 -272 -29 -431 155 -390 453 34 247 259 379 525 307z m603 1 c59 -12 62 -17 62 -110 l0 -98 -68 0 c-56 0 -70 9 -80 50 -18 72 -137 72 -184 0 -103 -158 -16 -568 100 -471 41 33 42 153 2 168 -103 40 -29 93 130 93 159 0 233 -53 130 -93 -23 -8 -30 -45 -30 -147 0 -139 -61 -207 -125 -143 -13 13 -38 13 -73 0 -216 -82 -421 131 -398 414 23 276 219 399 534 337z m631 -36 c204 -85 110 -389 -129 -422 l-100 -14 0 -86 c0 -58 10 -89 30 -97 17 -7 30 -30 30 -52 0 -38 -12 -41 -170 -41 -168 0 -244 47 -140 87 45 17 45 573 0 573 -28 0 -42 61 -19 84 21 22 433 -5 498 -32z m447 4 c4 -18 -12 -43 -35 -55 -38 -21 -41 -40 -41 -282 l0 -259 60 0 c45 0 67 13 84 50 63 138 166 34 123 -125 -18 -67 -527 -71 -527 -4 0 22 14 45 30 52 45 17 45 567 0 567 -27 0 -43 61 -21 83 29 28 321 4 327 -27z m810 -286 c54 -176 110 -327 126 -336 93 -52 30 -94 -142 -94 -175 0 -219 27 -141 88 65 50 15 132 -82 132 -99 0 -167 -86 -98 -125 88 -49 35 -95 -109 -95 -152 0 -182 29 -100 97 22 18 84 150 138 293 54 143 108 285 120 316 20 51 30 56 107 50 l84 -6 97 -320z m366 304 c8 -8 3 -36 -11 -62 -27 -50 28 -255 58 -218 42 50 88 194 66 201 -93 31 -21 99 105 99 129 1 196 -64 102 -100 -109 -42 -267 -528 -182 -561 17 -7 30 -30 30 -52 0 -38 -12 -41 -170 -41 -168 0 -244 47 -140 87 82 32 -79 573 -170 573 -11 0 -20 21 -20 47 0 47 289 71 332 27z m944 -92 c7 -121 -85 -157 -132 -52 -18 40 -38 50 -94 50 l-70 0 0 -100 c0 -107 62 -149 90 -60 33 103 130 36 130 -90 0 -126 -97 -193 -130 -90 -30 93 -90 46 -90 -70 l0 -110 72 0 c61 0 75 9 94 60 30 79 168 94 147 15 -7 -25 -13 -79 -13 -120 l0 -75 -280 0 c-299 0 -343 20 -250 113 23 23 30 84 30 279 0 203 -6 251 -30 261 -27 10 -42 69 -22 89 5 4 129 7 275 5 l267 -3 6 -102z m531 76 c138 -38 175 -246 59 -337 -47 -38 -49 -44 -21 -76 17 -19 49 -72 72 -118 23 -45 55 -87 72 -94 89 -34 32 -93 -88 -93 l-119 0 -76 144 c-93 176 -126 194 -126 68 0 -70 9 -98 40 -117 97 -60 50 -95 -130 -95 -168 0 -244 47 -140 87 25 10 30 61 30 292 0 236 -5 281 -30 281 -27 0 -43 60 -22 82 16 16 403 -3 479 -24z' />\r\n                <path d='M2339 735 c-31 -176 1 -258 82 -214 85 45 37 219 -60 219 -11 0 -21 -2 -22 -5z' />\r\n                <path d='M3562 534 c-34 -87 -28 -114 28 -114 56 0 60 23 22 110 l-27 60 -23 -56z' />\r\n                <path d='M5440 631 c0 -122 14 -140 88 -112 68 26 77 166 13 200 -82 44 -101 28 -101 -88z' />\r\n              </g>\r\n            </svg>\r\n          </SvgIcon>\r\n        </Link>\r\n      </EnhancedTooltip>\r\n\r\n      {/* CALC ICON */}\r\n\r\n      <EnhancedTooltip title={'Price Calc'}>\r\n        <SvgIcon\r\n          component='div'\r\n          className={`${classes.root} ${classes.flag}`}\r\n          data-test='calc-icon'\r\n        >\r\n          <ExposureSharpIcon\r\n            onClick={handlePriceCalc}\r\n            className={`${classes.root} ${classes.calc}`}\r\n          />\r\n        </SvgIcon>\r\n      </EnhancedTooltip>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default IconHolder;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport EnhancedTableContainer from '../component-library/mui/components/Table/EnhancedTableContainer';\r\nimport EnhancedTable from '../component-library/mui/components/Table/EnhancedTable';\r\nimport EnhancedTableHead from '../component-library/mui/components/Table/EnhancedTableHead';\r\nimport EnhancedTableBody from '../component-library/mui/components/Table/EnhancedTableBody';\r\nimport EnhancedTableRow from '../component-library/mui/components/Table/EnhancedTableRow';\r\nimport EnhancedTableCell from '../component-library/mui/components/Table/EnhancedTableCell';\r\nimport EnhancedTablePagination from '../component-library/mui/components/Table/EnhancedTablePagination';\r\nimport EnhancedSpinner from '../component-library/mui/components/Spinner';\r\nimport EnhancedTableSortLabel from '../component-library/mui/components/Table/EnhancedTableSortLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { getPriceCategory, isPositive, addZeroes } from '../../utils';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardDetails from './CardDetails';\r\nimport CardImage from './CardImage';\r\nimport EnhancedTypography from '../component-library/mui/components/Typography';\r\nimport IconHolder from './IconHolder';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] <= a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] >= a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  // Below is HeightOfToolbar * 2 (two toolbars, the header and the table toolbar) + theme.spacing (Associated margins + Pagination) - 3px (Other)\r\n  const scrollSpace =\r\n    theme.mixins.toolbar['@media (min-width:600px)'].minHeight * 2 +\r\n    theme.spacing(7) -\r\n    3;\r\n\r\n  return {\r\n    root: {\r\n      '& .MuiGrid-item': {\r\n        display: 'flex',\r\n      },\r\n      '& .MuiTableRow-root:last-child': {\r\n        borderBottom: 0,\r\n      },\r\n    },\r\n    centerGridItem: {\r\n      justifyContent: 'center',\r\n    },\r\n    gridContainer: {\r\n      padding: `${theme.spacing(1)}px 0px`,\r\n    },\r\n    stickyContainer: {\r\n      position: 'sticky',\r\n      top: 0,\r\n      zIndex: 1,\r\n      backgroundColor: theme.palette.primary.contrastText,\r\n      borderBottom: `1px solid ${theme.palette.custom.lightGray}`,\r\n    },\r\n    tableContainer: {\r\n      // Positioning to fix table headers and side nav (nav has border of 1px)\r\n      position: 'relative',\r\n      bottom: '1px',\r\n      maxHeight: `calc(100vh - ${scrollSpace}px)`,\r\n      overflow: 'scroll',\r\n      '&::-webkit-scrollbar': {\r\n        display: 'none',\r\n      },\r\n    },\r\n    noBorder: {\r\n      border: 0,\r\n    },\r\n    spinner: {\r\n      marginTop: theme.spacing(12),\r\n    },\r\n    pagination: {\r\n      borderTop: `1px solid ${theme.palette.custom.lightGray}`,\r\n    },\r\n    tableHeader: {\r\n      paddingTop: '16px', // Table Row has 8px padding, adding another 8px to make even with side bar header\r\n    },\r\n    cardDetails: {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nconst MuiTableHeaders = (props) => {\r\n  const { order, orderBy, onRequestSort, priceCategory } = { ...props };\r\n\r\n  const classes = useStyles();\r\n\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  const tableHeaders = [\r\n    { id: 'cardName', label: 'Card', colSpan: 1 },\r\n    { id: 'dateTo', label: 'Date', colSpan: 3 },\r\n    { id: 'spread', label: 'Spread', colSpan: 1 },\r\n    { id: 'gainLoss', label: 'Gain / Loss', colSpan: 2 },\r\n    { id: 'quantity', label: 'Quantity', colSpan: 1 },\r\n    {\r\n      id: 'avgPurchasePrice',\r\n      label: 'Avg Purchase Price',\r\n      colSpan: 2,\r\n    },\r\n    {\r\n      id: 'tcgPrice',\r\n      label: getPriceCategory(priceCategory),\r\n      colSpan: 2,\r\n    },\r\n  ];\r\n\r\n  const isCardName = (header) => {\r\n    if (header.id === 'cardName') {\r\n      return 'asc';\r\n    }\r\n    return 'desc';\r\n  };\r\n\r\n  return (\r\n    <EnhancedTableHead>\r\n      <EnhancedTableRow className={classes.noBorder}>\r\n        <Grid\r\n          container\r\n          className={`${classes.gridContainer} ${classes.stickyContainer} ${classes.tableHeader}`}\r\n        >\r\n          {tableHeaders.map((header, index) => {\r\n            return (\r\n              <Grid\r\n                item\r\n                className={classes.centerGridItem}\r\n                xs={header.colSpan}\r\n                key={index}\r\n              >\r\n                <EnhancedTableCell\r\n                  sortDirection={orderBy === header.id ? order : false}\r\n                >\r\n                  <EnhancedTableSortLabel\r\n                    active={orderBy === header.id}\r\n                    direction={\r\n                      orderBy === header.id ? order : isCardName(header)\r\n                    }\r\n                    onClick={createSortHandler(header.id)}\r\n                  >\r\n                    <EnhancedTypography bold>{header.label}</EnhancedTypography>\r\n                  </EnhancedTableSortLabel>\r\n                </EnhancedTableCell>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </EnhancedTableRow>\r\n    </EnhancedTableHead>\r\n  );\r\n};\r\n\r\nconst MuiTableBody = React.forwardRef((props, ref) => {\r\n  const { data, setPriceCalc } = { ...props };\r\n\r\n  const classes = useStyles();\r\n\r\n  const handlePriceCalc = (tcgPrice, purchasePrice, gain, spread, cardName) => {\r\n    setPriceCalc({\r\n      tcgPrice,\r\n      purchasePrice,\r\n      gain,\r\n      spread,\r\n      cardName,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <EnhancedTableBody>\r\n      {data.map((card, index) => {\r\n        return (\r\n          <EnhancedTableRow\r\n            id={`table-row-${index}`}\r\n            key={index}\r\n            ref={index === 0 ? ref : null}\r\n          >\r\n            <Grid container className={classes.gridContainer}>\r\n              <Grid item xs={1}>\r\n                <EnhancedTableCell dataTest='card-name'>\r\n                  <CardImage tcgImageUrl={card.tcgImageUrl} foil={card.foil} />\r\n                </EnhancedTableCell>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <EnhancedTableCell alignTop dataTest='card-date'>\r\n                  <CardDetails\r\n                    className={classes.cardDetails}\r\n                    cardName={card.cardName}\r\n                    setName={card.setName}\r\n                    dateFrom={card.dateFrom}\r\n                    dateTo={card.dateTo}\r\n                  >\r\n                    <IconHolder\r\n                      scaleSize={1}\r\n                      foil={card.foil}\r\n                      setName={card.setName}\r\n                      tcgUrl={card.tcgUrl}\r\n                      tcgSellerDashboardUrl={card.tcgSellerDashboardUrl}\r\n                      cardName={card.cardName}\r\n                      language={card.language}\r\n                      handlePriceCalc={() =>\r\n                        handlePriceCalc(\r\n                          card.tcgPrice,\r\n                          card.avgPurchasePrice,\r\n                          card.gainLoss,\r\n                          card.spread,\r\n                          card.cardName\r\n                        )\r\n                      }\r\n                    />\r\n                  </CardDetails>\r\n                </EnhancedTableCell>\r\n              </Grid>\r\n              <Grid item className={classes.centerGridItem} xs={1}>\r\n                <EnhancedTableCell\r\n                  useColor\r\n                  bold\r\n                  isPositive={isPositive(card.spread)}\r\n                  centerText\r\n                  dataTest='card-spread'\r\n                >\r\n                  {addZeroes(card.spread)}\r\n                  {'%'}\r\n                </EnhancedTableCell>\r\n              </Grid>\r\n              <Grid item className={classes.centerGridItem} xs={2}>\r\n                <EnhancedTableCell\r\n                  useColor\r\n                  bold\r\n                  isPositive={isPositive(card.gainLoss)}\r\n                  centerText\r\n                  dataTest='card-gain-loss'\r\n                >\r\n                  {addZeroes(card.gainLoss)}\r\n                </EnhancedTableCell>\r\n              </Grid>\r\n              <Grid item className={classes.centerGridItem} xs={1}>\r\n                <EnhancedTableCell centerText dataTest='card-quantity'>\r\n                  {card.quantity}\r\n                </EnhancedTableCell>\r\n              </Grid>\r\n              <Grid item className={classes.centerGridItem} xs={2}>\r\n                <EnhancedTableCell\r\n                  centerText\r\n                  dataTest='card-avg-purchase-price'\r\n                >\r\n                  {'$'}\r\n                  {addZeroes(card.avgPurchasePrice)}\r\n                </EnhancedTableCell>\r\n              </Grid>\r\n              <Grid item className={classes.centerGridItem} xs={2}>\r\n                <EnhancedTableCell centerText dataTest='card-tcg-price'>\r\n                  {'$'}\r\n                  {addZeroes(card.tcgPrice)}\r\n                </EnhancedTableCell>\r\n              </Grid>\r\n            </Grid>\r\n          </EnhancedTableRow>\r\n        );\r\n      })}\r\n    </EnhancedTableBody>\r\n  );\r\n});\r\n\r\nconst MuiTable = (props) => {\r\n  const { cards, isLoadingCards, priceCategory, setPriceCalc } = { ...props };\r\n\r\n  const [order, setOrder] = useState('desc');\r\n  const [orderBy, setOrderBy] = useState('spread');\r\n  const [rowPerPage, setRowPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [data, setData] = useState([]);\r\n\r\n  // Use for scroll into view\r\n  const firstRowRef = useRef();\r\n\r\n  const classes = useStyles();\r\n\r\n  // LIFECYCLE METHODS //\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(0);\r\n  }, [isLoadingCards]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    if (property === 'cardName') {\r\n      // Reverse logic for cardName column sorting\r\n      const isAsc = orderBy === property && order === 'asc';\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      return setOrderBy(property);\r\n    }\r\n\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startingIndex = rowPerPage * (currentPage + 1) - rowPerPage;\r\n    const endingIndex = rowPerPage * (currentPage + 1);\r\n\r\n    const data = stableSort(cards, getComparator(order, orderBy)).slice(\r\n      startingIndex,\r\n      endingIndex\r\n    );\r\n    setData(data);\r\n  }, [cards, rowPerPage, currentPage, order, orderBy]);\r\n\r\n  // HELPER METHODS //\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setCurrentPage(page);\r\n    firstRowRef.current.scrollIntoView(false);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowPerPage(event.target.value);\r\n    setCurrentPage(0);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <EnhancedTableContainer\r\n        className={classes.tableContainer}\r\n        dataTest='CardsTable'\r\n      >\r\n        <EnhancedTable className={classes.root}>\r\n          <MuiTableHeaders\r\n            order={order}\r\n            orderBy={orderBy}\r\n            priceCategory={priceCategory}\r\n            onRequestSort={handleRequestSort}\r\n          />\r\n          {!isLoadingCards && (\r\n            <MuiTableBody\r\n              data={data}\r\n              setPriceCalc={setPriceCalc}\r\n              ref={firstRowRef}\r\n            />\r\n          )}\r\n        </EnhancedTable>\r\n      </EnhancedTableContainer>\r\n      {isLoadingCards ? (\r\n        <EnhancedSpinner className={classes.spinner} />\r\n      ) : (\r\n        <EnhancedTablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          count={cards.length}\r\n          rowsPerPage={rowPerPage}\r\n          noBorder\r\n          className={classes.pagination}\r\n          page={currentPage}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MuiTable;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport EnhancedTableContainer from '../component-library/mui/components/Table/EnhancedTableContainer';\r\nimport EnhancedTable from '../component-library/mui/components/Table/EnhancedTable';\r\nimport EnhancedTableBody from '../component-library/mui/components/Table/EnhancedTableBody';\r\nimport EnhancedTableRow from '../component-library/mui/components/Table/EnhancedTableRow';\r\nimport EnhancedTableCell from '../component-library/mui/components/Table/EnhancedTableCell';\r\nimport EnhancedTablePagination from '../component-library/mui/components/Table/EnhancedTablePagination';\r\nimport EnhancedSpinner from '../component-library/mui/components/Spinner';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { getPriceCategory, isPositive, addZeroes } from '../../utils';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardDetails from './CardDetails';\r\nimport CardImage from './CardImage';\r\nimport EnhancedTypography from '../component-library/mui/components/Typography';\r\nimport IconHolder from './IconHolder';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] <= a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] >= a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      '& .MuiGrid-item': {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n      },\r\n      '& .MuiTableRow-root:last-child': {\r\n        borderBottom: 0,\r\n      },\r\n    },\r\n    pagination: {\r\n      borderTop: `1px solid ${theme.palette.custom.lightGray}`,\r\n      justifyContent: 'center',\r\n      '& .MuiToolbar-root': {\r\n        padding: `0 0 ${theme.spacing(2)}px`,\r\n      },\r\n    },\r\n    spinner: {\r\n      marginTop: theme.spacing(12),\r\n    },\r\n    typography: {\r\n      display: 'inline',\r\n    },\r\n    mobileDetailsCell: {\r\n      width: '100%',\r\n      justifyContent: 'space-between',\r\n    },\r\n    mobileImageGridItem: {\r\n      justifyContent: 'left',\r\n    },\r\n    mobileMaxWidth: {\r\n      maxWidth: '400px',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n    cardDetails: {\r\n      '& p': {\r\n        textAlign: 'center',\r\n        display: 'block',\r\n      },\r\n    },\r\n    iconHolder: {\r\n      width: 'auto',\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    tableBody: {\r\n      '& .MuiTableCell-root': {\r\n        paddingBottom: theme.spacing(1),\r\n      },\r\n      '& .MuiTableRow-root': {\r\n        display: 'block',\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n    },\r\n    dataSection: {\r\n      padding: `${theme.spacing(2)}px ${theme.spacing(1)}px`,\r\n    },\r\n  };\r\n});\r\n\r\nconst MuiTableBody = React.forwardRef((props, ref) => {\r\n  const { data, setPriceCalc, priceCategory } = { ...props };\r\n\r\n  const classes = useStyles();\r\n\r\n  const handlePriceCalc = (tcgPrice, purchasePrice, gain, spread, cardName) => {\r\n    setPriceCalc({\r\n      tcgPrice,\r\n      purchasePrice,\r\n      gain,\r\n      spread,\r\n      cardName,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <EnhancedTableBody className={classes.tableBody}>\r\n      {data.map((card, index) => {\r\n        return (\r\n          <EnhancedTableRow\r\n            id={`table-row-${index}`}\r\n            key={index}\r\n            ref={index === 0 ? ref : null}\r\n          >\r\n            <EnhancedTableCell\r\n              className={classes.mobileMaxWidth}\r\n              alignTop\r\n              dataTest='mobile-card-details'\r\n            >\r\n              <CardDetails\r\n                className={classes.cardDetails}\r\n                cardName={card.cardName}\r\n                setName={card.setName}\r\n                dateFrom={card.dateFrom}\r\n                dateTo={card.dateTo}\r\n              />\r\n            </EnhancedTableCell>\r\n\r\n            <Grid\r\n              container\r\n              className={`${classes.mobileMaxWidth} ${classes.dataSection}`}\r\n            >\r\n              <Grid className={classes.mobileImageGridItem} item xs={6}>\r\n                <EnhancedTableCell dataTest='card-name'>\r\n                  <CardImage tcgImageUrl={card.tcgImageUrl} foil={card.foil} />\r\n                </EnhancedTableCell>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <EnhancedTableCell\r\n                  useColor\r\n                  bold\r\n                  isPositive={isPositive(card.spread)}\r\n                  centerText\r\n                  dataTest='card-spread'\r\n                  className={classes.mobileDetailsCell}\r\n                >\r\n                  <EnhancedTypography className={classes.typography}>\r\n                    {'Spread:'}\r\n                  </EnhancedTypography>\r\n                  {addZeroes(card.spread)}\r\n                  {'%'}\r\n                </EnhancedTableCell>\r\n\r\n                <EnhancedTableCell\r\n                  className={classes.mobileDetailsCell}\r\n                  useColor\r\n                  bold\r\n                  isPositive={isPositive(card.gainLoss)}\r\n                  centerText\r\n                  dataTest='card-gain-loss'\r\n                >\r\n                  <EnhancedTypography className={classes.typography}>\r\n                    {'Gain / Loss: '}\r\n                  </EnhancedTypography>\r\n                  {addZeroes(card.gainLoss)}\r\n                </EnhancedTableCell>\r\n\r\n                <EnhancedTableCell\r\n                  className={classes.mobileDetailsCell}\r\n                  centerText\r\n                  dataTest='card-quantity'\r\n                >\r\n                  <EnhancedTypography className={classes.typography}>\r\n                    {'Quantity: '}\r\n                  </EnhancedTypography>\r\n                  {card.quantity}\r\n                </EnhancedTableCell>\r\n\r\n                <EnhancedTableCell\r\n                  className={classes.mobileDetailsCell}\r\n                  centerText\r\n                  dataTest='card-avg-purchase-price'\r\n                >\r\n                  <EnhancedTypography className={classes.typography}>\r\n                    {'Avg Purchase Price: '}\r\n                  </EnhancedTypography>\r\n                  {'$'}\r\n                  {addZeroes(card.avgPurchasePrice)}\r\n                </EnhancedTableCell>\r\n\r\n                <EnhancedTableCell\r\n                  className={classes.mobileDetailsCell}\r\n                  centerText\r\n                  dataTest='card-tcg-price'\r\n                >\r\n                  <EnhancedTypography className={classes.typography}>\r\n                    {getPriceCategory(priceCategory)}\r\n                  </EnhancedTypography>\r\n                  {'$'}\r\n                  {addZeroes(card.tcgPrice)}\r\n                </EnhancedTableCell>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <EnhancedTableCell\r\n              className={classes.mobileMaxWidth}\r\n              alignTop\r\n              dataTest='mobile-icon-holder'\r\n            >\r\n              <IconHolder\r\n                className={classes.iconHolder}\r\n                scaleSize={1}\r\n                foil={card.foil}\r\n                setName={card.setName}\r\n                tcgUrl={card.tcgUrl}\r\n                tcgSellerDashboardUrl={card.tcgSellerDashboardUrl}\r\n                cardName={card.cardName}\r\n                language={card.language}\r\n                handlePriceCalc={() =>\r\n                  handlePriceCalc(\r\n                    card.tcgPrice,\r\n                    card.avgPurchasePrice,\r\n                    card.gainLoss,\r\n                    card.spread,\r\n                    card.cardName\r\n                  )\r\n                }\r\n              />\r\n            </EnhancedTableCell>\r\n          </EnhancedTableRow>\r\n        );\r\n      })}\r\n    </EnhancedTableBody>\r\n  );\r\n});\r\n\r\nconst MuiTable = (props) => {\r\n  const {\r\n    cards,\r\n    isLoadingCards,\r\n    priceCategory,\r\n    setPriceCalc,\r\n    mobileSortValues,\r\n  } = {\r\n    ...props,\r\n  };\r\n\r\n  const [order, setOrder] = useState(mobileSortValues.direction);\r\n  const [orderBy, setOrderBy] = useState(mobileSortValues.id);\r\n  const [rowPerPage, setRowPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [data, setData] = useState([]);\r\n\r\n  // Use for scroll into view\r\n  const firstRowRef = useRef();\r\n\r\n  const classes = useStyles();\r\n\r\n  // LIFECYCLE METHODS //\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(0);\r\n  }, [isLoadingCards]);\r\n\r\n  useEffect(() => {\r\n    setOrder(mobileSortValues.direction);\r\n    setOrderBy(mobileSortValues.id);\r\n  }, [mobileSortValues]);\r\n\r\n  useEffect(() => {\r\n    const startingIndex = rowPerPage * (currentPage + 1) - rowPerPage;\r\n    const endingIndex = rowPerPage * (currentPage + 1);\r\n\r\n    const data = stableSort(cards, getComparator(order, orderBy)).slice(\r\n      startingIndex,\r\n      endingIndex\r\n    );\r\n    setData(data);\r\n  }, [cards, rowPerPage, currentPage, order, orderBy]);\r\n\r\n  // HELPER METHODS //\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setCurrentPage(page);\r\n    firstRowRef.current.scrollIntoView(false);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowPerPage(event.target.value);\r\n    setCurrentPage(0);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <EnhancedTableContainer\r\n        className={classes.tableContainer}\r\n        dataTest='CardsTable'\r\n      >\r\n        <EnhancedTable className={classes.root}>\r\n          {!isLoadingCards && (\r\n            <MuiTableBody\r\n              data={data}\r\n              setPriceCalc={setPriceCalc}\r\n              ref={firstRowRef}\r\n              priceCategory={priceCategory}\r\n            />\r\n          )}\r\n        </EnhancedTable>\r\n      </EnhancedTableContainer>\r\n      {isLoadingCards ? (\r\n        <EnhancedSpinner className={classes.spinner} />\r\n      ) : (\r\n        <EnhancedTablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          count={cards.length}\r\n          labelRowsPerPage=''\r\n          rowsPerPage={rowPerPage}\r\n          noBorder\r\n          className={classes.pagination}\r\n          page={currentPage}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MuiTable;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      color: (props) => (props.tertiary ? theme.palette.primary.main : ''),\r\n      backgroundColor: (props) =>\r\n        props.tertiary ? theme.palette.common.white : '',\r\n      border: (props) =>\r\n        props.tertiary ? `1px solid ${theme.palette.primary.main}` : '',\r\n      '&:hover': {\r\n        backgroundColor: (props) =>\r\n          props.tertiary ? 'rgba(224, 224, 224, .7)' : '',\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst EnhancedButton = (props) => {\r\n  const classes = useStyles(props);\r\n\r\n  const {\r\n    buttonText,\r\n    color = 'primary',\r\n    variant = 'contained',\r\n    className,\r\n    onClick,\r\n  } = { ...props };\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      color={color}\r\n      classes={classes}\r\n      className={className}\r\n      onClick={onClick}\r\n    >\r\n      {buttonText}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default EnhancedButton;\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      color: theme.palette.custom.darkGray,\r\n    },\r\n  };\r\n});\r\n\r\nconst EnhancedCheckbox = (props) => {\r\n  const useClasses = useStyles();\r\n  const { checked, onChange, className, classes } = { ...props };\r\n\r\n  return (\r\n    <Checkbox\r\n      className={className}\r\n      classes={{ root: useClasses.root, ...classes }}\r\n      checked={checked}\r\n      onChange={onChange}\r\n      name='checkbox'\r\n      color='primary'\r\n    />\r\n  );\r\n};\r\n\r\nexport default EnhancedCheckbox;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // Targets the form label and border color before focus\r\n    '& .MuiInputLabel-root': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    // Targets the form label and border color after focus\r\n    '& .Mui-focused': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '& .MuiFormHelperText-root': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '& .MuiInput-input': {\r\n      fontSize: theme.typography.fontSize,\r\n    },\r\n    margin: `${theme.spacing(1)}px 0`,\r\n  },\r\n}));\r\n\r\nconst EnhancedTextField = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    required,\r\n    label,\r\n    fullWidth = false,\r\n    id,\r\n    InputLabelProps,\r\n    select,\r\n    helperText,\r\n    className,\r\n    dataTest,\r\n    onChange,\r\n    value,\r\n    params,\r\n    type,\r\n    InputProps,\r\n  } = {\r\n    ...props,\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      select={select}\r\n      {...params}\r\n      className={`${classes.root} ${className}`}\r\n      required={required}\r\n      fullWidth={fullWidth}\r\n      id={id}\r\n      InputLabelProps={InputLabelProps}\r\n      label={label}\r\n      helperText={helperText}\r\n      data-test={dataTest}\r\n      value={value}\r\n      onChange={onChange}\r\n      type={type}\r\n      InputProps={InputProps}\r\n    >\r\n      {props.children}\r\n    </TextField>\r\n  );\r\n};\r\n\r\nexport default EnhancedTextField;\r\n","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // Targets the form label and border color before focus\r\n    '& .MuiInputLabel-root': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    // Targets the form label and border color after focus\r\n    '& .Mui-focused': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '& .MuiFormHelperText-root': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '& .MuiInput-input': {\r\n      fontSize: theme.typography.fontSize,\r\n    },\r\n    margin: `${theme.spacing(1)}px 0`,\r\n  },\r\n  popper: {\r\n    '& .MuiAutocomplete-listbox': {\r\n      // Sets fixed height for autocomplete selector\r\n      maxHeight: '200px',\r\n    },\r\n    '& .MuiAutocomplete-option': {\r\n      fontSize: theme.typography.fontSize,\r\n    },\r\n  },\r\n}));\r\n\r\nconst EnhancedAutocomplete = (props) => {\r\n  const classes = useStyles();\r\n  const { id, value, options, onChange, dataTest, label } = { ...props };\r\n  return (\r\n    <Autocomplete\r\n      data-test={dataTest}\r\n      classes={{ root: classes.root, popper: classes.popper }}\r\n      id={id}\r\n      options={options}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={label}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      )}\r\n      onChange={onChange}\r\n      value={value}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EnhancedAutocomplete;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    '& .MuiFormLabel-root': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '& .MuiInput-input': {\r\n      fontSize: theme.typography.fontSize,\r\n    },\r\n  },\r\n}));\r\n\r\nconst EnhancedDatePicker = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { label, value, onChange, fullWidth } = { ...props };\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth={fullWidth}\r\n      label={label}\r\n      type='date'\r\n      value={value}\r\n      onChange={onChange}\r\n      className={classes.textField}\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EnhancedDatePicker;\r\n","import React from 'react';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      '& .MuiTypography-root': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst EnhancedInputAdornment = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { className, start, dataTest } = { ...props };\r\n\r\n  return (\r\n    <InputAdornment\r\n      className={className}\r\n      classes={{ root: classes.root }}\r\n      start={start}\r\n      data-test={dataTest}\r\n    >\r\n      {props.children}\r\n    </InputAdornment>\r\n  );\r\n};\r\n\r\nexport default EnhancedInputAdornment;\r\n","export default [\r\n  { value: '>=', label: '>=' },\r\n  { value: '=', label: '=' },\r\n  { value: '<=', label: '<=' },\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport EnhancedButton from '../component-library/mui/components/Form/Button';\r\nimport EnhancedCheckbox from '../component-library/mui/components/Form/Checkbox';\r\nimport EnhancedTextField from '../component-library/mui/components/Form/TextField';\r\nimport EnhancedContainer from '../component-library/mui/components/Container';\r\nimport EnhancedAutocomplete from '../component-library/mui/components/Form/Autocomplete';\r\nimport EnhancedDatepicker from '../component-library/mui/components/Form/DatePicker';\r\nimport EnhancedInputAdornment from '../component-library/mui/components/Form/InputAdornment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Operands from '../constants/operands';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { uniq } from 'lodash';\r\nimport { getPriceCategory } from '../../utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    '& .MuiAutocomplete-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputLabel-root': {\r\n      // Applies to rows with two elements, needed to span one label for both inputs.\r\n      minWidth: '200px',\r\n    },\r\n  },\r\n  container: {\r\n    padding: 0,\r\n  },\r\n  operandValue: {\r\n    display: 'flex',\r\n  },\r\n  formControlLabel: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginLeft: 0,\r\n    '& .MuiFormControlLabel-label': {\r\n      fontSize: theme.typography.fontSize,\r\n    },\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n    fontSize: theme.typography.fontSize,\r\n    width: '100%',\r\n  },\r\n  selectOperand: {\r\n    width: theme.spacing(10),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  menuItem: {\r\n    fontSize: theme.typography.fontSize,\r\n  },\r\n  spreadInput: {\r\n    marginTop: 'auto',\r\n  },\r\n}));\r\n\r\nconst SideBarFilterForm = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    // STORE\r\n    priceCategory,\r\n    cardNamesAndSets,\r\n    filterValues,\r\n\r\n    // ACTIONS\r\n    setFilterOptions,\r\n    clearFilterOptions,\r\n  } = { ...props };\r\n\r\n  const [isFoil, setIsFoil] = useState(filterValues.isFoil);\r\n  const [setName, setSetName] = useState(filterValues.setName);\r\n  const [cardName, setCardName] = useState(filterValues.cardName);\r\n  const [spreadOperator, setSpreadOperator] = useState(\r\n    filterValues.spreadOperator\r\n  );\r\n  const [spreadValue, setSpreadValue] = useState(filterValues.spreadValue);\r\n  const [gainOperator, setGainOperator] = useState(filterValues.gainOperator);\r\n  const [gainValue, setGainValue] = useState(filterValues.gainValue);\r\n  const [tcgPriceOperator, setTcgPriceOperator] = useState(\r\n    filterValues.tcgPriceOperator\r\n  );\r\n  const [tcgPriceValue, setTcgPriceValue] = useState(\r\n    filterValues.tcgPriceValue\r\n  );\r\n  const [dateFrom, setDateFrom] = useState(filterValues.dateFrom);\r\n  const [dateTo, setDateTo] = useState(filterValues.dateTo);\r\n\r\n  // Not sent to filter reducer, just for filtering select options\r\n  const [cardNameOptions, setCardNameOptions] = useState([]);\r\n  const [setNameOptions, setSetNameOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Setting an initial state, as well as updating component state when redux store is cleared\r\n\r\n    setIsFoil(filterValues.isFoil);\r\n    setSetName(filterValues.setName);\r\n    setCardName(filterValues.cardName);\r\n    setSpreadOperator(filterValues.spreadOperator);\r\n    setSpreadValue(filterValues.spreadValue);\r\n    setGainOperator(filterValues.gainOperator);\r\n    setGainValue(filterValues.gainValue);\r\n    setTcgPriceOperator(filterValues.tcgPriceOperator);\r\n    setTcgPriceValue(filterValues.tcgPriceValue);\r\n    setDateFrom(filterValues.dateFrom);\r\n    setDateTo(filterValues.dateTo);\r\n  }, [filterValues]);\r\n\r\n  useEffect(() => {\r\n    // Sets and filters set and card drop down options\r\n    let namesAndSets = [...cardNamesAndSets];\r\n    let outNames = [];\r\n    let outSets = [];\r\n\r\n    if (setName) {\r\n      for (let entry of namesAndSets) {\r\n        if (entry.set === setName) {\r\n          outNames.push(entry.name);\r\n        }\r\n\r\n        // Handles keeping all set names if card name is blank\r\n        if (!cardName) {\r\n          outSets.push(entry.set);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (cardName) {\r\n      for (let entry of namesAndSets) {\r\n        if (entry.name === cardName) {\r\n          outSets.push(entry.set);\r\n        }\r\n\r\n        // Handles keeping all card names if set name is blank\r\n        if (!setName) {\r\n          outNames.push(entry.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!setName && !cardName) {\r\n      for (let entry of namesAndSets) {\r\n        outNames.push(entry.name);\r\n        outSets.push(entry.set);\r\n      }\r\n    }\r\n\r\n    setCardNameOptions(uniq(outNames.sort()));\r\n    setSetNameOptions(uniq(outSets.sort()));\r\n  }, [\r\n    cardNamesAndSets,\r\n    setName,\r\n    cardName,\r\n    setCardNameOptions,\r\n    setSetNameOptions,\r\n  ]);\r\n\r\n  const handleSubmit = () => {\r\n    const state = {\r\n      isFoil,\r\n      setName,\r\n      cardName,\r\n      spreadOperator,\r\n      spreadValue,\r\n      gainOperator,\r\n      gainValue,\r\n      tcgPriceOperator,\r\n      tcgPriceValue,\r\n      dateFrom,\r\n      dateTo,\r\n    };\r\n\r\n    setFilterOptions(state);\r\n  };\r\n\r\n  const handleClearAll = () => {\r\n    clearFilterOptions();\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} data-test='side-bar-filter-form'>\r\n      {/* CHECKBOX FOIL */}\r\n\r\n      <EnhancedContainer\r\n        classes={{ root: classes.container }}\r\n        dataTest='checkbox-foil'\r\n      >\r\n        <FormControlLabel\r\n          classes={{ root: classes.formControlLabel }}\r\n          control={\r\n            <EnhancedCheckbox\r\n              checked={isFoil}\r\n              onChange={() => setIsFoil(!isFoil)}\r\n            />\r\n          }\r\n          labelPlacement='start'\r\n          label='Is Foil?'\r\n        />\r\n      </EnhancedContainer>\r\n\r\n      {/* SET NAME */}\r\n\r\n      <EnhancedAutocomplete\r\n        dataTest='autocomplete-set-name'\r\n        onChange={(e) => setSetName(e.target.textContent)}\r\n        value={setName}\r\n        label='Set Name'\r\n        options={setNameOptions}\r\n      />\r\n\r\n      {/* CARD NAME */}\r\n\r\n      <EnhancedAutocomplete\r\n        dataTest='autocomplete-card-name'\r\n        onChange={(e) => setCardName(e.target.textContent)}\r\n        value={cardName}\r\n        label='Card Name'\r\n        options={cardNameOptions}\r\n      />\r\n\r\n      {/* TCG PRICE */}\r\n\r\n      <EnhancedContainer\r\n        className={`${classes.container} ${classes.operandValue}`}\r\n      >\r\n        <EnhancedTextField\r\n          dataTest='tcg-price-operand-select'\r\n          select\r\n          label={getPriceCategory(priceCategory)}\r\n          value={tcgPriceOperator}\r\n          onChange={(event) => setTcgPriceOperator(event.target.value)}\r\n          className={classes.selectOperand}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        >\r\n          {Operands.map((option) => {\r\n            return (\r\n              <MenuItem\r\n                className={classes.menuItem}\r\n                key={option.value}\r\n                value={option.value}\r\n              >\r\n                {option.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </EnhancedTextField>\r\n        <EnhancedTextField\r\n          dataTest='tcg-price-gain-loss'\r\n          className={classes.spreadInput}\r\n          value={tcgPriceValue}\r\n          fullWidth\r\n          onChange={(event) => setTcgPriceValue(event.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <EnhancedInputAdornment position='start'>\r\n                {'$'}\r\n              </EnhancedInputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </EnhancedContainer>\r\n\r\n      {/* GAIN */}\r\n\r\n      <EnhancedContainer\r\n        className={`${classes.container} ${classes.operandValue}`}\r\n      >\r\n        <EnhancedTextField\r\n          dataTest='textfield-operand-select'\r\n          select\r\n          label='Gain / Loss'\r\n          value={gainOperator}\r\n          onChange={(event) => setGainOperator(event.target.value)}\r\n          className={classes.selectOperand}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        >\r\n          {Operands.map((option) => {\r\n            return (\r\n              <MenuItem\r\n                className={classes.menuItem}\r\n                key={option.value}\r\n                value={option.value}\r\n              >\r\n                {option.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </EnhancedTextField>\r\n        <EnhancedTextField\r\n          dataTest='textfield-gain-loss'\r\n          className={classes.spreadInput}\r\n          value={gainValue}\r\n          fullWidth\r\n          onChange={(event) => setGainValue(event.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <EnhancedInputAdornment position='start'>\r\n                {'$'}\r\n              </EnhancedInputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </EnhancedContainer>\r\n\r\n      {/* SPREAD */}\r\n\r\n      <EnhancedContainer\r\n        className={`${classes.container} ${classes.operandValue}`}\r\n      >\r\n        <EnhancedTextField\r\n          dataTest='textfield-operand-select'\r\n          select\r\n          value={spreadOperator}\r\n          onChange={(event) => setSpreadOperator(event.target.value)}\r\n          label='Spread'\r\n          className={classes.selectOperand}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        >\r\n          {Operands.map((option) => {\r\n            return (\r\n              <MenuItem\r\n                className={classes.menuItem}\r\n                key={option.value}\r\n                value={option.value}\r\n              >\r\n                {option.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </EnhancedTextField>\r\n        <EnhancedTextField\r\n          dataTest='textfield-spread'\r\n          className={classes.spreadInput}\r\n          value={spreadValue}\r\n          fullWidth\r\n          onChange={(event) => setSpreadValue(event.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <EnhancedInputAdornment position='start'>\r\n                {'%'}\r\n              </EnhancedInputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </EnhancedContainer>\r\n\r\n      {/* DATE FROM */}\r\n\r\n      <EnhancedDatepicker\r\n        label='Date From'\r\n        value={dateFrom}\r\n        fullWidth\r\n        onChange={(event) => setDateFrom(event.target.value)}\r\n      />\r\n\r\n      {/* DATE TO */}\r\n\r\n      <EnhancedDatepicker\r\n        label='Date To'\r\n        value={dateTo}\r\n        fullWidth\r\n        onChange={(event) => setDateTo(event.target.value)}\r\n      />\r\n\r\n      <EnhancedContainer disableGutters>\r\n        <EnhancedButton\r\n          className={classes.button}\r\n          buttonText='Submit'\r\n          onClick={handleSubmit}\r\n        />\r\n\r\n        <EnhancedButton\r\n          className={classes.button}\r\n          tertiary\r\n          buttonText='Clear All'\r\n          onClick={handleClearAll}\r\n        />\r\n      </EnhancedContainer>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SideBarFilterForm;\r\n","export const tcgLow = 'low_price';\r\nexport const tcgMid = 'mid_price';\r\nexport const tcgHigh = 'high_price';\r\nexport const tcgMarket = 'market_price';\r\n","import React from 'react';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  tcgLow,\r\n  tcgMid,\r\n  tcgHigh,\r\n  tcgMarket,\r\n} from '../constants/tcgPriceCategories';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    formControl: {\r\n      color: theme.palette.text.primary,\r\n      width: '100%',\r\n      '& .MuiFormLabel-root.Mui-focused': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n    },\r\n    formControlLabel: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      fontSize: theme.typography.fontSize,\r\n      marginLeft: '0',\r\n    },\r\n    radio: {\r\n      color: theme.palette.custom.darkGray,\r\n      '&$checked': {\r\n        color: theme.palette.primary.light,\r\n      },\r\n    },\r\n    checked: {},\r\n  };\r\n});\r\n\r\nconst SideBarPriceRadios = (props) => {\r\n  const { priceCategory, handleChange } = { ...props };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FormControl className={classes.formControl} component='fieldset'>\r\n      <RadioGroup\r\n        aria-label='tcgPriceCategories'\r\n        name='tcgPriceCategories'\r\n        value={priceCategory}\r\n        onChange={(event) => handleChange(event)}\r\n        data-test='radio-group'\r\n      >\r\n        <FormControlLabel\r\n          value={tcgMarket}\r\n          classes={{\r\n            label: classes.formControlLabel,\r\n            root: classes.formControlLabel,\r\n          }}\r\n          control={\r\n            <Radio\r\n              classes={{\r\n                root: classes.radio,\r\n                checked: classes.checked,\r\n              }}\r\n              data-test='tcg-market-radio'\r\n            />\r\n          }\r\n          label='TCG Market'\r\n          labelPlacement='start'\r\n        />\r\n        <FormControlLabel\r\n          value={tcgLow}\r\n          classes={{\r\n            label: classes.formControlLabel,\r\n            root: classes.formControlLabel,\r\n          }}\r\n          control={\r\n            <Radio\r\n              classes={{\r\n                root: classes.radio,\r\n                checked: classes.checked,\r\n              }}\r\n              data-test='tcg-low-radio'\r\n            />\r\n          }\r\n          label='TCG Low'\r\n          labelPlacement='start'\r\n        />\r\n        <FormControlLabel\r\n          value={tcgMid}\r\n          classes={{\r\n            label: classes.formControlLabel,\r\n            root: classes.formControlLabel,\r\n          }}\r\n          control={\r\n            <Radio\r\n              classes={{\r\n                root: classes.radio,\r\n                checked: classes.checked,\r\n              }}\r\n              data-test='tcg-mid-radio'\r\n            />\r\n          }\r\n          label='TCG Mid'\r\n          labelPlacement='start'\r\n        />\r\n        <FormControlLabel\r\n          value={tcgHigh}\r\n          classes={{\r\n            label: classes.formControlLabel,\r\n            root: classes.formControlLabel,\r\n          }}\r\n          control={\r\n            <Radio\r\n              classes={{\r\n                root: classes.radio,\r\n                checked: classes.checked,\r\n              }}\r\n              data-test='tcg-high-radio'\r\n            />\r\n          }\r\n          label='TCG High'\r\n          labelPlacement='start'\r\n        />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SideBarPriceRadios;\r\n","import React, { useState, useEffect } from 'react';\r\nimport EnhancedTextfield from '../component-library/mui/components/Form/TextField';\r\nimport EnhancedContainer from '../component-library/mui/components/Container';\r\nimport EnhancedTypography from '../component-library/mui/components/Typography';\r\nimport { getPriceSpread, roundTwoDecimals } from '../../utils';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport EnhancedInputAdornment from '../component-library/mui/components/Form/InputAdornment';\r\nimport { getPriceCategory } from '../../utils';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    textField: {\r\n      '& .MuiInputBase-input': {\r\n        // These both hide the up/down arrows in the input\r\n        '&::-webkit-outer-spin-button': {\r\n          '-webkit-appearance': 'none',\r\n          margin: '0',\r\n        },\r\n        '&::-webkit-inner-spin-button': {\r\n          '-webkit-appearance': 'none',\r\n          margin: '0',\r\n        },\r\n      },\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    inputContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      width: '100%',\r\n      '& .MuiInput-input': {\r\n        textAlign: 'right',\r\n        paddingRight: theme.spacing(1),\r\n      },\r\n    },\r\n    typography: {\r\n      maxWidth: '40%',\r\n    },\r\n    cardName: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      textAlign: 'center',\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nconst SideBarQuickCalculation = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    priceCategory,\r\n    priceCalc: { tcgPrice, purchasePrice, gain, spread, cardName },\r\n  } = {\r\n    ...props,\r\n  };\r\n\r\n  const [tcgValue, setTcgValue] = useState(tcgPrice); // Fixes switching between controlled / uncontrolled\r\n  const [purchaseValue, setPurchaseValue] = useState(purchasePrice);\r\n  const [gainValue, setGainValue] = useState(gain);\r\n  const [spreadValue, setSpreadValue] = useState(spread);\r\n  const [cardNameValue, setCardNameValue] = useState(cardName);\r\n\r\n  useEffect(() => {\r\n    setTcgValue(tcgPrice);\r\n    setPurchaseValue(purchasePrice);\r\n    setGainValue(gain);\r\n    setSpreadValue(spread);\r\n    setCardNameValue(cardName);\r\n  }, [tcgPrice, purchasePrice, gain, spread, cardName]);\r\n\r\n  const handleTcgChange = (event) => {\r\n    const updatedValue = event.target.value;\r\n    setTcgValue(updatedValue);\r\n    if (purchaseValue) {\r\n      setGainValue(updatedValue - purchaseValue || '');\r\n      setSpreadValue(getPriceSpread(updatedValue, purchaseValue) || '');\r\n    }\r\n  };\r\n\r\n  const handlePurchaseChange = (event) => {\r\n    const updatedValue = event.target.value;\r\n    setPurchaseValue(updatedValue);\r\n    if (tcgValue) {\r\n      setGainValue(roundTwoDecimals(tcgValue - updatedValue) || '');\r\n      setSpreadValue(getPriceSpread(tcgValue, updatedValue) || '');\r\n    }\r\n  };\r\n\r\n  const handleGainChange = (event) => {\r\n    const updatedValue = event.target.value;\r\n    setGainValue(updatedValue);\r\n    if (purchaseValue) {\r\n      const newTcgValue = roundTwoDecimals(\r\n        parseFloat(purchaseValue) + parseFloat(updatedValue)\r\n      );\r\n      setTcgValue(newTcgValue || '');\r\n      setSpreadValue(\r\n        getPriceSpread(newTcgValue, parseFloat(purchaseValue)) || ''\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSpreadChange = (event) => {\r\n    const updatedValue = event.target.value;\r\n    setSpreadValue(updatedValue);\r\n    if (purchaseValue) {\r\n      const newTcgValue = roundTwoDecimals(\r\n        parseFloat(purchaseValue) +\r\n          parseFloat(purchaseValue) * parseFloat(updatedValue / 100)\r\n      );\r\n      setTcgValue(newTcgValue || '');\r\n      setGainValue(\r\n        roundTwoDecimals(newTcgValue - parseFloat(purchaseValue)) || ''\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <EnhancedContainer className={classes.container} disableGutters>\r\n      <div className={classes.inputContainer}>\r\n        <EnhancedTextfield\r\n          dataTest='quick-calc-tcg'\r\n          type='number'\r\n          value={tcgValue}\r\n          label={getPriceCategory(priceCategory)}\r\n          fullWidth\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <EnhancedInputAdornment position='start'>\r\n                {'$'}\r\n              </EnhancedInputAdornment>\r\n            ),\r\n          }}\r\n          onChange={handleTcgChange}\r\n          className={classes.textField}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.inputContainer}>\r\n        <EnhancedTextfield\r\n          dataTest='quick-calc-purchase'\r\n          type='number'\r\n          value={purchaseValue}\r\n          label={'Purchase Price'}\r\n          fullWidth\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <EnhancedInputAdornment position='start'>\r\n                {'$'}\r\n              </EnhancedInputAdornment>\r\n            ),\r\n          }}\r\n          onChange={handlePurchaseChange}\r\n          className={classes.textField}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.inputContainer}>\r\n        <EnhancedTextfield\r\n          dataTest='quick-calc-gain'\r\n          type='number'\r\n          value={gainValue}\r\n          label={'Gain / Loss'}\r\n          fullWidth\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <EnhancedInputAdornment position='start'>\r\n                {'$'}\r\n              </EnhancedInputAdornment>\r\n            ),\r\n          }}\r\n          onChange={handleGainChange}\r\n          className={classes.textField}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.inputContainer}>\r\n        <EnhancedTextfield\r\n          dataTest='quick-calc-spread'\r\n          type='number'\r\n          value={spreadValue}\r\n          label={'Spread'}\r\n          fullWidth\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <EnhancedInputAdornment position='start'>\r\n                {'%'}\r\n              </EnhancedInputAdornment>\r\n            ),\r\n          }}\r\n          onChange={handleSpreadChange}\r\n          className={classes.textField}\r\n        />\r\n      </div>\r\n      <div className={classes.cardName}>\r\n        <EnhancedTypography bold>{cardNameValue}</EnhancedTypography>\r\n      </div>\r\n    </EnhancedContainer>\r\n  );\r\n};\r\n\r\nexport default SideBarQuickCalculation;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport EnhancedIconButton from '../component-library/mui/components/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport SideBarFilterForm from './SideBarFilterForm';\r\nimport SideBarPriceRadios from './SideBarPriceRadios';\r\nimport SideBarQuickCalculation from './SideBarQuickCalculation';\r\nimport EnhancedTooltip from '../component-library/mui/components/Tooltip';\r\n\r\nimport {\r\n  tcgLow,\r\n  tcgMid,\r\n  tcgHigh,\r\n  tcgMarket,\r\n} from '../constants/tcgPriceCategories';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n    cardActions: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      padding: 0,\r\n      // Gives small amount of padding when arrow is the last element in card\r\n      paddingBottom: (props) => !props.expanded && theme.spacing(1),\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    formLabel: {\r\n      color: theme.palette.text.primary,\r\n      textAlign: 'center',\r\n      fontSize: theme.typography.fontSize,\r\n      margin: `${theme.spacing(2)}px ${theme.spacing(1)}px`,\r\n      '&:nth-child(2)': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      '& .Mui-focused': {\r\n        display: 'none',\r\n      },\r\n    },\r\n    body1Text: {\r\n      fontSize: theme.typography.fontSize,\r\n    },\r\n    card: {\r\n      maxWidth: 345,\r\n      boxShadow: 'none',\r\n      border: '1px solid rgba(224, 224, 224, 1)',\r\n    },\r\n    cardContent: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      paddingTop: 0,\r\n      paddingBottom: 0,\r\n      '&:last-child': {\r\n        paddingBottom: 0,\r\n      },\r\n    },\r\n    filterCardContent: {\r\n      paddingTop: 0,\r\n    },\r\n  };\r\n});\r\n\r\nconst SideBar = (props) => {\r\n  const {\r\n    // STORE\r\n    priceCategory,\r\n    cardNamesAndSets,\r\n    filterValues,\r\n    priceCalc,\r\n\r\n    // ACTIONS\r\n    setPriceCategoryLow,\r\n    setPriceCategoryMid,\r\n    setPriceCategoryHigh,\r\n    setPriceCategoryMarket,\r\n    setFilterOptions,\r\n    clearFilterOptions,\r\n\r\n    // PROPS\r\n    className,\r\n  } = { ...props };\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const classes = useStyles({ expanded });\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    switch (event.target.value) {\r\n      case tcgLow:\r\n        return setPriceCategoryLow();\r\n      case tcgMid:\r\n        return setPriceCategoryMid();\r\n      case tcgHigh:\r\n        return setPriceCategoryHigh();\r\n      case tcgMarket:\r\n        return setPriceCategoryMarket();\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const getLabel = () => {\r\n    return expanded ? 'Filter Options' : 'TCG Price Categories';\r\n  };\r\n\r\n  return (\r\n    <div data-test='SideBar' className={classes.root}>\r\n      <Card\r\n        name='sideNav'\r\n        className={className}\r\n        classes={{\r\n          root: classes.card,\r\n        }}\r\n      >\r\n        <FormLabel className={classes.formLabel} component='div'>\r\n          {getLabel()}\r\n        </FormLabel>\r\n        <Collapse in={!expanded} timeout='auto'>\r\n          <CardContent className={classes.cardContent}>\r\n            <SideBarPriceRadios\r\n              priceCategory={priceCategory}\r\n              handleChange={handleChange}\r\n            />\r\n            <EnhancedTooltip\r\n              title='TCG Price - Purchase Price = Gain / Spread'\r\n              placement='bottom'\r\n              arrow\r\n            >\r\n              <FormLabel className={classes.formLabel} component='legend'>\r\n                Quick Calculation\r\n              </FormLabel>\r\n            </EnhancedTooltip>\r\n            <SideBarQuickCalculation\r\n              priceCategory={priceCategory}\r\n              priceCalc={priceCalc}\r\n            />\r\n          </CardContent>\r\n        </Collapse>\r\n        <CardActions\r\n          classes={{\r\n            root: classes.cardActions,\r\n          }}\r\n          disableSpacing\r\n        >\r\n          <EnhancedIconButton\r\n            className={clsx(classes.expand, {\r\n              [classes.expandOpen]: expanded,\r\n            })}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label='show more'\r\n          >\r\n            <ExpandMoreIcon />\r\n          </EnhancedIconButton>\r\n        </CardActions>\r\n        <Collapse in={expanded}>\r\n          <CardContent className={classes.filterCardContent}>\r\n            <SideBarFilterForm\r\n              cardNamesAndSets={cardNamesAndSets}\r\n              priceCategory={priceCategory}\r\n              setFilterOptions={setFilterOptions}\r\n              clearFilterOptions={clearFilterOptions}\r\n              filterValues={filterValues}\r\n            />\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nconst EnhancedToolbar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { className } = { ...props };\r\n\r\n  return (\r\n    <Toolbar className={className} classes={{ root: classes.root }}>\r\n      {props.children}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default EnhancedToolbar;\r\n","import React from 'react';\r\nimport EnhancedToolbar from '../component-library/mui/components/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    toolbar: {},\r\n  };\r\n});\r\n\r\nconst CardsTableToolbar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <EnhancedToolbar className={classes.toolbar}>\r\n      <Grid container>\r\n        <Grid item xs={10}>\r\n          {/* Left Aligned Items Here */}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          {/* <TableDisplayIcons onClick={onClick} /> */}\r\n        </Grid>\r\n      </Grid>\r\n    </EnhancedToolbar>\r\n  );\r\n};\r\n\r\nexport default CardsTableToolbar;\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '../component-library/mui/components/Container';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\r\nimport EnhancedIconButton from '../component-library/mui/components/IconButton';\r\nimport EnhancedTooltip from '../component-library/mui/components/Tooltip';\r\n\r\nimport { cardDisplay, filterDisplay } from '../constants/tableDisplayIcons';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    icon: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n    iconActive: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      paddingRight: 0,\r\n      minHeight: 0,\r\n    },\r\n  };\r\n});\r\n\r\nconst TableDisplayIcons = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { activeDisplay, onClick } = { ...props };\r\n\r\n  const getClasses = (display) => {\r\n    if (display === activeDisplay) {\r\n      return classes.iconActive;\r\n    } else {\r\n      return classes.icon;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container} dataTest={'TableDisplayIcons'}>\r\n      <EnhancedTooltip title='Card View'>\r\n        <EnhancedIconButton\r\n          data-test='CardDisplayIcon'\r\n          className={getClasses(cardDisplay)}\r\n          onClick={() => onClick(cardDisplay)}\r\n        >\r\n          <ViewComfyIcon fontSize='large' />\r\n        </EnhancedIconButton>\r\n      </EnhancedTooltip>\r\n      <EnhancedTooltip title='Filter View'>\r\n        <EnhancedIconButton\r\n          data-test='FilterDisplayIcon'\r\n          className={getClasses(filterDisplay)}\r\n          onClick={() => onClick(filterDisplay)}\r\n        >\r\n          <ViewListIcon fontSize='large' />\r\n        </EnhancedIconButton>\r\n      </EnhancedTooltip>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TableDisplayIcons;\r\n","export const filterDisplay = 'filterDisplay';\r\nexport const cardDisplay = 'cardDisplay';\r\n","import React, { useState, useEffect } from 'react';\r\nimport EnhancedToolbar from '../component-library/mui/components/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableDisplayIcons from './TableDisplayIcons';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport EnhancedTextField from '../component-library/mui/components/Form/TextField';\r\nimport EnhancedTypography from '../component-library/mui/components/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { find } from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    selectContainer: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    select: {\r\n      width: '65%',\r\n    },\r\n    typography: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    toolbar: {\r\n      position: 'fixed',\r\n      width: `calc(100% - ${theme.spacing(4)}px)`,\r\n      background: theme.palette.primary.contrastText,\r\n      zIndex: 1,\r\n    },\r\n  };\r\n});\r\n\r\nconst SortOrderSelect = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const sortOptions = [\r\n    { label: 'Name - Ascending', id: 'cardName', direction: 'asc' },\r\n    { label: 'Name - Descending', id: 'cardName', direction: 'desc' },\r\n    { label: 'Date - Ascending', id: 'dateTo', direction: 'asc' },\r\n    { label: 'Date - Descending', id: 'dateTo', direction: 'desc' },\r\n    { label: 'Spread - Ascending', id: 'spread', direction: 'asc' },\r\n    { label: 'Spread - Descending', id: 'spread', direction: 'desc' },\r\n    { label: 'Gain - Ascending', id: 'gainLoss', direction: 'asc' },\r\n    { label: 'Gain - Descending', id: 'gainLoss', direction: 'desc' },\r\n    { label: 'TCG - Ascending', id: 'tcgPrice', direction: 'asc' },\r\n    { label: 'TCG - Descending', id: 'tcgPrice', direction: 'desc' },\r\n  ];\r\n\r\n  const { sortHandler, mobileSortValues } = { ...props };\r\n\r\n  const [selectValue, setSelectValue] = useState(mobileSortValues.label);\r\n\r\n  useEffect(() => {\r\n    setSelectValue(mobileSortValues.label);\r\n  }, [mobileSortValues, sortOptions]);\r\n\r\n  const createSortHandler = (label) => {\r\n    const findOption = find(sortOptions, ['label', label]);\r\n    sortHandler(findOption);\r\n  };\r\n\r\n  return (\r\n    <EnhancedTextField\r\n      dataTest='mobile-sort-select'\r\n      select\r\n      value={selectValue}\r\n      onChange={(event) => createSortHandler(event.target.value)}\r\n      className={classes.select}\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n    >\r\n      {sortOptions.map((option) => {\r\n        return (\r\n          <MenuItem key={option.label} value={option.label}>\r\n            {option.label}\r\n          </MenuItem>\r\n        );\r\n      })}\r\n    </EnhancedTextField>\r\n  );\r\n};\r\n\r\nconst CardsTableToolbarMobile = (props) => {\r\n  const classes = useStyles();\r\n  const { onClick, activeDisplay, sortHandler, mobileSortValues } = {\r\n    ...props,\r\n  };\r\n\r\n  return (\r\n    <EnhancedToolbar className={classes.toolbar}>\r\n      <Grid container>\r\n        <Grid className={classes.selectContainer} item xs={7}>\r\n          <EnhancedTypography className={classes.typography}>\r\n            {'Sort Order:'}\r\n          </EnhancedTypography>\r\n          <SortOrderSelect\r\n            mobileSortValues={mobileSortValues}\r\n            sortHandler={sortHandler}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={5}>\r\n          <TableDisplayIcons onClick={onClick} activeDisplay={activeDisplay} />\r\n        </Grid>\r\n      </Grid>\r\n    </EnhancedToolbar>\r\n  );\r\n};\r\n\r\nexport default CardsTableToolbarMobile;\r\n","import React, { useState } from 'react';\r\nimport CardsTable from './CardsTable';\r\nimport CardsTableMobile from './CardsTableMobile';\r\nimport SideBar from './SideBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardsTableToolbar from './CardsTableToolbar';\r\nimport CardsTableToolbarMobile from './CardsTableToolbarMobile';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport EnhancedContainer from '../component-library/mui/components/Container';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { cardDisplay } from '../constants/tableDisplayIcons';\r\nimport ToolbarMixin from '../component-library/mui/components/ToolbarMixin';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    grid: {\r\n      flexWrap: 'nowrap',\r\n    },\r\n    desktopSidebar: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    mixin: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  };\r\n});\r\n\r\nconst MobileTable = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [activeDisplay, setActiveDisplay] = useState(cardDisplay);\r\n  const [mobileSortValues, setMobileSortValues] = useState({\r\n    label: 'Spread - Descending',\r\n    id: 'spread',\r\n    direction: 'desc',\r\n  });\r\n\r\n  const sortHandler = (sort) => {\r\n    setMobileSortValues(sort);\r\n  };\r\n\r\n  const {\r\n    // STORE\r\n    cards,\r\n    priceCategory,\r\n    isLoadingCards,\r\n    cardNamesAndSets,\r\n    filterValues,\r\n    priceCalc,\r\n\r\n    // ACTIONS\r\n    setPriceCategoryLow,\r\n    setPriceCategoryMid,\r\n    setPriceCategoryHigh,\r\n    setPriceCategoryMarket,\r\n    setFilterOptions,\r\n    clearFilterOptions,\r\n    setPriceCalc,\r\n  } = { ...props };\r\n\r\n  const handleDisplayChange = (display) => {\r\n    setActiveDisplay(display);\r\n  };\r\n\r\n  return (\r\n    <EnhancedContainer disableGutters dataTest='mobile-table-container'>\r\n      <CardsTableToolbarMobile\r\n        onClick={handleDisplayChange}\r\n        activeDisplay={activeDisplay}\r\n        sortHandler={sortHandler}\r\n        mobileSortValues={mobileSortValues}\r\n      />\r\n      <EnhancedContainer\r\n        disableGutters\r\n        className={classes.mobileContainer}\r\n        dataTest='mobile-body-container'\r\n      >\r\n        <ToolbarMixin className={classes.mixin}>\r\n          {activeDisplay === cardDisplay ? (\r\n            <CardsTableMobile\r\n              cards={cards}\r\n              isLoadingCards={isLoadingCards}\r\n              priceCategory={priceCategory}\r\n              filterValues={filterValues}\r\n              setFilterOptions={setFilterOptions}\r\n              clearFilterOptions={clearFilterOptions}\r\n              setPriceCalc={setPriceCalc}\r\n              mobileSortValues={mobileSortValues}\r\n            />\r\n          ) : (\r\n            <SideBar\r\n              priceCategory={priceCategory}\r\n              setPriceCategoryLow={setPriceCategoryLow}\r\n              setPriceCategoryMid={setPriceCategoryMid}\r\n              setPriceCategoryHigh={setPriceCategoryHigh}\r\n              setPriceCategoryMarket={setPriceCategoryMarket}\r\n              cardNamesAndSets={cardNamesAndSets}\r\n              setFilterOptions={setFilterOptions}\r\n              clearFilterOptions={clearFilterOptions}\r\n              filterValues={filterValues}\r\n              priceCalc={priceCalc}\r\n            />\r\n          )}\r\n        </ToolbarMixin>\r\n      </EnhancedContainer>\r\n    </EnhancedContainer>\r\n  );\r\n};\r\n\r\nconst DesktopTable = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    // STORE\r\n    cards,\r\n    priceCategory,\r\n    isLoadingCards,\r\n    cardNamesAndSets,\r\n    filterValues,\r\n    priceCalc,\r\n\r\n    // ACTIONS\r\n    setPriceCategoryLow,\r\n    setPriceCategoryMid,\r\n    setPriceCategoryHigh,\r\n    setPriceCategoryMarket,\r\n    setFilterOptions,\r\n    clearFilterOptions,\r\n    setPriceCalc,\r\n  } = { ...props };\r\n\r\n  return (\r\n    <EnhancedContainer disableGutters dataTest='desktop-table-container'>\r\n      <CardsTableToolbar onClick={() => {}} />\r\n      <Grid container className={classes.grid}>\r\n        <Grid item xs={2}>\r\n          <SideBar\r\n            className={classes.desktopSidebar}\r\n            priceCategory={priceCategory}\r\n            setPriceCategoryLow={setPriceCategoryLow}\r\n            setPriceCategoryMid={setPriceCategoryMid}\r\n            setPriceCategoryHigh={setPriceCategoryHigh}\r\n            setPriceCategoryMarket={setPriceCategoryMarket}\r\n            cardNamesAndSets={cardNamesAndSets}\r\n            setFilterOptions={setFilterOptions}\r\n            clearFilterOptions={clearFilterOptions}\r\n            filterValues={filterValues}\r\n            priceCalc={priceCalc}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <CardsTable\r\n            cards={cards}\r\n            isLoadingCards={isLoadingCards}\r\n            priceCategory={priceCategory}\r\n            filterValues={filterValues}\r\n            setFilterOptions={setFilterOptions}\r\n            clearFilterOptions={clearFilterOptions}\r\n            setPriceCalc={setPriceCalc}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </EnhancedContainer>\r\n  );\r\n};\r\n\r\nconst CardsView = (props) => {\r\n  const {\r\n    // STORE\r\n    cards,\r\n    priceCategory,\r\n    isLoadingCards,\r\n    cardNamesAndSets,\r\n    filterValues,\r\n    priceCalc,\r\n\r\n    // ACTIONS\r\n    setPriceCategoryLow,\r\n    setPriceCategoryMid,\r\n    setPriceCategoryHigh,\r\n    setPriceCategoryMarket,\r\n    setFilterOptions,\r\n    clearFilterOptions,\r\n    setPriceCalc,\r\n  } = {\r\n    ...props,\r\n  };\r\n\r\n  // Returns true if viewport >= 960px\r\n  const matches = useMediaQuery('(min-width:960px)');\r\n\r\n  return (\r\n    <div data-test='cardsView'>\r\n      {!matches ? (\r\n        <MobileTable\r\n          cards={cards}\r\n          priceCategory={priceCategory}\r\n          isLoadingCards={isLoadingCards}\r\n          cardNamesAndSets={cardNamesAndSets}\r\n          filterValues={filterValues}\r\n          priceCalc={priceCalc}\r\n          setPriceCategoryLow={setPriceCategoryLow}\r\n          setPriceCategoryMid={setPriceCategoryMid}\r\n          setPriceCategoryHigh={setPriceCategoryHigh}\r\n          setPriceCategoryMarket={setPriceCategoryMarket}\r\n          setFilterOptions={setFilterOptions}\r\n          clearFilterOptions={clearFilterOptions}\r\n          setPriceCalc={setPriceCalc}\r\n        />\r\n      ) : (\r\n        <DesktopTable\r\n          priceCategory={priceCategory}\r\n          setPriceCategoryLow={setPriceCategoryLow}\r\n          setPriceCategoryMid={setPriceCategoryMid}\r\n          setPriceCategoryHigh={setPriceCategoryHigh}\r\n          setPriceCategoryMarket={setPriceCategoryMarket}\r\n          cardNamesAndSets={cardNamesAndSets}\r\n          setFilterOptions={setFilterOptions}\r\n          clearFilterOptions={clearFilterOptions}\r\n          filterValues={filterValues}\r\n          priceCalc={priceCalc}\r\n          cards={cards}\r\n          isLoadingCards={isLoadingCards}\r\n          setPriceCalc={setPriceCalc}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsView;\r\n","import axios from 'axios';\r\nconst REACT_APP_BASE_API_URL =\r\n  process.env.REACT_APP_BASE_API_URL ||\r\n  'https://mtgpricetracker.herokuapp.com/api/purchase_tracking/cards';\r\n\r\nexport const axiosGET = (params = '/?limit=100000') => {\r\n  return axios.get(REACT_APP_BASE_API_URL + params);\r\n};\r\n","import { normalize, schema } from 'normalizr';\r\n\r\n// Card schema, the string will be the key for our entitiy.\r\nconst card = new schema.Entity('cards');\r\n\r\n// Because we are taking in an array of cards as our payload, we can use shorthand to define a schema for an array\r\n// longhand: myCardsSchema = new schema.Array(card);\r\nconst myCardsSchema = [card];\r\n\r\nconst cardsNormalizedData = (originalData) =>\r\n  normalize(originalData, myCardsSchema);\r\n\r\nexport default cardsNormalizedData;\r\n","import { normalize, schema } from 'normalizr';\r\n\r\n// Shema for the tcg_price entity\r\nconst tcgPrice = new schema.Entity('tcg_price');\r\n\r\n// Shema for the spec_prices entity\r\nconst specPrices = new schema.Entity('spec_prices');\r\n\r\n// The keys of the schema object must be the same as the keys of the incoming payload\r\n// Whole card object schema, replacing tcg_price/spec_prices with the schema defined above\r\nconst card = new schema.Entity('card', {\r\n  tcg_price: tcgPrice,\r\n  spec_prices: [specPrices],\r\n});\r\n\r\nconst cardsNormalizedData = (originalData) => normalize(originalData, card);\r\n\r\nexport default cardsNormalizedData;\r\n","import {\r\n  FETCH_CARDS_DATA_SUCCESSFUL,\r\n  FETCH_CARDS_DATA_FAILED,\r\n  FETCH_CARD_DATA_SUCCESSFUL,\r\n  FETCH_CARD_DATA_FAILED,\r\n  SET_CARD_DATA_SUCCESSFUL,\r\n  SET_CARD_DATA_FAILED,\r\n  SET_COLLECTION_PRICE,\r\n  SET_FILTER_OPTIONS,\r\n  CLEAR_FILTER_OPTIONS,\r\n  SET_PRICE_CALC,\r\n  IS_LOADING_CARDS_TRUE,\r\n  IS_LOADING_CARDS_FALSE,\r\n  IS_LOADING_CARD_TRUE,\r\n  IS_LOADING_CARD_FALSE,\r\n  SET_SPEC_PRICES_SUCCESSFUL,\r\n  // SET_SPEC_PRICES_FAILED,\r\n  SET_TCG_PRICES_SUCCESSFUL,\r\n  // SET_TCG_PRICES_FAILED,\r\n  SET_PRICE_CATEGORY_LOW,\r\n  SET_PRICE_CATEGORY_MID,\r\n  SET_PRICE_CATEGORY_HIGH,\r\n  SET_PRICE_CATEGORY_MARKET,\r\n} from './actionTypes';\r\n\r\nimport { axiosGET } from '../axios';\r\n\r\nimport { isEmpty } from 'lodash';\r\n\r\nimport cardsNormalizr from '../normalizr/cardsNormalizr';\r\nimport cardNormalizr from '../normalizr/cardNormalizr';\r\n\r\nimport {\r\n  tcgLow,\r\n  tcgMid,\r\n  tcgHigh,\r\n  tcgMarket,\r\n} from '../js/constants/tcgPriceCategories';\r\n\r\n/*** CARD(S) ***/\r\n\r\n// Intermediary action creator\r\nexport const fetchCards = (params) => (dispatch) => {\r\n  // Other operations here\r\n  dispatch(isLoadingCardsTrue());\r\n  dispatch(fetchCardsData(params));\r\n};\r\n\r\n// Fetches all card data\r\nexport const fetchCardsData = (params) => (dispatch) => {\r\n  return axiosGET(params)\r\n    .then((res) => {\r\n      // Input JSON (or plain JS object) data that needs normalization.\r\n\r\n      const normalizedResponse = cardsNormalizr(res.data.results);\r\n\r\n      dispatch({\r\n        type: FETCH_CARDS_DATA_SUCCESSFUL,\r\n        payload: normalizedResponse,\r\n      });\r\n\r\n      dispatch(setCollectionPrice());\r\n\r\n      dispatch(isLoadingCardsFalse());\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: FETCH_CARDS_DATA_FAILED, payload: err });\r\n      console.error(err);\r\n      dispatch(isLoadingCardsFalse());\r\n    });\r\n};\r\n\r\n/*** CARD ***/\r\n\r\n// Intermediary action creator\r\nexport const fetchSingleCard = (id) => (dispatch, getState) => {\r\n  const { entities } = getState().cardsReducer;\r\n  const singleCardId = getState().cardReducer.id; // Gets ID from card in cardReducer\r\n\r\n  dispatch(isLoadingCardTrue());\r\n\r\n  if (isEmpty(entities)) {\r\n    dispatch(fetchCardsData()); // Fetch all cards to populate main view, ie if user refreshes the page on single view we should fetch all cards for main view\r\n    dispatch(fetchSingleCardData(id)); // Fetch the single card, for single view\r\n  } else if (toString(singleCardId) !== toString(id)) {\r\n    // Set the single card if we do not have that card in memory\r\n    dispatch(setSingleCard(id));\r\n  }\r\n};\r\n\r\nexport const fetchSingleCardData = (id) => (dispatch) => {\r\n  return axiosGET('/' + id + '/')\r\n    .then((res) => {\r\n      const normalizedResponse = cardNormalizr(res.data);\r\n      const result = normalizedResponse.result;\r\n\r\n      const cardEntity = normalizedResponse.entities.card[result]; // Just the object, no need for a pointer\r\n      const specPricesEntity = normalizedResponse.entities.spec_prices;\r\n      const tcgPriceEntity = normalizedResponse.entities.tcg_price;\r\n\r\n      dispatch({\r\n        type: FETCH_CARD_DATA_SUCCESSFUL,\r\n        payload: cardEntity,\r\n      });\r\n      dispatch(setSpecPricesSuccessful(specPricesEntity));\r\n      dispatch(setTcgPricesSuccessful(tcgPriceEntity));\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: FETCH_CARD_DATA_FAILED, payload: error });\r\n      dispatch(isLoadingCardFalse());\r\n    });\r\n};\r\n\r\nexport const setSingleCard = (singleId) => (dispatch, getState) => {\r\n  try {\r\n    const singleCard = getState().cardsReducer.entities.cards[singleId]; // Get the card from local state\r\n    const normalizedResponse = cardNormalizr(singleCard); // Normalize\r\n    const result = normalizedResponse.result; // Get the id of the card\r\n\r\n    const cardEntity = normalizedResponse.entities.card[result]; // Just the object, no need for a pointer\r\n    const specPricesEntity = normalizedResponse.entities.spec_prices;\r\n    const tcgPriceEntity = normalizedResponse.entities.tcg_price;\r\n\r\n    dispatch({ type: SET_CARD_DATA_SUCCESSFUL, payload: cardEntity });\r\n    dispatch(setSpecPricesSuccessful(specPricesEntity));\r\n    dispatch(setTcgPricesSuccessful(tcgPriceEntity));\r\n  } catch (error) {\r\n    dispatch({ type: SET_CARD_DATA_FAILED, payload: error });\r\n  }\r\n};\r\n\r\n/*** FILTER ***/\r\n\r\nexport const setFilterOptions = (payload) => async (dispatch) => {\r\n  await dispatch(isLoadingCardsTrue());\r\n  await dispatch({ type: SET_FILTER_OPTIONS, payload });\r\n  dispatch(isLoadingCardsFalse());\r\n};\r\n\r\nexport const clearFilterOptions = () => {\r\n  return { type: CLEAR_FILTER_OPTIONS };\r\n};\r\n\r\n/*** PRICE CALC ***/\r\n\r\nexport const setPriceCalc = (payload) => {\r\n  return { type: SET_PRICE_CALC, payload };\r\n};\r\n\r\n/*** STATE MANAGEMENT ***/\r\n\r\nexport const isLoadingCardsTrue = () => {\r\n  return { type: IS_LOADING_CARDS_TRUE };\r\n};\r\n\r\nexport const isLoadingCardsFalse = () => {\r\n  return { type: IS_LOADING_CARDS_FALSE };\r\n};\r\n\r\nexport const isLoadingCardTrue = () => {\r\n  return { type: IS_LOADING_CARD_TRUE };\r\n};\r\n\r\nexport const isLoadingCardFalse = () => {\r\n  return { type: IS_LOADING_CARD_FALSE };\r\n};\r\n\r\n/*** SPEC PRICES ***/\r\n\r\nexport const setSpecPricesSuccessful = (specPrices) => {\r\n  return { type: SET_SPEC_PRICES_SUCCESSFUL, payload: specPrices };\r\n};\r\n\r\n// Might be useful in the future\r\n// export const setSpecPricesFailed = () => {\r\n//   return { type: SET_SPEC_PRICES_FAILED };\r\n// };\r\n\r\n/*** TCG PRICES ***/\r\n\r\nexport const setTcgPricesSuccessful = (tcgPrices) => {\r\n  return { type: SET_TCG_PRICES_SUCCESSFUL, payload: tcgPrices };\r\n};\r\n\r\n// Might be useful in the future\r\n// export const setTcgPricesFailed = () => {\r\n//   return { type: SET_TCG_PRICES_FAILED };\r\n// };\r\n\r\n/*** TCG CATEGORIES***/\r\n\r\nexport const setPriceCategoryLow = () => {\r\n  return { type: SET_PRICE_CATEGORY_LOW };\r\n};\r\n\r\nexport const setPriceCategoryMid = () => {\r\n  return { type: SET_PRICE_CATEGORY_MID };\r\n};\r\n\r\nexport const setPriceCategoryHigh = () => {\r\n  return { type: SET_PRICE_CATEGORY_HIGH };\r\n};\r\n\r\nexport const setPriceCategoryMarket = () => {\r\n  return { type: SET_PRICE_CATEGORY_MARKET };\r\n};\r\n\r\nexport const setCollectionPrice = () => (dispatch, getState) => {\r\n  const cardEntities = getState().cardsReducer.entities.cards; // obj of obj\r\n  const cardResults = getState().cardsReducer.result; // array of id\r\n\r\n  try {\r\n    let low = 0;\r\n    let mid = 0;\r\n    let high = 0;\r\n    let market = 0;\r\n\r\n    for (let card of cardResults) {\r\n      if (\r\n        cardEntities[card].spec_prices.length &&\r\n        cardEntities[card].tcg_price\r\n      ) {\r\n        let quantity = 0;\r\n\r\n        cardEntities[card].spec_prices.forEach(\r\n          (spec) => (quantity += spec.quantity)\r\n        );\r\n\r\n        low += quantity * parseFloat(cardEntities[card].tcg_price[tcgLow]) || 0;\r\n        mid += quantity * parseFloat(cardEntities[card].tcg_price[tcgMid]) || 0;\r\n        high +=\r\n          quantity * parseFloat(cardEntities[card].tcg_price[tcgHigh]) || 0;\r\n        market +=\r\n          quantity * parseFloat(cardEntities[card].tcg_price[tcgMarket]) || 0;\r\n      }\r\n    }\r\n\r\n    let formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n\r\n      // These options are needed to round to whole numbers if that's what you want.\r\n      //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n      //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n    });\r\n\r\n    const payload = {\r\n      [tcgLow]: formatter.format(low.toFixed(2)),\r\n      [tcgMid]: formatter.format(mid.toFixed(2)),\r\n      [tcgHigh]: formatter.format(high.toFixed(2)),\r\n      [tcgMarket]: formatter.format(market.toFixed(2)),\r\n    };\r\n\r\n    dispatch({\r\n      type: SET_COLLECTION_PRICE,\r\n      payload,\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","// CARD(S)\r\nexport const FETCH_CARDS_DATA_SUCCESSFUL = 'FETCH_CARDS_DATA_SUCCESSFUL';\r\nexport const FETCH_CARDS_DATA_FAILED = 'FETCH_CARDS_DATA_FAILED';\r\nexport const SET_COLLECTION_PRICE = 'SET_COLLECTION_PRICE';\r\n\r\n// CARD\r\nexport const FETCH_CARD_DATA_SUCCESSFUL = 'FETCH_CARD_DATA_SUCCESSFUL';\r\nexport const FETCH_CARD_DATA_FAILED = 'FETCH_CARD_DATA_FAILED';\r\nexport const SET_CARD_DATA_SUCCESSFUL = 'SET_CARD_DATA_SUCCESSFUL';\r\nexport const SET_CARD_DATA_FAILED = 'SET_CARD_DATA_FAILED';\r\n\r\n// FILTER\r\nexport const SET_FILTER_OPTIONS = 'SET_FILTER_OPTIONS';\r\nexport const CLEAR_FILTER_OPTIONS = 'CLEAR_FILTER_OPTIONS';\r\n\r\n// PRICE CALC\r\nexport const SET_PRICE_CALC = 'SET_PRICE_CALC';\r\n\r\n// STATE MANAGEMENT\r\nexport const IS_LOADING_CARDS_TRUE = 'IS_LOADING_CARDS_TRUE';\r\nexport const IS_LOADING_CARDS_FALSE = 'IS_LOADING_CARDS_FALSE';\r\nexport const IS_LOADING_CARD_TRUE = 'IS_LOADING_CARD_TRUE';\r\nexport const IS_LOADING_CARD_FALSE = 'IS_LOADING_CARD_FALSE';\r\n\r\n// SPEC PRICES\r\nexport const SET_SPEC_PRICES_SUCCESSFUL = 'SET_SPEC_PRICES_SUCCESSFUL';\r\nexport const SET_SPEC_PRICES_FAILED = 'SET_SPEC_PRICES_FAILED';\r\n\r\n// TCG PRICES\r\nexport const SET_TCG_PRICES_SUCCESSFUL = 'SET_TCG_PRICES_SUCCESSFUL';\r\nexport const SET_TCG_PRICES_FAILED = 'SET_TCG_PRICES_FAILED';\r\n\r\n// TCG CATEGORIES\r\nexport const SET_PRICE_CATEGORY_LOW = 'SET_PRICE_CATEGORY_LOW';\r\nexport const SET_PRICE_CATEGORY_MID = 'SET_PRICE_CATEGORY_MID';\r\nexport const SET_PRICE_CATEGORY_HIGH = 'SET_PRICE_CATEGORY_HIGH';\r\nexport const SET_PRICE_CATEGORY_MARKET = 'SET_PRICE_CATEGORY_MARKET';\r\n","import { createSelector } from 'reselect';\r\nimport {\r\n  getCardQuantity,\r\n  getAvgPurchasePrice,\r\n  gainLossCalc,\r\n  getPriceSpread,\r\n  roundTwoDecimals,\r\n  cardIsValid,\r\n  filterByReducer,\r\n} from '../utils';\r\n\r\nconst getCards = (state) => state.cardsReducer.entities.cards;\r\nconst getCardsResults = (state) => state.cardsReducer.result;\r\nconst getTcgPriceCategory = (state) => state.tcgPriceCategory;\r\nconst getFilterCategories = (state) => state.filterReducer;\r\n\r\nexport const cardsSelector = createSelector(\r\n  [getCards, getCardsResults, getTcgPriceCategory, getFilterCategories],\r\n  (cards, results, priceCategory, filterCategories) => {\r\n    return results.reduce((res, result) => {\r\n      const card = { ...cards[result] };\r\n\r\n      const isValid = cardIsValid(card);\r\n\r\n      if (!isValid) {\r\n        console.error(card);\r\n        // Reduce allows us to filter invalid cards by returning our current res\r\n        // This will be refactored to happen in the action, allowing us to display incomplete data\r\n        return res;\r\n      }\r\n\r\n      const tcgSellerDashboardUrl = `https://store.tcgplayer.com/admin/product/manage/${card.tcg_productId}`;\r\n\r\n      const avgPurchasePrice = getAvgPurchasePrice(card.spec_prices);\r\n      const tcgPrice = roundTwoDecimals(\r\n        parseFloat(card.tcg_price[priceCategory]) // Necessary, returns from DB as string\r\n      );\r\n      const gainLoss = gainLossCalc(tcgPrice, avgPurchasePrice);\r\n      const spread = getPriceSpread(tcgPrice, avgPurchasePrice);\r\n\r\n      const dateRange = card.spec_prices\r\n        .reduce((acc, price) => {\r\n          acc.push(price.date_purchased);\r\n          return acc;\r\n        }, [])\r\n        .sort();\r\n\r\n      const outObj = {\r\n        cardName: card.card_name,\r\n        foil: card.foil,\r\n        language: card.language,\r\n        setName: card.set_name,\r\n        tcgUrl: card.tcg_url,\r\n        tcgImageUrl: card.tcg_imageUrl,\r\n        tcgSellerDashboardUrl,\r\n        spread,\r\n        quantity: getCardQuantity(card.spec_prices),\r\n        avgPurchasePrice,\r\n        tcgPrice,\r\n        gainLoss,\r\n        dateFrom: dateRange[0],\r\n        dateTo: dateRange[dateRange.length - 1],\r\n      };\r\n\r\n      if (filterByReducer(filterCategories, outObj)) {\r\n        res.push(outObj);\r\n      }\r\n\r\n      return res;\r\n    }, []);\r\n  }\r\n);\r\n\r\nexport const cardNamesAndSets = createSelector(\r\n  [getCards, getCardsResults],\r\n  (cards, results) =>\r\n    results.map((result) => {\r\n      const card = { ...cards[result] };\r\n\r\n      return { name: card.card_name, set: card.set_name };\r\n    })\r\n);\r\n","import { connect } from 'react-redux';\r\nimport CardsView from '../components/CardsView';\r\nimport {\r\n  setPriceCategoryLow,\r\n  setPriceCategoryMid,\r\n  setPriceCategoryHigh,\r\n  setPriceCategoryMarket,\r\n  setFilterOptions,\r\n  clearFilterOptions,\r\n  setPriceCalc,\r\n} from '../../redux/actions';\r\nimport { cardsSelector, cardNamesAndSets } from '../../selectors/cardsSelector';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cards: cardsSelector(state),\r\n    cardNamesAndSets: cardNamesAndSets(state), // Array of objects, each card name and set\r\n    isLoadingCards: state.isLoadingReducer.cards,\r\n    priceCategory: state.tcgPriceCategory,\r\n    filterValues: state.filterReducer,\r\n    priceCalc: state.priceCalcReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setPriceCategoryLow: () => dispatch(setPriceCategoryLow()),\r\n    setPriceCategoryMid: () => dispatch(setPriceCategoryMid()),\r\n    setPriceCategoryHigh: () => dispatch(setPriceCategoryHigh()),\r\n    setPriceCategoryMarket: () => dispatch(setPriceCategoryMarket()),\r\n    setFilterOptions: (payload) => dispatch(setFilterOptions(payload)),\r\n    clearFilterOptions: () => dispatch(clearFilterOptions()),\r\n    setPriceCalc: (payload) => dispatch(setPriceCalc(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardsView);\r\n","import React, { useEffect } from 'react';\r\nimport { isEmpty } from 'lodash';\r\n\r\nconst SingleCardView = (props) => {\r\n  const {\r\n    card,\r\n    fetchSingleCard,\r\n    isLoadingCard,\r\n    isLoadingCardFalse,\r\n    match: {\r\n      params: { id },\r\n    },\r\n  } = {\r\n    ...props,\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSingleCard(id);\r\n  }, [fetchSingleCard, id]);\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(card) && isLoadingCard) {\r\n      isLoadingCardFalse();\r\n    }\r\n  }, [card, isLoadingCard, isLoadingCardFalse]);\r\n\r\n  return (\r\n    <div data-test='singleCardView'>\r\n      <div>Single Card View</div>\r\n      <div>isLoadingCard: {isLoadingCard.toString()}</div>\r\n      <div>card reducer: {JSON.stringify(card)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleCardView;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getCard = (state) => state.cardReducer;\r\nconst getSpecPrices = (state) => state.specPricesReducer;\r\nconst getTcgPrice = (state) => state.tcgPricesReducer;\r\n\r\nconst specPricesSelector = createSelector(\r\n  [getCard, getSpecPrices],\r\n  (card, specPrices) => {\r\n    try {\r\n      return card.spec_prices.map((specPriceId) => {\r\n        return {\r\n          // Select parts from specPrices object here\r\n          ...specPrices[specPriceId],\r\n        };\r\n      });\r\n    } catch {\r\n      return [];\r\n    }\r\n  }\r\n);\r\n\r\nconst tcgPriceSelector = createSelector(\r\n  [getCard, getTcgPrice],\r\n  (card, tcgPrices) => {\r\n    try {\r\n      return {\r\n        // Select parts from tcgPrice object here\r\n        ...tcgPrices[card.tcg_price],\r\n      };\r\n    } catch {\r\n      return {};\r\n    }\r\n  }\r\n);\r\n\r\nexport const cardSelector = createSelector(\r\n  [getCard, specPricesSelector, tcgPriceSelector],\r\n  (card, specPrices, tcgPrice) => {\r\n    // Do validation on Card schema\r\n\r\n    return {\r\n      // Select parts from card object here\r\n      ...card,\r\n      spec_prices: specPrices,\r\n      tcg_price: tcgPrice,\r\n    };\r\n  }\r\n);\r\n","import { connect } from 'react-redux';\r\nimport SingleCardView from '../components/SingleCardView';\r\nimport { fetchSingleCard, isLoadingCardFalse } from '../../redux/actions';\r\nimport { cardSelector } from '../../selectors/cardSelector';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    card: cardSelector(state),\r\n    isLoadingCard: state.isLoadingReducer.card,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchSingleCard: (params) => dispatch(fetchSingleCard(params)),\r\n    isLoadingCardFalse: () => dispatch(isLoadingCardFalse()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCardView);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport RouteMapper from './RouteMapper';\r\nimport CardsViewContainer from '../containers/CardsViewContainer';\r\nimport SingleCardViewContainer from '../containers/SingleCardViewContainer';\r\n\r\nconst InventoryRoutes = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path={RouteMapper.inventory.cards.path}\r\n        component={(routeProps) => <CardsViewContainer {...routeProps} />}\r\n      />\r\n\r\n      <Route\r\n        exact\r\n        path={RouteMapper.inventory.card.path}\r\n        component={(routeProps) => <SingleCardViewContainer {...routeProps} />}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default InventoryRoutes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InventoryRoutes from '../routes/InventoryRoutes';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nconst InventoryContainer = (props) => {\r\n  return (\r\n    <div data-test='inventory-container'>\r\n      <InventoryRoutes />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InventoryContainer);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport RouteMapper from './RouteMapper';\r\nimport HomePageContainer from '../containers/HomePageContainer';\r\nimport InventoryContainer from '../containers/InventoryContainer';\r\n\r\nconst Routes = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path={RouteMapper.home.path}\r\n        component={(routeProps) => <HomePageContainer {...routeProps} />}\r\n      />\r\n\r\n      <Route\r\n        path={RouteMapper.inventory.path}\r\n        component={(routeProps) => <InventoryContainer {...routeProps} />}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport HeaderNavigation from './HeaderNavigation';\r\nimport ToolbarMixin from '../component-library/mui/components/ToolbarMixin';\r\nimport Container from '../component-library/mui/components/Container';\r\nimport Routes from '../routes/Routes';\r\n\r\nconst MainView = (props) => {\r\n  const { fetchCards, collectionPrice, tcgPriceCategory } = { ...props };\r\n\r\n  useEffect(() => {\r\n    fetchCards('/?limit=800');\r\n    // fetchCards();\r\n  }, [fetchCards]);\r\n\r\n  const navTitle = 'Threshold MTG';\r\n\r\n  const collectionPriceTitle =\r\n    collectionPrice[tcgPriceCategory] &&\r\n    ` - ${collectionPrice[tcgPriceCategory]}`;\r\n\r\n  return (\r\n    <div data-test='mainView'>\r\n      <HeaderNavigation title={navTitle + collectionPriceTitle} />\r\n      <Container>\r\n        <ToolbarMixin>\r\n          <Routes />\r\n        </ToolbarMixin>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainView;\r\n","import { connect } from 'react-redux';\r\nimport MainView from '../components/MainView';\r\nimport { fetchCards } from '../../redux/actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    collectionPrice: state.collectionPriceReducer,\r\n    tcgPriceCategory: state.tcgPriceCategory,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCards: (params) => dispatch(fetchCards(params)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainView);\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1440,\r\n      xl: 1920,\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: 'rgba(82, 33, 110, 1)',\r\n      dark: '#2F133F',\r\n      light: 'rgba(127, 24, 127, 1)',\r\n      contrastText: '#fff',\r\n    },\r\n    custom: {\r\n      darkGray: 'rgba(125, 124, 122, 1)',\r\n      lightGray: 'rgba(224, 224, 224, 1)',\r\n      green: 'rgba(77, 139, 49, 1)',\r\n      red: 'rgba(219, 34, 42, 1)',\r\n      gold: 'rgba(243, 201, 105, 1)',\r\n      blue: 'rgba(86, 142, 163, 1)',\r\n    },\r\n    secondary: {\r\n      main: 'rgba(77, 170, 87, 1)',\r\n    },\r\n    text: { primary: '#000', secondary: '#fff' },\r\n    action: {\r\n      hover: 'rgba(82, 33, 110, .08)',\r\n    },\r\n  },\r\n  typography: {\r\n    htmlFontSize: 16,\r\n    fontSize: 14,\r\n    fontFamily: ['Raleway, sans-serif', 'Roboto, sans-serif'],\r\n  },\r\n  overrides: {\r\n    MuiInput: {\r\n      underline: {\r\n        '&:hover:not($disabled):not($active):before': {\r\n          borderColor: 'rgba(127, 24, 127, 1)',\r\n        },\r\n        '&:hover:not($disabled):not($active):after': {\r\n          borderColor: 'rgba(127, 24, 127, 1)',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport MainViewContainer from './containers/MainViewContainer';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './component-library/mui/mui-theme';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <MainViewContainer />\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  FETCH_CARDS_DATA_SUCCESSFUL,\r\n  FETCH_CARDS_DATA_FAILED,\r\n} from '../actionTypes';\r\n\r\n// Exporting for test purposes\r\nexport const initState = {\r\n  entities: {},\r\n  result: [],\r\n};\r\n\r\nconst cardsReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CARDS_DATA_SUCCESSFUL: {\r\n      return action.payload;\r\n    }\r\n    case FETCH_CARDS_DATA_FAILED:\r\n      return initState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardsReducer;\r\n","import {\r\n  FETCH_CARD_DATA_SUCCESSFUL,\r\n  FETCH_CARD_DATA_FAILED,\r\n  SET_CARD_DATA_SUCCESSFUL,\r\n  SET_CARD_DATA_FAILED,\r\n} from '../actionTypes';\r\n\r\n// Our init state for a single card should be an empty object, because we expect a single card entity\r\nexport const initState = {};\r\n\r\nconst cardReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CARD_DATA_SUCCESSFUL:\r\n    // Fallthrough\r\n    case SET_CARD_DATA_SUCCESSFUL:\r\n      return action.payload;\r\n    case FETCH_CARD_DATA_FAILED:\r\n    // Fallthrough\r\n    case SET_CARD_DATA_FAILED:\r\n      return initState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n","import {\r\n  IS_LOADING_CARDS_TRUE,\r\n  IS_LOADING_CARDS_FALSE,\r\n  IS_LOADING_CARD_TRUE,\r\n  IS_LOADING_CARD_FALSE,\r\n} from '../actionTypes';\r\n\r\nexport const initState = {\r\n  cards: false,\r\n  card: false,\r\n};\r\n\r\nconst isLoadingReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case IS_LOADING_CARDS_TRUE: {\r\n      return { ...state, cards: true };\r\n    }\r\n    case IS_LOADING_CARDS_FALSE: {\r\n      return { ...state, cards: false };\r\n    }\r\n    case IS_LOADING_CARD_TRUE: {\r\n      return { ...state, card: true };\r\n    }\r\n    case IS_LOADING_CARD_FALSE: {\r\n      return { ...state, card: false };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isLoadingReducer;\r\n","import {\r\n  SET_SPEC_PRICES_SUCCESSFUL,\r\n  SET_SPEC_PRICES_FAILED,\r\n} from '../actionTypes';\r\n\r\nexport const initState = {};\r\n\r\nconst specPricesReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SET_SPEC_PRICES_SUCCESSFUL: {\r\n      return action.payload;\r\n    }\r\n    case SET_SPEC_PRICES_FAILED: {\r\n      return initState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default specPricesReducer;\r\n","import {\r\n  SET_TCG_PRICES_SUCCESSFUL,\r\n  SET_TCG_PRICES_FAILED,\r\n} from '../actionTypes';\r\n\r\nexport const initState = {};\r\n\r\nconst tcgPricesReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SET_TCG_PRICES_SUCCESSFUL: {\r\n      return action.payload;\r\n    }\r\n    case SET_TCG_PRICES_FAILED: {\r\n      return initState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tcgPricesReducer;\r\n","import {\r\n  SET_PRICE_CATEGORY_LOW,\r\n  SET_PRICE_CATEGORY_MID,\r\n  SET_PRICE_CATEGORY_HIGH,\r\n  SET_PRICE_CATEGORY_MARKET,\r\n} from '../actionTypes';\r\n\r\nimport {\r\n  tcgLow,\r\n  tcgMid,\r\n  tcgHigh,\r\n  tcgMarket,\r\n} from '../../js/constants/tcgPriceCategories';\r\n\r\nexport const tcgPriceCategories = {\r\n  SET_PRICE_CATEGORY_LOW: tcgLow,\r\n  SET_PRICE_CATEGORY_MID: tcgMid,\r\n  SET_PRICE_CATEGORY_HIGH: tcgHigh,\r\n  SET_PRICE_CATEGORY_MARKET: tcgMarket,\r\n};\r\n\r\nconst initState = tcgPriceCategories[SET_PRICE_CATEGORY_MARKET];\r\n\r\nconst tcgPriceCategory = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRICE_CATEGORY_LOW:\r\n      return tcgPriceCategories[SET_PRICE_CATEGORY_LOW];\r\n    case SET_PRICE_CATEGORY_MID:\r\n      return tcgPriceCategories[SET_PRICE_CATEGORY_MID];\r\n    case SET_PRICE_CATEGORY_HIGH:\r\n      return tcgPriceCategories[SET_PRICE_CATEGORY_HIGH];\r\n    case SET_PRICE_CATEGORY_MARKET:\r\n      return tcgPriceCategories[SET_PRICE_CATEGORY_MARKET];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tcgPriceCategory;\r\n","import { SET_FILTER_OPTIONS, CLEAR_FILTER_OPTIONS } from '../actionTypes';\r\n\r\nconst initState = {\r\n  isFoil: false,\r\n  setName: null, // Must be null for autocomplete (console warnings)\r\n  cardName: null, // Must be null for autocomplete (console warnings)\r\n  spreadOperator: '',\r\n  spreadValue: '',\r\n  gainOperator: '',\r\n  gainValue: '',\r\n  tcgPriceOperator: '',\r\n  tcgPriceValue: '',\r\n  dateFrom: '',\r\n  dateTo: '',\r\n};\r\n\r\nconst filterReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SET_FILTER_OPTIONS:\r\n      return action.payload;\r\n    case CLEAR_FILTER_OPTIONS:\r\n      return initState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { SET_PRICE_CALC } from '../actionTypes';\r\n\r\nconst initState = {\r\n  tcgPrice: '',\r\n  purchasePrice: '',\r\n  gain: '',\r\n  spread: '',\r\n  cardName: '',\r\n};\r\n\r\nconst priceCalcReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRICE_CALC:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default priceCalcReducer;\r\n","import { SET_COLLECTION_PRICE } from '../actionTypes';\r\n\r\nimport {\r\n  tcgLow,\r\n  tcgMid,\r\n  tcgHigh,\r\n  tcgMarket,\r\n} from '../../js/constants/tcgPriceCategories';\r\n\r\nexport const tcgPriceCategories = {\r\n  SET_PRICE_CATEGORY_LOW: tcgLow,\r\n  SET_PRICE_CATEGORY_MID: tcgMid,\r\n  SET_PRICE_CATEGORY_HIGH: tcgHigh,\r\n  SET_PRICE_CATEGORY_MARKET: tcgMarket,\r\n};\r\n\r\nconst collectionPriceReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_COLLECTION_PRICE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  [tcgLow]: '',\r\n  [tcgMid]: '',\r\n  [tcgHigh]: '',\r\n  [tcgMarket]: '',\r\n};\r\n\r\nexport default collectionPriceReducer;\r\n","import { combineReducers } from 'redux';\r\nimport cardsReducer from './cardsReducer';\r\nimport cardReducer from './cardReducer';\r\nimport isLoadingReducer from './isLoadingReducer';\r\nimport specPricesReducer from './specPricesReducer';\r\nimport tcgPricesReducer from './tcgPricesReducer';\r\nimport tcgPriceCategory from './tcgPriceCategory';\r\nimport filterReducer from './filterReducer';\r\nimport priceCalcReducer from './priceCalcReducer';\r\nimport collectionPriceReducer from './collectionPriceReducer';\r\n\r\nexport default combineReducers({\r\n  tcgPriceCategory,\r\n  cardsReducer,\r\n  cardReducer,\r\n  isLoadingReducer,\r\n  specPricesReducer,\r\n  tcgPricesReducer,\r\n  filterReducer,\r\n  priceCalcReducer,\r\n  collectionPriceReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}